{"version":3,"sources":["image/cover.jpg","component/data/stress.csv","component/Graph.js","component/CRCP.js","App.js","reportWebVitals.js","index.js"],"names":["Graph","props","colorGreenRed","d3","domain","range","tip","d3tip","attr","offset","html","d","y","parseFloat","toFixed","x","init","recompute","n","data","state","rowIndexStress","row1","rows","push","parameter","F8","Math","pow","fatigue","F19","C24","C25","C18","i","j","row2","k","setState","parameterGraph","width","height","dataset","length","obj","xScale","yScale","xAxis","tickSizeInner","tickSizeOuter","tickPadding","yAxis","line","tableCreate","margin","top","right","bottom","left","stress","then","data_","prevProps","this","refs","svg","select","selectAll","call","classes","ref","className","transform","style","fontFamily","fontSize","map","r","cx","cy","fill","strokeWidth","stroke","Component","withStyles","theme","root","CRCP","handleNext","activeStep","handleBack","handleReset","stepsLength","finished","C19","F7","F16","F17","getGroupControl","actionsContainer","Button","disabled","onClick","button","variant","color","Container","maxWidth","Paper","elevation","Stepper","orientation","Step","StepLabel","StepContent","noValidate","autoComplete","Grid","container","spacing","item","xs","justify","TextField","id","label","defaultValue","multiline","alignItems","Typography","dot","flexGrow","Slider","value","onChange","event","newValue","min","max","valueLabelDisplay","type","square","resetContainer","marginTop","marginRight","marginBottom","padding","borderBottom","useStyles","makeStyles","menuButton","titleNav","title","cover","position","background","coverPic","backgroundSize","overflow","zIndex","App","React","useState","page","setPage","AppBar","Toolbar","Slide","direction","in","mountOnEnter","unmountOnExit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c076dad9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cover.43610a00.jpg\";","export default __webpack_public_path__ + \"static/media/stress.d2ebc577.csv\";","import React,{ Component } from 'react';\r\nimport './Graph.css';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Slider,Typography,Button,Paper,Stepper,Step,StepLabel,StepContent,TextField,Container} from '@material-ui/core';\r\nimport * as d3 from 'd3';\r\nimport { tip as d3tip } from \"d3-v6-tip\";\r\nimport stress from './data/stress.csv'\r\n\r\nconst styles = theme=> ({\r\n    root: {\r\n        width:'100%',\r\n        '& .MuiTextField-root': {\r\n            width: '100%',\r\n        },\r\n        '& input': {\r\n            width: '100%',\r\n        },\r\n    }\r\n});\r\n\r\nclass Graph extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        const margin = {top: 20, right: 80, bottom: 60, left: 120},\r\n            width = 900 - margin.left - margin.right,\r\n            height = 400 - margin.top - margin.bottom;\r\n\r\n        this.state={\r\n            margin,\r\n            width,\r\n            height,\r\n            row1:[],\r\n            rows:[],\r\n            init:true\r\n        }\r\n    }\r\n    colorGreenRed = d3.scaleLinear()\r\n        .domain([0, 25])\r\n        .range([\"#0f0\", \"#f00\"]);\r\n    tip = d3tip()\r\n        .attr('class', 'd3-tip')\r\n        .offset([-10, 0])\r\n        .html((d) =>{\r\n            var color =  this.colorGreenRed(d.y);\r\n            var html = \"#Punchouts per Mile: <span style='color:\"+color+\"; font-weight: bold'>\" + parseFloat(d.y).toFixed(2) + \"</span><br>\";\r\n            html += \"&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; Age (months):  <span style='color:white; font-weight: bold'>\" + d.x + \"</span>\";\r\n            return html;\r\n        });\r\n    componentDidMount() {\r\n        d3.tsv(stress).then(data_=>{\r\n            this.setState({data: data_});\r\n            this.recompute();\r\n            this.tableCreate();\r\n            this.parameterGraph();\r\n        });\r\n    }\r\n    init = true;\r\n    componentDidUpdate(prevProps) {\r\n        const init = ((this.props.init !== prevProps.init)&&this.props.init);\r\n        // console.log('-------------------------',init)\r\n        this.init = init||this.init;\r\n        // console.log('-------------------------this',this.init)\r\n        if ((this.props.parameter !== prevProps.parameter) ||this.init) {\r\n            this.recompute();\r\n            this.parameterGraph();\r\n            if (this.state.data && this.refs.svg && this.state.xAxis && this.state.yAxis) {\r\n                const svg = d3.select(this.refs.svg).select('g.content');\r\n                svg.selectAll(\".xaxis\")\r\n                    .attr(\"transform\", \"translate(0,\" + this.state.height + \")\")\r\n                    .call(this.state.xAxis);\r\n                svg.selectAll(\".yaxis\")\r\n                    .call(this.state.yAxis);\r\n                if (this.init&&this.state.dataset.length){\r\n                //     debugger\r\n                //     svg.selectAll(\".point\")\r\n                //         .data(this.state.dataset).enter()\r\n                //         .append(\"circle\")\r\n                //         .attr(\"class\", \"point\")\r\n                //         .attr(\"r\", 4)\r\n                //         .attr(\"cx\", (d)=>this.state.xScale(d.x))\r\n                //         .attr(\"cy\", (d)=> this.state.yScale(d.y))\r\n                //         .attr(\"fill\", (d)=> this.colorGreenRed(d.y))\r\n                //         .attr(\"stroke-width\", 0.5)\r\n                //         .attr(\"stroke\",\"#000\")\r\n                //         .on('mouseover', this.tip.show)\r\n                //         .on('mouseout', this.tip.hide)\r\n                //     svg.call(this.tip)\r\n                    this.init = false;}\r\n                // }else{\r\n                //     svg.selectAll(\".point\")\r\n                //         .data(this.state.dataset)\r\n                //         .attr(\"cx\", (d)=> this.state.xScale(d.x))\r\n                //         .attr(\"cy\", (d,i)=>this.state.yScale(d.y))\r\n                //         .attr(\"fill\", (d)=> this.colorGreenRed(d.y));\r\n                // }\r\n            }\r\n        }\r\n    }\r\n    recompute = ()=>{\r\n        const data = this.state.data;\r\n        let rowIndexStress = 9;\r\n        let row1 = [];\r\n        const rows = [];\r\n\r\n        row1.push( 1 );\r\n        row1.push( row1[0]/ 12 );\r\n        row1.push( this.props.parameter.F8);\r\n        row1.push( 57000 / 7.5 * row1[2] / 1000 );\r\n        row1.push( +data[rowIndexStress-2][\"STR (T)\"] );\r\n        row1.push( data[rowIndexStress-2][\"STR (E)\"] * row1[3] / 5000 )\r\n        row1.push( row1[4] + row1[5] )\r\n        row1.push( row1[6] / row1[2] )\r\n        row1.push( 11800 * Math.pow(row1[7],fatigue(this.props.parameter.F19) ))\r\n        row1.push( lane(this.props.parameter.C24)\r\n            * this.props.parameter.C25 * 1000000 / 12 / this.props.parameter.C18 )\r\n        row1.push( row1[9] / row1[8] )\r\n        row1.push( row1[10] )\r\n        row1.push( 18.985 / (1 + 5 * Math.pow(row1[11],-1.1)) )\r\n        rows.push(row1);    // Add to the array\r\n\r\n        //console.log(+document.getElementById(\"C18\").value);\r\n        for (var i=0; i<this.props.parameter.C18;i++){\r\n            //debugger;\r\n            if (i!=0)\r\n                rowIndexStress = 8;\r\n            for (var j=0;j<12; j++){\r\n                if (i==0 && j==0)\r\n                    ;\r\n                    //If counterYear = 1 And counterMonth = 1 Then\r\n                //      'If First Year than Omit Calculation of First Month, Already Done\r\n                else {\r\n                    rowIndexStress = rowIndexStress + 1\r\n                    let row2 = [];\r\n                    row2.push( row1[0] + 1 )\r\n                    row2.push( row2[0]/ 12 );\r\n                    // Cells(rowIndex, 2) = Cells(rowIndex, 1).Value / 12\r\n                    row2.push( this.props.parameter.F8\r\n                        * Math.pow((30 * row2[0] / (4 + 0.85 * 30 * row2[0])), 0.5) );\r\n                    // Cells(rowIndex, 3) = Sheets(\"Input\").Range(\"F8\").Value * ((30 * Cells(rowIndex, 1).Value / (4 + 0.85 * 30 * Cells(rowIndex, 1).Value))) ^ 0.5\r\n                    row2.push( 57000 / 7.5 * row2[2] / 1000 );\r\n                    // Cells(rowIndex, 4) = 57000 / 7.5 * Cells(rowIndex, 3) / 1000\r\n                    row2.push( +data[rowIndexStress-2][\"STR (T)\"] );\r\n                    // Cells(rowIndex, 5) = Sheets(\"Stress\").Cells(rowIndexStress, 38).Value\r\n                    row2.push( data[rowIndexStress-2][\"STR (E)\"] * row2[3] / 5000 );\r\n                    // Cells(rowIndex, 6) = Sheets(\"Stress\").Cells(rowIndexStress, 39).Value * Cells(rowIndex, 4) / 5000\r\n                    row2.push( row2[4] + row2[5] );\r\n                    // Cells(rowIndex, 7) = Cells(rowIndex, 5).Value + Cells(rowIndex, 6).Value\r\n                    row2.push( row2[6] / row2[2] );\r\n                    // Cells(rowIndex, 8) = Cells(rowIndex, 7).Value / Cells(rowIndex, 3).Value\r\n                    row2.push( 11800 * Math.pow(row2[7],fatigue(this.props.parameter.F19)) );\r\n                    // Cells(rowIndex, 9) = 11800 * Cells(rowIndex, 8).Value ^ fatigue(Sheets(\"Input\").Range(\"F19\").Value)\r\n                    row2.push( row1[9] );\r\n                    // Cells(rowIndex, 10) = Cells(rowIndex - 1, 10).Value\r\n                    row2.push( row2[9] / row2[8] );\r\n                    // Cells(rowIndex, 11) = Cells(rowIndex, 10).Value / Cells(rowIndex, 9).Value\r\n                    row2.push( row1[11] + row2[10] )\r\n                    // Cells(rowIndex, 12) = Cells(rowIndex - 1, 12).Value + Cells(rowIndex, 11).Value\r\n                    row2.push( 18.985 / (1 + 5 * Math.pow(row2[11],-1.1)) )\r\n                    // Cells(rowIndex, 13) = 18.985 / (1 + 5 * Cells(rowIndex, 12).Value ^ -1.1)\r\n                    if (rowIndexStress == 13)\r\n                        rowIndexStress = 1\r\n                    rows.push(row2);\r\n                    row1=row2;\r\n                }\r\n            }\r\n        }\r\n        this.setState({row1,rows,rowIndexStress})\r\n        function lane(n) {\r\n            if (n <= 2)\r\n                return 1;\r\n            else if (n >= 4)\r\n                return 0.6;\r\n            else\r\n                return 0.7;\r\n        }\r\n\r\n        function fatigue(k) {\r\n            if (k < 200)\r\n                return k * 0.0221 - 15.97;\r\n            else if (k < 300)\r\n                return k * 0.0164 - 14.83;\r\n            else if (k < 500)\r\n                return k * 0.0038 - 11.05;\r\n            else if (k < 1000)\r\n                return k * 0.00033 - 9.31;\r\n            else\r\n                return k * 0.00071 - 9.69;\r\n        }\r\n    };\r\n    parameterGraph = ()=>{\r\n        const width = this.state.width;\r\n        const height = this.state.height;\r\n        const rows = this.state.rows;\r\n        var dataset =[];\r\n        for (var i=0;i<rows.length;i++){\r\n            var obj={};\r\n            obj.x = rows[i][0];\r\n            obj.y = rows[i][12];\r\n            dataset.push(obj);\r\n        }\r\n        var xScale = d3.scaleLinear()\r\n            .domain([0, d3.max(dataset, function(d){ return d.x; })])\r\n            .range([0, width]);\r\n        var yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(dataset, function(d){ return d.y; })])\r\n            .range([height, 0]);\r\n        var xAxis = d3.axisBottom(xScale)\r\n            .tickSizeInner(-height)\r\n            .tickSizeOuter(0)\r\n            .tickPadding(10);\r\n\r\n        var yAxis = d3.axisLeft(yScale)\r\n            .tickSizeInner(-width)\r\n            .tickSizeOuter(0)\r\n            .tickPadding(10);\r\n\r\n        var line = d3.line()\r\n            .x(function(d) { return xScale(d.x); })\r\n            .y(function(d) { return yScale(d.y); });\r\n\r\n        this.setState({xScale,yScale,xAxis,yAxis,line,dataset});\r\n    }\r\n\r\n    tableCreate = ()=>{\r\n\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (   (this.state.rows.length&&this.state.dataset)?<svg ref=\"svg\"\r\n            width={this.state.width+this.state.margin.left+this.state.margin.right}\r\n            height={this.state.height+this.state.margin.top+this.state.margin.bottom}>\r\n            <g className=\"content\" transform={\"translate(\" + this.state.margin.left + \",\" + this.state.margin.top + \")\"}>\r\n                <text className=\"xAxisText\" style={{\"textAnchor\":\"middle\",\"textShadow\":\"1px 1px 0 rgba(200, 200, 200, 0.7\"}}\r\n                fontFamily=\"sans-serif\" fontSize=\"16px\" x={this.state.width/2} y ={this.state.height+40}>Age (months)</text>\r\n                <text className=\"YAxisText\"\r\n                      transform={\"translate(\"+(-50)+\",\"+this.state.height/2+\")\"+\" rotate(-90)\"}\r\n                      style={{\"textAnchor\": \"middle\", \"textShadow\": \"1px 1px 0 rgba(200, 200, 200, 0.7\"}}\r\n                      fontFamily=\"sans-serif\" fontSize=\"16px\">Number of Punchouts per Mile\r\n                </text>\r\n                <g className=\"xaxis\" transform={\"translate(0,\" + this.state.height + \")\"}></g>\r\n                <g className=\"yaxis\"></g>\r\n                <path className=\"line\" d={this.state.line(this.state.dataset)}/>\r\n                {this.state.dataset.map(d=><circle className=\"point\" r={4} cx={this.state.xScale(d.x)}\r\n                                        cy={this.state.yScale(d.y)} fill={this.colorGreenRed(d.y)}\r\n                strokeWidth={0.5} stroke={\"#000\"}></circle>)}\r\n            </g>\r\n        </svg>:'');\r\n    }\r\n}\r\nexport default withStyles(styles) (Graph);\r\n","import React,{ Component } from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Slider,Typography,Button,Paper,Grid,Stepper,Step,StepLabel,StepContent,TextField,Container} from '@material-ui/core';\r\nimport Graph from './Graph'\r\n\r\n\r\nconst styles = theme=> ({\r\n    root: {\r\n        width:'100%',\r\n        '& .MuiTextField-root': {\r\n            width: '100%',\r\n        },\r\n        '& input': {\r\n            width: '100%',\r\n        },\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    dot:{\r\n        borderBottom:'3px dotted',\r\n        marginBottom:'4px'\r\n    }\r\n});\r\n\r\nclass CRCP extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            activeStep:0,\r\n            stepsLength:3,\r\n            finished: false,\r\n            C18:30,\r\n            C19:10,\r\n            C24:2,\r\n            C25:100,\r\n            F7:14,\r\n            F8:570,\r\n            F16:6,\r\n            F17:400,\r\n            F19:539\r\n        }\r\n    }\r\n    handleNext = () => {\r\n        this.setState({activeStep:this.state.activeStep+1});\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.setState({activeStep:this.state.activeStep-1});\r\n    };\r\n\r\n    handleReset = () => {\r\n        this.setState({activeStep:0});\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n        const getGroupControl=()=>{\r\n            return <div className={classes.actionsContainer}>\r\n                <div>\r\n                    <Button\r\n                        disabled={this.state.activeStep === 0}\r\n                        onClick={this.handleBack}\r\n                        className={classes.button}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleNext}\r\n                        className={classes.button}\r\n                    >\r\n                        {this.state.activeStep === this.state.stepsLength - 1 ? 'Finish' : 'Next'}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        }\r\n        if ((this.state.activeStep === this.state.stepsLength)&& !this.state.finished)\r\n            this.setState({finished:true})\r\n        return (   <Container maxWidth=\"lg\"> <Paper elevation={3}>\r\n            <Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\r\n                <Step>\r\n                    <StepLabel>Step 1</StepLabel>\r\n                    <StepContent>\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid container item xs={6} spacing={1} justify=\"center\">\r\n                                    <Grid item xs={6} justify=\"flex-start\">\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"deisgnNo\"\r\n                                            label=\"Design No\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n    margin=\"dense\"\r\n    id=\"district\"\r\n                                            label=\"DISTRICT\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n    margin=\"dense\"\r\n    id=\"highway\"\r\n                                            label=\"HIGHWAY\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n    margin=\"dense\"\r\n    id=\"county\"\r\n                                            label=\"COUNTY\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={6} spacing={1}>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n    margin=\"dense\"\r\n    id=\"control\"\r\n                                            label=\"CONTROL\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n    margin=\"dense\"\r\n    id=\"date\"\r\n                                            label=\"DATE\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n    margin=\"dense\"\r\n    id=\"section\"\r\n                                            label=\"SECTION\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n    margin=\"dense\"\r\n    id=\"job\"\r\n                                            label=\"JOB\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1}>\r\n                                <TextField\r\n                                    id=\"comment\"\r\n                                    label=\"COMMENTS\"\r\n                                    multiline\r\n                                    rows={4}\r\n                                    defaultValue=\"\"\r\n                                    variant=\"filled\"\r\n                                />\r\n                            </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                        {getGroupControl()}\r\n                    </StepContent>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel>Step 2</StepLabel>\r\n                    <StepContent>\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Basic design information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} spacing={1} justify=\"center\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Design life (years)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Slider\r\n                                                value={this.state.C18}\r\n                                                onChange={(event, newValue) => this.setState({C18:newValue})}\r\n                                                defaultValue={30}\r\n                                                min={1} max={100}\r\n                                                id=\"C18\"\r\n                                                valueLabelDisplay=\"auto\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Number of punchouts per Mile</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Slider\r\n                                                value={this.state.C19}\r\n                                                onChange={(event, newValue) => this.setState({C19:newValue})}\r\n                                                id=\"C19\"\r\n                                                defaultValue={10}\r\n                                                min={1} max={100}\r\n                                                valueLabelDisplay=\"auto\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Total number of lanes in one direction</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Slider\r\n                                                value={this.state.C24}\r\n                                                onChange={(event, newValue) => this.setState({C24:newValue})}\r\n                                                defaultValue={2}\r\n                                                min={1} max={10}\r\n                                                id=\"C24\"\r\n                                                valueLabelDisplay=\"auto\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Total design traffic in one direction (million ESAL)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Slider\r\n                                                value={this.state.C25}\r\n                                                onChange={(event, newValue) => this.setState({C25:newValue})}\r\n                                                defaultValue={100}\r\n                                                min={10} max={1000}\r\n                                                id=\"C25\"\r\n                                                valueLabelDisplay=\"auto\"\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Structural design criteria</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} spacing={1} justify=\"center\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Acceptable number of punchouts per mile</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input/>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Concrete material information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} spacing={1} justify=\"center\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Thickness of Concrete Layer (in.)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Slider\r\n                                                value={this.state.F7}\r\n                                                onChange={(event, newValue) => this.setState({F7:newValue})}\r\n                                                defaultValue={14}\r\n                                                min={2} max={16}\r\n                                                id=\"F7\"\r\n                                                valueLabelDisplay=\"auto\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Number of punchouts per Mile</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Slider\r\n                                                value={this.state.F8}\r\n                                                onChange={(event, newValue) => this.setState({F8:newValue})}\r\n                                                id=\"F8\"\r\n                                                defaultValue={570}\r\n                                                min={1} max={1000}\r\n                                                valueLabelDisplay=\"auto\"\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                        {getGroupControl()}\r\n                    </StepContent>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel>Step 3</StepLabel>\r\n                    <StepContent>\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Base layer information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} spacing={1} justify=\"center\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Base type</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input/>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Base layer thickness (inches)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Modulus of base layer (ksi)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input/>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Subgrade layer information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} spacing={1} justify=\"center\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Soil classification system</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input/>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Soil classification of subgrade</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input type=\"number\" id=\"16\" value={this.state.F16} onChange={(event, newValue) => this.setState({F16:newValue})}/>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Modulus of Base Layer (ksi)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input type=\"number\" id=\"17\" value={this.state.F17} onChange={(event, newValue) => this.setState({F17:newValue})}/>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Composite K (psi/in.)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input type=\"number\" id=\"19\" value={this.state.F19} onChange={(event, newValue) => this.setState({F19:newValue})}/>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                        {getGroupControl()}\r\n                    </StepContent>\r\n                </Step>\r\n            </Stepper>\r\n            {this.state.activeStep === this.state.stepsLength && (\r\n                <>\r\n                    <Paper square elevation={0} className={classes.resetContainer}>\r\n                        <Typography>All steps completed - you&apos;re finished</Typography>\r\n                        <Button onClick={this.handleReset} className={classes.button}>\r\n                            Reset\r\n                        </Button>\r\n                    </Paper>\r\n                </>\r\n            )}\r\n            {this.state.finished ?  <Graph\r\n                init = {this.state.activeStep === this.state.stepsLength}\r\n                parameter={{C18:this.state.C18, C19:this.state.C19, C24:this.state.C24,\r\n                C25:this.state.C25, F7:this.state.F7,F8:this.state.F8,F16:this.state.F16,F17:this.state.F17,F19:this.state.F19}}/>:''}\r\n        </Paper></Container>);\r\n    }\r\n}\r\nexport default withStyles(styles) (CRCP);\r\n","import React from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {AppBar,IconButton,Typography,Button,Toolbar,Grid,Slide} from '@material-ui/core';\nimport coverPic from './image/cover.jpg';\nimport CRCP from './component/CRCP'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  titleNav: {\n    flexGrow: 1,\n  },\n  title: {\n    color: 'white'\n  },\n  cover: {\n    width:'100%',\n    position:'fixed',\n    background: `linear-gradient(0deg,rgba(0,0,0,0) 0,#000 100%), url(${coverPic}) no-repeat center center fixed`,\n    backgroundSize: 'cover',\n    height: '100vh',\n    overflow: 'hidden',\n    zIndex: -1\n  },\n}));\n\nfunction App() {\n  const [page, setPage] = React.useState('home');\n  const classes = useStyles();\n  return (\n    <div >\n      <div className={classes.cover}></div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.titleNav}>\n            TxCRCP-ME\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.root}>\n        <Slide direction=\"up\" in={page==='home'} mountOnEnter unmountOnExit>\n          <Grid container spacing={5} alignItems=\"center\" justify=\"center\" direction={\"column\"} style={{height: 'calc(100vh - 64px)',width:'100%'}}>\n            <Grid item>\n              <Typography variant=\"h3\" className={classes.title}>\n                TxDOT Mechanistic-Empirical CRCP Design System\n              </Typography>\n            </Grid>\n            <Grid container item alignItems=\"stretch\" justify=\"center\" direction={\"column\"} spacing={3} style={{width:'fit-content'}}>\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\" style={{width:'100%'}} onClick={()=>setPage('CRCP')}>CRCP Design</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" style={{width:'100%'}}>Slab Support</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" style={{width:'100%'}}>Product Disclaimer</Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Slide>\n        <Slide direction=\"up\" in={page==='CRCP'} mountOnEnter unmountOnExit>\n          <CRCP/>\n        </Slide>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}