{"version":3,"sources":["image/cover.jpg","component/tableData.js","component/Graph.js","image/District.png","image/TotalDesign Traffic.png","image/County.png","image/StructureDesignCriteria.png","image/AcceptableNumberofPunchout.png","image/ConcreteLayer.png","image/soilSystermPic.png","image/subbase.png","image/BasetypePic.png","component/report.js","component/data/sTable.csv","component/data/kTable.csv","component/data/temperature.csv","component/County.js","component/CRCP.js","App.js","reportWebVitals.js","index.js"],"names":["Tabledata","props","titles","state","visible","handleInput","prevProps","this","rows","minArray","maxArray","j","length","push","i","colorRedBlues","colorScale","d3","domain","range","r","parameter","DesignLife","color","colorgreenred","id","type","disabled","style","textAlign","fontSize","fontWeight","value","parseFloat","toFixed","size","onChange","event","setState","target","checked","for","width","display","border","backgroundColor","map","t","c","paddingRight","paddingTop","paddingBottom","indexOf","Component","Graph","colorGreenRed","tip","d3tip","attr","offset","html","d","y","x","init","parameterGraph","height","dataset","obj","xScale","yScale","xAxis","tickSizeInner","tickSizeOuter","tickPadding","yAxis","line","tableCreate","margin","top","right","bottom","left","refs","svg","select","selectAll","call","classes","Grid","container","alignItems","direction","spacing","item","xs","ref","className","transform","fontFamily","cx","cy","fill","strokeWidth","stroke","AnalysisPunchouts","withStyles","theme","root","Report","CRCP","BondBreaker","Base","Subbase","NaturalSoil","Paper","justify","toMenu","Button","variant","onClick","button","startIcon","toCRCP","window","print","Typography","header","subHeader","data","District","County","Highway","CSJ","ProjectScope","StationBegin","StationEnd","PunchoutsPerMile","LanesOneDirection","TrafficOneDirection","SoilClassificationSystem","SoilSub","PlasticityIndex","SubbaseType","SubbaseThickness","BaseType","BaseThickness","ModulusBase","CompositeK","ModulusOfRupture","ElasticModulue","alignContent","underline","AnalysisSlabThickness","minHeight","layerHolder","flexGrow","padding","marginTop","marginRight","borderBottom","palette","secondary","light","paddingLeft","svgRef","React","createRef","zoom","k","geographies","Name","undefined","topojson","county","objects","features","current","scaleExtent","on","highlight","toLowerCase","highlighto","forEach","map_width","map_height","projection","geoMercator","center","translate","scale","viewBox","geoPath","properties","NAME","onMouseEnter","pointerEvents","onMouseOut","selected","toUpperCase","centroid","dy","position","textAnchor","opacity","strokeOpacity","lineHeight","textShadow","textTransform","letterSpacing","shapeRendering","districts","districtCode","counties","Object","keys","key","highway","soilClassSub","styles","actionsContainer","marginBottom","resetContainer","dot","helpHolder","inputWithHelper","closeButton","grey","zIndex","DialogTitle","children","onClose","other","disableTypography","IconButton","aria-label","activeStep","stepsLength","finished","BaseThicknessMin","currentDistricts","currentCounties","SubbaseThicknessThreshHold","SubbaseTypeOpt","baseTypeOpt","ksTable","Map","ssTable","temperature","computeStress","SlabThickness","input","H","Input","K","Math","floor","ceil","B3","mapd2","lastd2","index","DT","STR_T","STR_E","s","B2","A2","C2","D2","E2","data3","data4","Q2","Q3","R2","R3","data5","W2","W4","X2","X4","filter","ti","AveragetTemperature","getSTR_T","getSTR_E","recompute","__ret","analysis","console","log","rowIndexStress","row1","min","errorFunc","Step3","handleNext","handleBack","handleModify","handleReset","onLoadInput","self","reader","FileReader","addEventListener","JSON","parse","result","currentState","stringify","e","alert","files","readAsText","onSaveInput","filename","Date","toISOString","replace","saveData","jsonse","blob","Blob","url","URL","createObjectURL","downloadLink","document","createElement","body","appendChild","navigator","msSaveOrOpenBlob","href","download","click","removeChild","handleOpenHelper","content","freeze","helperEl","el","currentTarget","handleCloseHelper","source","handleBlurSliderInput","max","handleChangeSliderInput","Number","handleChange","handleSoilSub","handleBaseType","handlePlasticityIndex","calculateCompositeK","get","getSubgradeValue","round","getModulusBase","prevState","snapshot","kTable","then","_data","set","sTable","slabthickness","n","pow","fatigue","row2","getGroupControl","Container","maxWidth","elevation","Stepper","orientation","Step","StepLabel","StepContent","displayPrint","component","accept","hidden","noValidate","autoComplete","sm","md","Autocomplete","options","reason","renderInput","params","TextField","dense","required","error","label","src","DistrictPic","onMouseLeave","freeSolo","DirectionOfConstruction","Control","Section","Job","text","MenuItem","InputLabelProps","shrink","multiline","defaultValue","lg","Slider","newValue","Hidden","smDown","onBlur","inputProps","xm","TrafficOneDirectionPic","StructureDesignCriteriaPic","AcceptableNumberofPunchoutPic","ConcreteLayerPic","soilSystermPic","subbasePic","helperText","BasetypePic","square","openAnalytics","Popper","placement","disablePortal","open","anchorEl","modifiers","flip","enabled","preventOverflow","boundariesElement","arrow","Card","defaultScale","defaultPositionX","defaultPositionY","Dialog","fullWidth","DialogContent","useStyles","makeStyles","menuButton","titleNav","title","cover","background","coverPic","backgroundSize","overflow","App","useState","page","setPage","setAnalysisPunchouts","setAnalysisSlabThickness","AppBar","Toolbar","Slide","in","mountOnEnter","unmountOnExit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1fcd4c00.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cover.43610a00.jpg\";","import React,{ Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\nclass Tabledata  extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible:false\r\n        }\r\n        this.handleInput();\r\n        // var r = 12 * this.props.parameter.DesignLife - 1;\r\n        // this.props.AnalysisPunchouts(this.props.rows[r][12]);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.rows!==prevProps.rows){\r\n            this.handleInput();\r\n            // var r = 12 * this.props.parameter.DesignLife - 1;\r\n            // this.props.AnalysisPunchouts(this.props.rows[r][12]);\r\n        }\r\n    }\r\n\r\n    handleInput() {\r\n        const rows = this.props.rows;\r\n        var minArray = [];\r\n        var maxArray = [];\r\n        for (var j = 0; j < rows[0].length; j++) {\r\n            minArray.push(1000000000);\r\n            maxArray.push(0);\r\n        }\r\n        for (var i = 0; i < rows.length; i++) {\r\n            for (var j = 0; j < rows[i].length; j++) {\r\n                if (rows[i][j] > maxArray[j])\r\n                    maxArray[j] = rows[i][j];\r\n                if (rows[i][j] < minArray[j])\r\n                    minArray[j] = rows[i][j];\r\n            }\r\n        }\r\n        this.colorRedBlues = [];\r\n        for (var j = 0; j < rows[0].length; j++) {\r\n            var colorScale = d3.scaleLinear()\r\n                .domain([minArray[j], (minArray[j] + maxArray[j]) / 2, maxArray[j]])\r\n                .range([\"#55f\", \"white\", \"#f55\"]);\r\n            this.colorRedBlues.push(colorScale);\r\n        }\r\n    }\r\n\r\n    titles = [\"Age (Month)\",\"Age (Year)\", \"Modulus of Rupture (psi)\",\"Modulus of Elasticity (ksi)\"\r\n        ,\"Concrete Stress (T) (psi)\"\r\n        ,\"Concrete Stress (E) (psi)\"\r\n        ,\"Total Concrete Stress (psi)\"\r\n        ,\"Stress to Strength Ratio (psi/psi)\"\r\n        ,\"Number of Load Repetitions to Failure\"\r\n        ,\"Number of Load Repetitions\"\r\n        ,\"Pavement Damage\"\r\n        ,\"Cumulative Damage\"\r\n        ,\"Number of Punchouts per Mile\"]\r\n    render() {\r\n        debugger\r\n        var r = 12 * this.props.parameter.DesignLife - 1;\r\n        if (this.colorRedBlues&&this.props.rows[r]) {\r\n            var color = this.props.colorgreenred(this.props.rows[r][12]);\r\n            return (<div>\r\n                <div id=\"div_CRCP_PERFORMANCE\"><b>CRCP PERFORMANCE</b><br/>\r\n                    Number of Punchouts per Mile:<input type=\"TEXT\" disabled style={{\r\n                        \"background-color\": color,\r\n                        textAlign: \"center\",\r\n                        fontSize: 17,\r\n                        fontWeight: \"bold\"\r\n                    }} value={parseFloat(this.props.rows[r][12]).toFixed(2)} size=\"7\"/><br/><br/>\r\n                </div>\r\n                <div id=\"divCheckbox1\"><input type=\"checkbox\" id=\"checkbox1\"\r\n                                              onChange={(event) => this.setState({visible: event.target.checked})}/>\r\n                    <label for=\"checkbox1\"> Analysis Result </label></div>\r\n                <table style={{width: '99%', fontSize: '12px', display: this.state.visible ? 'table' : 'none'}}\r\n                       border=\"1\" id=\"analysisTable\">\r\n                    <tr style={{backgroundColor: \"#888\"}}>\r\n                        {this.titles.map(t => <td>{t}</td>)}\r\n                    </tr>\r\n                    {this.props.rows.map(r => <tr>{r.map((c, j) => <td style={{\r\n                        textAlign: 'right',\r\n                        backgroundColor: (j === 12) ? this.props.colorgreenred(c) : this.colorRedBlues[j](c),\r\n                        paddingRight: '10px',\r\n                        paddingTop: '0px',\r\n                        paddingBottom: '0px'\r\n                    }}>\r\n                        {([1, 2, 3, 12, 8, 9, 5, 6, 7, 10, 11].indexOf(j) !== -1) ? parseFloat(c).toFixed((j == 1 || j == 12) ? 2 : ((j == 2 || j == 3 || j == 8 || j == 9) ? 0 : ((j == 5 || j == 6) ? 1 : ((j == 7) ? 3 : 4)))) : c}\r\n                    </td>)}</tr>)}\r\n                </table>\r\n            </div>)\r\n        }else\r\n            return ''\r\n    }\r\n}\r\n\r\nexport default Tabledata;\r\n","import React, {Component} from 'react';\r\nimport './Graph.css';\r\nimport Tabledata from './tableData';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Button,\r\n    Paper,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    StepContent,\r\n    TextField,\r\n    Container\r\n} from '@material-ui/core';\r\nimport * as d3 from 'd3';\r\nimport {tip as d3tip} from \"d3-v6-tip\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        '& .MuiTextField-root': {\r\n            width: '100%',\r\n        },\r\n        '& input': {\r\n            width: '100%',\r\n        },\r\n    }\r\n});\r\n\r\nclass Graph extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const margin = {top: 20, right: 80, bottom: 60, left: 120},\r\n            width = 900 - margin.left - margin.right,\r\n            height = 400 - margin.top - margin.bottom;\r\n\r\n        this.state = {\r\n            margin,\r\n            width,\r\n            height,\r\n            // row1:[],\r\n            // rows:[],\r\n            init: true\r\n        }\r\n    }\r\n\r\n    colorGreenRed = d3.scaleLinear()\r\n        .domain([0, 25])\r\n        .range([\"#0f0\", \"#f00\"]);\r\n    tip = d3tip()\r\n        .attr('class', 'd3-tip')\r\n        .offset([-10, 0])\r\n        .html((d) => {\r\n            var color = this.colorGreenRed(d.y);\r\n            var html = \"#Punchouts per Mile: <span style='color:\" + color + \"; font-weight: bold'>\" + parseFloat(d.y).toFixed(2) + \"</span><br>\";\r\n            html += \"&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; Age (months):  <span style='color:white; font-weight: bold'>\" + d.x + \"</span>\";\r\n            return html;\r\n        });\r\n\r\n    componentDidMount() {\r\n        this.tableCreate();\r\n        this.parameterGraph();\r\n    }\r\n\r\n    init = true;\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const init = ((this.props.init !== prevProps.init) && this.props.init);\r\n        // console.log('-------------------------',init)\r\n        this.init = init || this.init;\r\n        // console.log('-------------------------this',this.init)\r\n        if ((this.props.parameter !== prevProps.parameter) || this.init) {\r\n            this.parameterGraph();\r\n            if (this.refs.svg && this.state.xAxis && this.state.yAxis) {\r\n                const svg = d3.select(this.refs.svg).select('g.content');\r\n                svg.selectAll(\".xaxis\")\r\n                    .attr(\"transform\", \"translate(0,\" + this.state.height + \")\")\r\n                    .call(this.state.xAxis);\r\n                svg.selectAll(\".yaxis\")\r\n                    .call(this.state.yAxis);\r\n                if (this.init && this.state.dataset.length) {\r\n                    //     debugger\r\n                    //     svg.selectAll(\".point\")\r\n                    //         .data(this.state.dataset).enter()\r\n                    //         .append(\"circle\")\r\n                    //         .attr(\"class\", \"point\")\r\n                    //         .attr(\"r\", 4)\r\n                    //         .attr(\"cx\", (d)=>this.state.xScale(d.x))\r\n                    //         .attr(\"cy\", (d)=> this.state.yScale(d.y))\r\n                    //         .attr(\"fill\", (d)=> this.colorGreenRed(d.y))\r\n                    //         .attr(\"stroke-width\", 0.5)\r\n                    //         .attr(\"stroke\",\"#000\")\r\n                    //         .on('mouseover', this.tip.show)\r\n                    //         .on('mouseout', this.tip.hide)\r\n                    //     svg.call(this.tip)\r\n                    this.init = false;\r\n                }\r\n                // }else{\r\n                //     svg.selectAll(\".point\")\r\n                //         .data(this.state.dataset)\r\n                //         .attr(\"cx\", (d)=> this.state.xScale(d.x))\r\n                //         .attr(\"cy\", (d,i)=>this.state.yScale(d.y))\r\n                //         .attr(\"fill\", (d)=> this.colorGreenRed(d.y));\r\n                // }\r\n            }\r\n        }\r\n    }\r\n\r\n    parameterGraph = () => {\r\n        const width = this.state.width;\r\n        const height = this.state.height;\r\n        const rows = this.props.rows;\r\n        var dataset = [];\r\n        for (var i = 0; i < rows.length; i++) {\r\n            var obj = {};\r\n            obj.x = rows[i][0];\r\n            obj.y = rows[i][12];\r\n            dataset.push(obj);\r\n        }\r\n        var xScale = d3.scaleLinear()\r\n            .domain([0, d3.max(dataset, function (d) {\r\n                return d.x;\r\n            })])\r\n            .range([0, width]);\r\n        var yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(dataset, function (d) {\r\n                return d.y;\r\n            })])\r\n            .range([height, 0]);\r\n        var xAxis = d3.axisBottom(xScale)\r\n            .tickSizeInner(-height)\r\n            .tickSizeOuter(0)\r\n            .tickPadding(10);\r\n\r\n        var yAxis = d3.axisLeft(yScale)\r\n            .tickSizeInner(-width)\r\n            .tickSizeOuter(0)\r\n            .tickPadding(10);\r\n\r\n        var line = d3.line()\r\n            .x(function (d) {\r\n                return xScale(d.x);\r\n            })\r\n            .y(function (d) {\r\n                return yScale(d.y);\r\n            });\r\n\r\n        this.setState({xScale, yScale, xAxis, yAxis, line, dataset});\r\n    }\r\n\r\n    tableCreate = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return ((this.props.rows.length && this.state.dataset) ?\r\n            <Grid container alignItems=\"center\" direction={\"column\"} spacing={1}>\r\n                <Grid item xs={11}>\r\n                    <svg ref=\"svg\"\r\n                         width={this.state.width + this.state.margin.left + this.state.margin.right}\r\n                         height={this.state.height + this.state.margin.top + this.state.margin.bottom}>\r\n                        <g className=\"content\"\r\n                           transform={\"translate(\" + this.state.margin.left + \",\" + this.state.margin.top + \")\"}>\r\n                            <text className=\"xAxisText\"\r\n                                  style={{\"textAnchor\": \"middle\", \"textShadow\": \"1px 1px 0 rgba(200, 200, 200, 0.7\"}}\r\n                                  fontFamily=\"sans-serif\" fontSize=\"16px\" x={this.state.width / 2}\r\n                                  y={this.state.height + 40}>Age (months)\r\n                            </text>\r\n                            <text className=\"YAxisText\"\r\n                                  transform={\"translate(\" + (-50) + \",\" + this.state.height / 2 + \")\" + \" rotate(-90)\"}\r\n                                  style={{\"textAnchor\": \"middle\", \"textShadow\": \"1px 1px 0 rgba(200, 200, 200, 0.7\"}}\r\n                                  fontFamily=\"sans-serif\" fontSize=\"16px\">Number of Punchouts per Mile\r\n                            </text>\r\n                            <g className=\"xaxis\" transform={\"translate(0,\" + this.state.height + \")\"}></g>\r\n                            <g className=\"yaxis\"></g>\r\n                            <path className=\"line\" d={this.state.line(this.state.dataset)}/>\r\n                            {this.state.dataset.map(d => <circle className=\"point\" r={4} cx={this.state.xScale(d.x)}\r\n                                                                 cy={this.state.yScale(d.y)}\r\n                                                                 fill={this.colorGreenRed(d.y)}\r\n                                                                 strokeWidth={0.5} stroke={\"#000\"}></circle>)}\r\n                        </g>\r\n                    </svg>\r\n                </Grid><Grid item xs={11}><Tabledata AnalysisPunchouts={this.props.AnalysisPunchouts}\r\n                                                     parameter={this.props.parameter} colorgreenred={this.colorGreenRed}\r\n                                                     rows={this.props.rows}/></Grid></Grid> : '');\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Graph);\r\n","export default __webpack_public_path__ + \"static/media/District.634c801c.png\";","export default __webpack_public_path__ + \"static/media/TotalDesign Traffic.948031ff.png\";","export default __webpack_public_path__ + \"static/media/County.e9bed656.png\";","export default __webpack_public_path__ + \"static/media/StructureDesignCriteria.4f123ed0.png\";","export default __webpack_public_path__ + \"static/media/AcceptableNumberofPunchout.f191431d.png\";","export default __webpack_public_path__ + \"static/media/ConcreteLayer.45d36da4.png\";","export default __webpack_public_path__ + \"static/media/soilSystermPic.c6e7e75d.png\";","export default __webpack_public_path__ + \"static/media/subbase.a3bc3c69.png\";","export default __webpack_public_path__ + \"static/media/BasetypePic.61fd6d33.png\";","import React, {Component} from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        padding: theme.spacing(2)\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    underline: {\r\n        borderBottom: '1px solid black'\r\n    },\r\n    subHeader: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    header:{\r\n        backgroundColor: theme.palette.secondary.light\r\n    },\r\n    layerHolder:{\r\n        '& div:first-child':{\r\n            paddingLeft: 10\r\n        }\r\n    }\r\n});\r\n\r\nclass Report extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            CRCP: 13,\r\n            BondBreaker: 1,\r\n            Base: 6,\r\n            Subbase: 12,\r\n            NaturalSoil: 6,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return <Paper>\r\n            <Grid container alignItems={\"start\"} justify={\"center\"}>\r\n                {this.props.toMenu ? <Grid item xs={12}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        onClick={this.props.toMenu}\r\n                        className={classes.button}\r\n                        startIcon={<HomeIcon/>}\r\n                    >\r\n                        To Main Menu\r\n                    </Button>\r\n                    <Button\r\n                        onClick={this.props.toCRCP}\r\n                        className={classes.button}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        startIcon={<PrintIcon/>}\r\n                        onClick={() => window.print()}\r\n                    >\r\n                        Print\r\n                    </Button>\r\n                </Grid> : ''}\r\n                <Grid container item xs={11} justify={\"start\"} spacing={1} className={[\"section-to-print\", classes.root]}>\r\n\r\n                    <Grid item xs={6} container justify=\"flex-start\"\r\n                          alignItems=\"flex-start\"\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h5'} className={classes.header}>INPUT DATA</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}>A. Project\r\n                                Identification</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            District\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.District}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            County\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.County}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Highway\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.Highway}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            CSJ\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.CSJ}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Project Scope\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ProjectScope}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Station (Begin)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.StationBegin}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Station (End)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.StationEnd}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> B. Design Parameters &\r\n                                Traffic</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Design Life (year)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.DesignLife}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Number of Punchouts per Mile\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.PunchoutsPerMile}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Total Number of Lanes in One Direction\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.LanesOneDirection}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Total Design Traffic in One Direction (million ESALs)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.TrafficOneDirection}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> C. Subgrade and Treatment Information & subtitles</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Soil Classification System\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SoilClassificationSystem}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Soil Classification of Subgrade\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SoilSub}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Plasticity Index (PI)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.PlasticityIndex}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Subbase Type\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SubbaseType}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Subbase Thickness (in.)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SubbaseThickness}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}>D. Base Layer\r\n                                Information</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Base Type\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.BaseType}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Base Thickness (in.)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.BaseThickness}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Modulus of Base Layer (ksi)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ModulusBase}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Composite K (psi/in.)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.CompositeK}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> E. Concrete Material\r\n                                Properties</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            28-Day Modulus of Rupture (psi)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ModulusOfRupture}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Elastic Modulus (million psi)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ElasticModulue}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={6} container justify=\"flex-start\"\r\n                          direction=\"row\"\r\n                          alignContent=\"flex-start\"\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h5'} className={classes.header}>ANALYSIS RESULT</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> F. Design Slab Thickness & Performance</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.underline}>\r\n                            Design Slab Thickness\r\n                        </Grid>\r\n                        <Grid item xs={4} className={classes.underline}>\r\n                            {this.props.AnalysisSlabThickness}\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.underline}>\r\n                            Number of Punchouts per Mile\r\n                        </Grid>\r\n                        <Grid item xs={4} className={classes.underline} style={{color:(this.props.AnalysisPunchouts>this.props.data.PunchoutsPerMile)?'red':null}}>\r\n                            {this.props.AnalysisPunchouts ? this.props.AnalysisPunchouts.toFixed(2) : ''}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> G. Layer Information</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} container justify=\"center\" direction=\"column\" style={{minHeight: 500}}>\r\n                            <Grid className={classes.layerHolder} container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.state.CRCP, backgroundColor: '#F2F2F2'}}>\r\n                                <Grid xs item>CRCP</Grid>\r\n                                <Grid xs item>Thickness</Grid>\r\n                                <Grid xs item>{this.state.CRCP}''</Grid>\r\n                            </Grid>\r\n                           {this.props.data.BaseType==='CTB'?<Grid className={classes.layerHolder} container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.state.BondBreaker, backgroundColor: '#404040', color:'white'}}>\r\n                                <Grid xs item>Bond Breaker</Grid>\r\n                                <Grid xs item>Thickness</Grid>\r\n                                <Grid xs item>≥{this.state.BondBreaker}''</Grid>\r\n                            </Grid>:''}\r\n                            <Grid container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.props.data.BaseThickness, backgroundColor: '#D9D9D9'}}>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item>Base</Grid>\r\n                                    <Grid xs item>Type</Grid>\r\n                                    <Grid xs item>{this.props.data.BaseType}</Grid>\r\n                                </Grid>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item></Grid>\r\n                                    <Grid xs item>Thickness</Grid>\r\n                                    <Grid xs item>{this.props.data.BaseThickness}''</Grid>\r\n                                </Grid>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item></Grid>\r\n                                    <Grid xs item>Item 276</Grid>\r\n                                    <Grid xs item>Class L</Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.props.data.SubbaseThickness, backgroundColor: '#F2F2F2'}}>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item>Subbase</Grid>\r\n                                    <Grid xs item>Type</Grid>\r\n                                    <Grid xs item>{this.props.data.SubbaseType}</Grid>\r\n                                </Grid>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item></Grid>\r\n                                    <Grid xs item>Thickness</Grid>\r\n                                    <Grid xs item>{this.props.data.SubbaseThickness}''</Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.state.NaturalSoil, backgroundColor: '#FFC000'}}>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item>Natural Soil</Grid>\r\n                                    <Grid xs item>Type</Grid>\r\n                                    <Grid xs item>{this.props.data.SoilSub}</Grid>\r\n                                </Grid>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item></Grid>\r\n                                    <Grid xs item>PI</Grid>\r\n                                    <Grid xs item>{this.props.data.PlasticityIndex}</Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} container>\r\n                            <ul>\r\n                                <li>\"The minimum thickness for CRCP is 7 in., and the maximum thickness is 13 in.</li>\r\n                                <li>Use 13 in. for slab thicknesses greater than 13 in.</li>\r\n                                 <li>Districts should use 13-in. slab as a design slab thickness. Districts wanting to use thicker pavements should submit design greater than 13-in. to the district engineer for approval along with their justification for doing so.</li>\r\n                            </ul>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Report)\r\n","export default __webpack_public_path__ + \"static/media/sTable.b3ebdd77.csv\";","export default __webpack_public_path__ + \"static/media/kTable.82431430.csv\";","export default __webpack_public_path__ + \"static/media/temperature.320761a0.csv\";","import React, {Component} from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport { geoMercator, geoPath } from \"d3-geo\";\r\nimport * as topojson from \"topojson-client\";\r\nimport * as d3 from \"d3\";\r\nimport county from \"./data/texas-counties\"\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        position:'relative',\r\n        '& .label text': {\r\n          fontSize:4,\r\n            textAnchor: 'middle'\r\n        },\r\n        '& .tooltip': {\r\n          position: 'absolute',\r\n          display:'none',\r\n            pointerEvents:'none',\r\n            transform:'translate(3px,3px)'\r\n        },\r\n        '& .bold': {\r\n            fontWeight: 'bold',\r\n        },\r\n\r\n        '& .raster': {\r\n            fill: 'none',\r\n            opacity: 1\r\n        },\r\n\r\n        '& .neutral-county': {\r\n            fill: '#FFF',\r\n            opacity: 0.4\r\n        },\r\n        '& .highlighted-county': {\r\n            fill: '#C00',\r\n            opacity: 0.6\r\n        },\r\n\r\n        '& .neutral-county, .highlighted-county': {\r\n            stroke: '#6E6E6E',\r\n            strokeOpacity: 0.6,\r\n            strokeWidth: '0.7px'\r\n        },\r\n        '& .counties': {\r\n            fill: 'none',\r\n            stroke: '#6E6E6E',\r\n            strokeOpacity: 0.4,\r\n            strokeWidth: '0.5px'\r\n        },\r\n        '& .state-border': {\r\n            fill: 'none',\r\n            stroke: '#6E6E6E',\r\n            strokeOpacity: 0.7,\r\n            strokeWidth: '1px'\r\n        },\r\n        '& .city-marker': {\r\n            fill: 'none',\r\n            opacity: 0.6,\r\n            strokeWidth: '2px',\r\n            stroke: '#000'\r\n        },\r\n        '& .capital-marker': {\r\n            fill: 'goldenrod',\r\n            opacity: 1,\r\n            strokeWidth: '3px',\r\n            stroke: '#000',\r\n            strokeOpacity: 0.6\r\n        },\r\n\r\n        '& .text-note': {\r\n            fontSize: '15px',\r\n            fontWeight: 500,\r\n            color: '#000',\r\n            opacity: 0.6,\r\n            lineHeight: '18px',\r\n            margin: 0,\r\n            textShadow: '1px  1px 0 white, 1px -1px 0 white, -1px  1px 0 white, -1px -1px 0 white'\r\n        },\r\n\r\n        '& .city-label': {\r\n            textAnchor: 'middle',\r\n            margin: 0,\r\n            fontSize: '15px',\r\n            lineHeight: '14px',\r\n            fontWeight: 500,\r\n            textAlign: 'right',\r\n            opacity: 0.6,\r\n            color: '#000',\r\n            textShadow: '1px  1px 0 white, 1px -1px 0 white, -1px  1px 0 white, -1px -1px 0 white'\r\n        },\r\n\r\n        '& .legend': {\r\n            fontSize: '15px',\r\n            lineHeight: '24px',\r\n            fontWeight: 500,\r\n            color: '#333'\r\n        },\r\n\r\n        '& .label-line': {\r\n            stroke: '#000',\r\n            strokeWidth: '1.5px',\r\n            strokeOpacity: 1,\r\n            opacity: 0.8,\r\n            fill: 'none'\r\n        },\r\n\r\n        '& .state-label': {\r\n            fontWeight: 500,\r\n            textTransform: 'uppercase',\r\n            textAnchor: 'middle',\r\n            opacity: 0.3,\r\n            color: '#000',\r\n            fontSize: '24px',\r\n            lineHeight: '28px',\r\n            letterSpacing: '0.6em'\r\n        },\r\n\r\n        '& .distance-scale': {\r\n            fontSize: '11px',\r\n            lineHeight: '11px',\r\n            position: 'absolute',\r\n            fontWeight: 500,\r\n            textTransform: 'uppercase',\r\n            color: '#000'\r\n        },\r\n\r\n        '& .distance-scale-line': {\r\n            stroke: '#000',\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            opacity: 1,\r\n            fill: '#000',\r\n            shapeRendering: 'crispEdges'\r\n        }\r\n\r\n    }\r\n});\r\n\r\nclass County extends Component {\r\n    svgRef = React.createRef();\r\n    zoom = {k:1,x:0,y:0};\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            geographies: [],\r\n            Name:undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n            this.setState({geographies: topojson.feature(county, county.objects['texas-counties']).features});\r\n            if (this.svgRef){\r\n                let svg = d3.select(this.svgRef.current);\r\n                    // .select('g.content')\r\n                svg.call(d3.zoom().scaleExtent([1, 10]).on('zoom',(event)=>{\r\n                    svg.select('g.content').attr('transform', event.transform);\r\n                    this.zoom = event.transform\r\n                    }))\r\n            }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.highlight!==this.props.highlight){\r\n            this.setState({highlight:this.props.highlight})\r\n        }\r\n        if(prevProps.target!==this.props.target){\r\n            this.setState({target:(this.props.target??'').toLowerCase()})\r\n        }\r\n    }\r\n    render(){\r\n        const {classes,highlight} = this.props;\r\n        const {target} = this.state;\r\n       const highlighto = {};\r\n       highlight.forEach(d=>highlighto[d.toLowerCase()]=1);\r\n        const {geographies} = this.state;\r\n        const map_width=800;\r\n        const map_height=450;\r\n\r\n        const projection = geoMercator()\r\n            .center([ -99.43,31.47 ])\r\n            .translate([ map_width/2, map_height/2 ])\r\n            .scale([ 2000 ]);\r\n        return <div className={classes.root}>\r\n            <svg width={ map_width } height={ map_height } viewBox={`0 0 ${map_width} ${map_height}`} ref={this.svgRef}>\r\n                <g className=\"content\">\r\n                    <g className=\"countries\">\r\n                        {\r\n                            geographies.map((d,i) => (\r\n                                <path\r\n                                    key={ `path-${ i }` }\r\n                                    d={ geoPath().projection(projection)(d) }\r\n                                    className=\"country\"\r\n                                    // fill={ `rgba(38,50,56,${ 1 / geographies.length * i})` }\r\n                                    fill={(d.properties.NAME.toLowerCase()===target) ?'#17dd75':(highlighto[d.properties.NAME.toLowerCase()]?(this.state.Name===d.properties.NAME?'#3adddd':'steelBlue'):`rgba(38,50,56,1)` )}\r\n                                    stroke=\"#FFFFFF\"\r\n                                    strokeWidth={ 0.5 }\r\n                                    onMouseEnter={(event)=>{this.setState({Name:d.properties.NAME,x:(d3.pointer(event)[0]-this.zoom.x)/this.zoom.k,y:(d3.pointer(event)[1]/this.zoom.y)/this.zoom.k});}}\r\n                                    style={{pointerEvents:highlighto[d.properties.NAME.toLowerCase()]?'all':'none'}}\r\n                                    onMouseOut={()=>{this.setState({Name:undefined})}}\r\n                                    onClick={()=>{this.props.selected(d.properties.NAME.toUpperCase())}}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </g>\r\n                    <g className=\"label\">\r\n                        {\r\n                            geographies.map((d, i) => (\r\n                                <text\r\n                                    key={`path-${i}`}\r\n                                    // fill={ `rgba(38,50,56,${ 1 / geographies.length * i})` }\r\n                                    x={geoPath().projection(projection).centroid(d)[0]}\r\n                                    y={geoPath().projection(projection).centroid(d)[1]}\r\n                                    fill={(d.properties.NAME.toLowerCase() === target) ? 'black' : (highlighto[d.properties.NAME.toLowerCase()] ? (this.state.Name === d.properties.NAME ? 'black' : 'black') : `gray`)}\r\n                                    style={{pointerEvents: 'none'}}\r\n                                >\r\n                                    {d.properties.NAME.toUpperCase()}\r\n                                </text>\r\n                            ))\r\n                        }\r\n                    </g>\r\n                </g>\r\n                <g id={'legend'} transform={`translate(${map_width-200},${map_height-80})`}>\r\n                    <g transform={`translate(${10},${-17})`}>\r\n                        <text x={-40} y={0} dy={10} fill={'#8a8a8a'}>Click on map to select County</text>\r\n                    </g>\r\n                    <g transform={`translate(${10},${13})`}>\r\n                        <rect width={10} height={10} fill={'rgba(38,50,56,1)'}/>\r\n                        <text x={15} y={0} dy={10}> Not selectable</text>\r\n                    </g>\r\n                    <g transform={`translate(${10},${33})`}>\r\n                        <rect width={10} height={10} fill={'steelBlue'}/>\r\n                        <text x={15} y={0} dy={10}> Selectable</text>\r\n                    </g>\r\n                    {/*<g transform={`translate(${10},${53})`}>*/}\r\n                    {/*    <rect width={10} height={10} fill={'#3adddd'}/>*/}\r\n                    {/*    <text x={15} y={0} dy={10}> Highlighted</text>*/}\r\n                    {/*</g>*/}\r\n                    <g transform={`translate(${10},${53})`}>\r\n                        <rect width={10} height={10} fill={'#17dd75'}/>\r\n                        <text x={15} y={0} dy={10}> Selected</text>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n            {/*<Card className=\"tooltip\" style={{display:this.state.Name?'block':'none',left:this.state.x,top:this.state.y}}>*/}\r\n            <div className=\"tooltip bold\" style={{display:this.state.Name?'block':'none',left:10,top:10, fontSize:20, padding:5,backgroundColor:'rgba(255,255,255,0.49)'}}>\r\n                {this.state.Name}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(County);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Slider,\r\n    Typography,\r\n    Button,\r\n    Paper,\r\n    Grid,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    StepContent,\r\n    TextField,\r\n    Container,\r\n    Input,\r\n    Hidden\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Graph from './Graph'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport Image from 'material-ui-image';\r\nimport DistrictPic from '../././image/District.png';\r\nimport CountyPic from '../././image/County.png';\r\nimport TrafficOneDirectionPic from '../././image/TotalDesign Traffic.png';\r\nimport StructureDesignCriteriaPic from '../././image/StructureDesignCriteria.png';\r\nimport AcceptableNumberofPunchoutPic from '../././image/AcceptableNumberofPunchout.png';\r\nimport ConcreteLayerPic from '../././image/ConcreteLayer.png';\r\nimport soilSystermPic from '../././image/soilSystermPic.png';\r\nimport subbasePic from '../././image/subbase.png';\r\nimport BasetypePic from '../././image/BasetypePic.png';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Report from \"./report\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport * as d3 from \"d3\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport sTable from \"./data/sTable.csv\";\r\n// import stress from \"./data/stress.csv\";\r\nimport kTable from \"./data/kTable.csv\";\r\nimport temperature from \"./data/temperature.csv\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Divider from \"@material-ui/core/Divider/Divider\";\r\nimport County from \"./County\";\r\n\r\nconst districts = {\r\n    \"ABILENE\": [\"BORDEN\", \"CALLAHAN\", \"FISHER\", \"HASKELL\", \"HOWARD\", \"JONES\", \"KENT\", \"MITCHELL\", \"NOLAN\", \"SCURRY\", \"SHACKELFORD\", \"STONEWALL\", \"TAYLOR\"],\r\n    \"AMARILLO\": [\"ARMSTRONG\", \"CARSON\", \"DALLAM\", \"DEAF SMITH\", \"GRAY\", \"HANSFORD\", \"HARTLEY\", \"HEMPHILL\", \"HUTCHINSON\", \"LIPSCOMB\", \"MOORE\", \"OCHILTREE\", \"OLDHAM\", \"POTTER\", \"RANDALL\", \"ROBERTS\", \"SHERMAN\"],\r\n    \"ATLANTA\": [\"BOWIE\", \"CAMP\", \"CASS\", \"HARRISON\", \"MARION\", \"MORRIS\", \"PANOLA\", \"TITUS\", \"UPSHUR\"],\r\n    \"AUSTIN\": [\"BASTROP\", \"BLANCO\", \"BURNET\", \"CALDWELL\", \"GILLESPIE\", \"HAYS\", \"LEE\", \"LLANO\", \"MASON\", \"TRAVIS\", \"WILLIAMSON\"],\r\n    \"BEAUMONT\": [\"CHAMBERS\", \"HARDIN\", \"JASPER\", \"JEFFERSON\", \"LIBERTY\", \"NEWTON\", \"ORANGE\", \"TYLER\"],\r\n    \"BROWNWOOD\": [\"BROWN\", \"COLEMAN\", \"COMANCHE\", \"EASTLAND\", \"LAMPASAS\", \"MCCULLOCH\", \"MILLS\", \"SAN SABA\", \"STEPHENS\", \"BRISCOE\", \"CHILDRESS\", \"COLLINGSWORTH\", \"COTTLE\", \"DICKENS\", \"DONLEY\", \"FOARD\", \"HALL\", \"HARDEMAN\", \"KING\", \"KNOX\", \"MOTLEY\", \"WHEELER\"],\r\n    \"BRYAN\": [\"BRAZOS\", \"BURLESON\", \"FREESTONE\", \"GRIMES\", \"LEON\", \"MADISON\", \"MILAM\", \"ROBERTSON\", \"WALKER\", \"WASHINGTON\"],\r\n    \"CORPUS CHRISTI\": [\"ARANSAS\", \"BEE\", \"GOLIAD\", \"JIM WELLS\", \"KARNES\", \"KLEBERG\", \"LIVE OAK\", \"NUECES\", \"REFUGIO\", \"SAN PATRICIO\"],\r\n    \"DALLAS\": [\"COLLIN\", \"DALLAS\", \"DENTON\", \"ELLIS\", \"KAUFMAN\", \"NAVARRO\", \"ROCKWALL\"],\r\n    \"EL PASO\": [\"BREWSTER\", \"CULBERSON\", \"EL PASO\", \"HUDSPETH\", \"JEFF DAVIS\", \"PRESIDIO\"],\r\n    \"FORT WORTH\": [\"ERATH\", \"HOOD\", \"JACK\", \"JOHNSON\", \"PALO PINTO\", \"PARKER\", \"SOMERVELL\", \"TARRANT\", \"WISE\"],\r\n    \"HOUSTON\": [\"BRAZORIA\", \"FORT BEND\", \"GALVESTON\", \"HARRIS\", \"MONTGOMERY\", \"WALLER\"],\r\n    \"LAREDO\": [\"DIMMITT\", \"DUVAL\", \"KINNEY\", \"LA SALLE\", \"MAVERICK\", \"VAL VERDE\", \"WEBB\", \"ZAVALA\"],\r\n    \"LUBBOCK\": [\"BAILEY\", \"CASTRO\", \"COCHRAN\", \"CROSBY\", \"DAWSON\", \"FLOYD\", \"GAINES\", \"GARZA\", \"HALE\", \"HOCKLEY\", \"LAMB\", \"LUBBOCK\", \"LYNN\", \"PARMER\", \"SWISHER\", \"TERRY\", \"YOAKUM\"],\r\n    \"LUFKIN\": [\"ANGELINA\", \"HOUSTON\", \"NACOGDOCHES\", \"POLK\", \"SABINE\", \"SAN AUGUSTINE\", \"SAN JACINTO\", \"SHELBY\", \"TRINITY\"],\r\n    \"ODESA\": [\"ANDREWS\", \"CRANE\", \"ECTOR\", \"LOVING\", \"MARTIN\", \"MIDLAND\", \"PECOS\", \"REEVES\", \"TERRELL\", \"UPTON\", \"WARD\", \"WINKLER\"],\r\n    \"PARIS\": [\"DELTA\", \"FANNIN\", \"FRANKLIN\", \"GRAYSON\", \"HOPKINS\", \"HUNT\", \"LAMAR\", \"RAINS\", \"RED RIVER\"],\r\n    \"PHARR\": [\"BROOKS\", \"CAMERON\", \"HIDALGO\", \"JIM HOGG\", \"KENEDY\", \"STARR\", \"WILLACY\", \"ZAPATA\"],\r\n    \"SAN ANGELO\": [\"COKE\", \"CONCHO\", \"CROCKETT\", \"EDWARDS\", \"GLASSCOCK\", \"IRION\", \"KIMBLE\", \"MENARD\", \"REAGAN\", \"REAL\", \"RUNNELS\", \"SCHLEICHER\", \"STERLING\", \"SUTTON\", \"TOM GREEN\"],\r\n    \"SAN ANTONIO\": [\"ATASCOSA\", \"BANDERA\", \"BEXAR\", \"COMAL\", \"FRIO\", \"GUADALUPE\", \"KENDALL\", \"KERR\", \"MCMULLEN\", \"MEDINA\", \"UVALDE\", \"WILSON\"],\r\n    \"TYLER\": [\"ANDERSON\", \"CHEROKEE\", \"GREGG\", \"HENDERSON\", \"RUSK\", \"SMITH\", \"VAN ZANDT\", \"WOOD\"],\r\n    \"WACO\": [\"BELL\", \"BOSQUE\", \"CORYELL\", \"FALLS\", \"HAMILTON\", \"HILL\", \"LIMESTONE\", \"MCLENNAN\"],\r\n    \"WICHITA FALLS\": [\"ARCHER\", \"BAYLOR\", \"CLAY\", \"COOKE\", \"MONTAGUE\", \"THROCKMORTON\", \"WICHITA\", \"WILBARGER\", \"YOUNG\"],\r\n    \"YOKUM\": [\"AUSTIN\", \"CALHOUN\", \"COLORADO\", \"DEWITT\", \"FAYETTE\", \"GONZALES\", \"JACKSON\", \"LAVACA\", \"MATAGORDA\", \"VICTORIA\", \"WHARTON\"]\r\n};\r\nconst districtCode = {\"ABILENE\":\"ABL\",\"AMARILLO\":\"AMA\",\"ATLANTA\":\"ATL\",\"AUSTIN\":\"AUS\",\"BEAUMONT\":\"BMT\",\"BRYAN\":\"BRY\",\"BROWNWOOD\":\"BWD\",\"CORPUS CHRISTI\":\"CRP\",\"DALLAS\":\"DAL\",\"EL PASO\":\"ELP\",\"FORT WORTH\":\"FTW\",\"HOUSTON\":\"HOU\",\"LUBBOCK\":\"LBB\",\"LUFKIN\":\"LFK\",\"LAREDO\":\"LRD\",\"ODESA\":\"ODA\",\"PARIS\":\"PAR\",\"PHARR\":\"PHR\",\"SAN ANTONIO\":\"SAT\",\"SAN ANGELO\":\"SJT\",\"TYLER\":\"TYL\",\"WACO\":\"WAC\",\"WICHITA FALLS\":\"WFS\",\"YOKUM\":\"YKM\"};\r\nconst counties = {};\r\nObject.keys(districts).forEach(key => {\r\n    districts[key].forEach(c => counties[c] ? counties[c].push(key) : counties[c] = [key])\r\n});\r\nconst highway = [\"IH 45\", \"US 290\", \"IH 30\", \"US 59\", \"IH 35W\", \"IH 820\", \"IH 10\", \"IH 40\", \"IH 35\", \"US 287\", \"US 81\", \"IH 27\", \"SL 289\", \"SH 226\", \"SH 36\", \"US 83B\", \"VA\", \"FM 3129\", \"IH 20\", \"US 71\", \"US 79\", \"US 47\", \"US 67\", \"BU90-Y\", \"CS\", \"FM 1960\", \"FM 364\", \"FM 365\", \"SH 347\", \"SH 105\", \"SH 12\", \"SH 124\", \"SH 146\", \"SH 326\", \"SH 61\", \"SH 73\", \"SH 87\", \"SS 380\", \"US 90\", \"US 69\", \"US 96\", \"BS6-R\", \"SH 21\", \"BW 8\", \"US 83\", \"BS 121H\", \"FM 1171\", \"FM 1382\", \"FM 2499\", \"FM 709\", \"FM 740\", \"IH 35E\", \"IH4 5\", \"IH 635\", \"LP 12\", \"LP 354\", \"MH\", \"SH 289\", \"SH 31\", \"SH 66\", \"SH 78\", \"SH 114\", \"SH 121\", \"SH 161\", \"SH 180\", \"SH 183\", \"SH 310\", \"SH 34\", \"SH 342\", \"SH 356\", \"SL 12\", \"SL 288\", \"SP 244\", \"SP 348\", \"SP 366\", \"SPUR 354\", \"US 175\", \"US 380\", \"US 75\", \"US 77\", \"US 377\", \"US 80\", \"US 54\", \"BU 287P\", \"FM 157\", \"IH 820 \", \"SH 199\", \"SH 26\", \"SH 360\", \"FM 1764\", \"FM 523\", \"FM 1092\", \"FM 1488\", \"FM 518\", \"IH 610\", \"SH 288\", \"SH 332\", \"SH 225\", \"SH 242\", \"SH 249\", \"SH 35\", \"US 90A\", \"IH27\", \"SH 7\", \"FM 1472\", \"LP 20\", \"ODA 181-1\", \"ODA 181-2\", \"ODA 250-1\", \"ODA 250-2\", \"US 82\", \"SH 6\", \"FM 85\", \"LP 281\", \"LP 323\", \"SH 19\", \"SH 198\", \"SH 334\", \"US 259\", \"US 281\", \"FM 1695\", \"FM 3476\", \"FM 933\", \"IH 36\", \"LP 363\", \"SH 195\", \"US 84\", \"BU 287J\", \"IH 44\", \"SH 240\", \"SP 1027 \", \"US 287 \", \"US 55\", \"US 70\", \"SH 71\"];\r\n// const baseType = [\"CTB\", \"HMA Base\"];\r\nconst soilClassSub = [\"GW\",\"GP\",\"GM\",\"GC\",\"SW\",\"SP\",\"SM\",\"SC\",\"ML\",\"CL\",\"OL\",\"MH\",\"CH\",\"OH\",\"Pt\"];\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        '& .MuiTextField-root': {\r\n            width: '100%',\r\n        },\r\n        '& input': {\r\n            width: '100%',\r\n        },\r\n        '& input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button':{\r\n            opacity: 1\r\n        }\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    dot: {\r\n        borderBottom: '2px dotted',\r\n        marginBottom: '4px'\r\n    },\r\n    helpHolder: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    inputWithHelper: {\r\n        '& label': {\r\n            pointerEvents: 'all'\r\n        }\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n        zIndex:2\r\n    }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" size=\"small\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\nconst init = {\r\n    activeStep: 0,\r\n    stepsLength: 3,\r\n    finished: false,\r\n    DesignLife: 30,\r\n    PunchoutsPerMile: 10,\r\n    LanesOneDirection: 2,\r\n    TrafficOneDirection: 100,\r\n    ModulusOfRupture: 570,\r\n    ElasticModulue: 5,\r\n    SoilClassificationSystem:'USCS',\r\n    SoilSub:\"CH\",\r\n    PlasticityIndex:8,\r\n    SubbaseType:\"LTS\",\r\n    SubbaseThickness:12,\r\n    BaseType:'',\r\n    BaseThickness: 6,\r\n    BaseThicknessMin: 6,\r\n    ModulusBase : 400,\r\n    CompositeK: 539,\r\n    District: null,\r\n    County: null,\r\n    Highway: null,\r\n    ProjectScope: null,\r\n    StationBegin: null,\r\n    StationEnd: null,\r\n    currentDistricts: Object.keys(districts),\r\n    currentCounties: Object.keys(counties),\r\n    SubbaseThicknessThreshHold:-1,\r\n    SubbaseTypeOpt:['Cement treated subgrade',\r\n        'Lime treated subgrade',\r\n        'Lime-cement treated subgrade',\r\n        'Lime-fly ash treated subgrade',\r\n        'Fly ash treated subgrade',\r\n        'N/A'\r\n    ],\r\n    baseTypeOpt:[\"CTB\", \"HMA Base\"],\r\n    ksTable:new Map(),\r\n    ssTable:[],\r\n    temperature:[],\r\n}\r\nclass CRCP extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {...init};\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if ((prevState.ModulusBase!==this.state.ModulusBase)||(prevState.SoilSub!==this.state.SoilSub)||(prevState.BaseThickness!==this.state.BaseThickness)){\r\n            this.calculateCompositeK();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // d3.tsv(stress).then(data_=> {\r\n        //     this.setState({data: data_});\r\n        // });\r\n        d3.csv(kTable).then(_data=>{\r\n            let ksTable = new Map();\r\n            _data.forEach(r=>{\r\n                ksTable.set(''+r['Subgrade K-Value (psi/in.)']+' '+r['Base Thickness (in.)']+' '+r['Modulus of Base Layer (ksi)'],+r['Composite K (psi/in.)']);\r\n            })\r\n            this.setState({ksTable})\r\n        })\r\n        d3.csv(sTable).then(_data=>{\r\n            this.setState({ssTable:_data})\r\n        })\r\n        d3.csv(temperature).then(_data=>{\r\n            this.setState({temperature:_data})\r\n        })\r\n        this.handlePlasticityIndex(this.state.PlasticityIndex);\r\n    }\r\n    computeStress = (SlabThickness)=>{ // F7\r\n        let input = {\r\n            H: {Input:SlabThickness,\"L Bound\":0, \"U Bound\":0},\r\n            K: {Input:this.state.CompositeK,\"L Bound\":0, \"U Bound\":0}\r\n        }\r\n        input.H[\"L Bound\"] = (input.H.Input>=15.5)?15.5:((input.H.Input<6.5)?6:Math.floor(input.H.Input*2)/2);\r\n        input.H[\"U Bound\"] = (input.H.Input>=15.5)?16:((input.H.Input<6.5)?6.5:Math.ceil(input.H.Input*2+1)/2);\r\n        const B3 = input.K.Input;\r\n        input.K[\"L Bound\"] = (B3<100?50:(B3<300?100:(B3<500?300:(B3<700?500:(B3<1000?700:(B3<1300?1000:(B3>=1300?1300:0)))))));\r\n        input.K[\"U Bound\"] = (B3<100?100:(B3<300?300:(B3<500?500:(B3<700?700:(B3<1000?1000:(B3<1300?1300:(B3>=1300?1600:0)))))));\r\n        const mapd2 = {};\r\n        let lastd2 = {index:1,DT:0,H:0,K:0,STR_T:0,STR_E:0};\r\n        this.state.ssTable.forEach(s=>{\r\n            const B2 = +s[\"Thickness of Concrete Layer (in.)\"];\r\n            const A2 = +s[\"Temperature Change (F)\"];\r\n            const C2 = +s[\"Composite K (psi/in.)\"];\r\n            const D2 = +s[\"Concrete Stress (T) (psi)\"];\r\n            const E2 = +s[\"Concrete Stress (E) (psi)\"];\r\n\r\n            const DT = ((B2-input.H[\"L Bound\"])*(B2-input.H[\"U Bound\"]))===0?((C2-input.K[\"L Bound\"])*(C2-input.K[\"U Bound\"])===0?A2:0):0;\r\n            const H = ((B2-input.H[\"L Bound\"])*(B2-input.H[\"U Bound\"]))===0?((C2-input.K[\"L Bound\"])*(C2-input.K[\"U Bound\"])===0?B2:0):0;\r\n            const K = ((B2-input.H[\"L Bound\"])*(B2-input.H[\"U Bound\"]))===0?((C2-input.K[\"L Bound\"])*(C2-input.K[\"U Bound\"])===0?C2:0):0;\r\n            const STR_T = ((B2-input.H[\"L Bound\"])*(B2-input.H[\"U Bound\"]))===0?((C2-input.K[\"L Bound\"])*(C2-input.K[\"U Bound\"])===0?D2:0):0;\r\n            const STR_E = ((B2-input.H[\"L Bound\"])*(B2-input.H[\"U Bound\"]))===0?((C2-input.K[\"L Bound\"])*(C2-input.K[\"U Bound\"])===0?E2:0):0;\r\n            const index = DT===0?(lastd2.DT===0?lastd2.index:lastd2.index+1):(lastd2.DT===0?lastd2.index:lastd2.index+1);\r\n            mapd2[index] = {index,DT,H,K,STR_T,STR_E};\r\n            lastd2 = {index,DT,H,K,STR_T,STR_E};\r\n        });\r\n\r\n        const data3 = [];\r\n        for (let i = 1;i<25;i++) {\r\n            const index = Math.floor((i-1)/4)*4 + 1;\r\n            const DT = mapd2[index].DT;\r\n            const H = mapd2[Math.floor((i-1)/2)*2 + 1].H;\r\n            const {K,STR_T,STR_E} = mapd2[i];\r\n            data3.push({DT,H,K,STR_T,STR_E})\r\n        }\r\n        const data4 = [];\r\n        for (let i = 0;i<12;i++) {\r\n            const Q2 = data3[i*2].STR_T;\r\n            const Q3 = data3[i*2+1].STR_T;\r\n            const R2 = data3[i*2].STR_E;\r\n            const R3 = data3[i*2+1].STR_E;\r\n            const STR_T = ((Q3-Q2)*input.K.Input+(Q2*input.K['U Bound']-Q3*input.K['L Bound']))/(input.K['U Bound']-input.K['L Bound']);\r\n            const STR_E = ((R3-R2)*input.K.Input+(R2*input.K['U Bound']-R3*input.K['L Bound']))/(input.K['U Bound']-input.K['L Bound']);\r\n            data4.push({STR_T,STR_E})\r\n        }\r\n        const data5 = [];\r\n        for (let i = 0;i<6;i++) {\r\n            const W2 = data4[i*2].STR_T;\r\n            const W4 = data4[i*2+1].STR_T;\r\n            const X2 = data4[i*2].STR_E;\r\n            const X4 = data4[i*2+1].STR_E;\r\n            const STR_T = ((W4-W2)*input.H.Input+(W2*input.H['U Bound']-W4*input.H['L Bound']))/(input.H['U Bound']-input.H['L Bound']);\r\n            const STR_E = ((X4-X2)*input.H.Input+(X2*input.H['U Bound']-X4*input.H['L Bound']))/(input.H['U Bound']-input.H['L Bound']);\r\n            data5.push({STR_T,STR_E})\r\n        }\r\n        const districtemp = this.state.temperature.filter(d=>d.District===districtCode[this.state.District]);\r\n        const stress = districtemp.map((t,ti)=>{\r\n            const AveragetTemperature = +t['Average Temperature (F)'];\r\n            const DT = 120-AveragetTemperature;\r\n            const H = input.H.Input;\r\n            const K = input.K.Input;\r\n            const STR_T = getSTR_T(DT);\r\n            const STR_E = getSTR_E(DT);\r\n            if(ti===3)\r\n                debugger\r\n            return {'District':this.state.District,'Month':ti+1,'Average Temperature':AveragetTemperature,\r\n                DT,H,K,'STR (T)':STR_T,'STR (E)':STR_E}\r\n        });\r\n\r\n        function getSTR_T(DT){\r\n            if (DT>=95)\r\n                return (data5[5].STR_T-data5[4].STR_T)/(data3[20].DT-data3[16].DT)*(DT-data3[20].DT)+data5[5].STR_T;\r\n            if ((DT>=65)&&(DT<95))\r\n                return (data5[5].STR_T-data5[4].STR_T)/(data3[20].DT-data3[16].DT)*(DT-data3[16].DT)+data5[4].STR_T;\r\n            if ((DT>=35)&&(DT<65))\r\n                return (data5[4].STR_T-data5[3].STR_T)/(data3[16].DT-data3[12].DT)*(DT-data3[12].DT)+data5[3].STR_T;\r\n            if ((DT>=5)&&(DT<35))\r\n                return (data5[3].STR_T-data5[2].STR_T)/(data3[12].DT-data3[8].DT)*(DT-data3[8].DT)+data5[2].STR_T;\r\n            if((DT>=-25) && (DT<5))\r\n                return (data5[2].STR_T-data5[1].STR_T)/(data3[8].DT-data3[4].DT)*(DT-data3[4].DT)+data5[1].STR_T;\r\n            if((DT>=-55)&& (DT<-25))\r\n                return (data5[1].STR_T-data5[0].STR_T)/(data3[4].DT-data3[0].DT)*(DT-data3[0].DT)+data5[0].STR_T;\r\n            return (data5[1].STR_T-data5[0].STR_T)/(data3[4].DT-data3[0].DT)*(DT-data3[0].DT)+data5[0].STR_T;\r\n        }\r\n        function getSTR_E(DT){\r\n            if (DT>=95)\r\n                return (data5[5].STR_E-data5[4].STR_E)/(data3[20].DT-data3[16].DT)*(DT-data3[20].DT)+data5[5].STR_E;\r\n            if ((DT>=65)&&(DT<95))\r\n                return (data5[5].STR_E-data5[4].STR_E)/(data3[20].DT-data3[16].DT)*(DT-data3[16].DT)+data5[4].STR_E;\r\n            if ((DT>=35)&&(DT<65))\r\n                return (data5[4].STR_E-data5[3].STR_E)/(data3[16].DT-data3[12].DT)*(DT-data3[12].DT)+data5[3].STR_E;\r\n            if ((DT>=5)&&(DT<35))\r\n                return (data5[3].STR_E-data5[2].STR_E)/(data3[12].DT-data3[8].DT)*(DT-data3[8].DT)+data5[2].STR_E;\r\n            if((DT>=-25) && (DT<5))\r\n                return (data5[2].STR_E-data5[1].STR_E)/(data3[8].DT-data3[4].DT)*(DT-data3[4].DT)+data5[1].STR_E;\r\n            if((DT>=-55)&& (DT<-25))\r\n                return (data5[1].STR_E-data5[0].STR_E)/(data3[4].DT-data3[0].DT)*(DT-data3[0].DT)+data5[0].STR_E;\r\n            return (data5[1].STR_E-data5[0].STR_E)/(data3[4].DT-data3[0].DT)*(DT-data3[0].DT)+data5[0].STR_E;\r\n        }\r\n        // for (let i = 0;i<12;i++) {\r\n        //     const item = {'District'\t'Month'\t'Average' 'Temperature'\tDT\tH\tK\tSTR (T)\tSTR (E)}\r\n        // }\r\n        // this.setState({data: stress});\r\n        return stress;\r\n    }\r\n    recompute = ()=>{\r\n        let __ret = {};\r\n        let i = 7;\r\n        for (i=7;i<14;i++) {\r\n            __ret = this.analysis(i);\r\n            console.log(__ret.rows[__ret.r][12])\r\n            if(__ret.rows[__ret.r][12]<=this.state.PunchoutsPerMile)\r\n                break;\r\n        }\r\n        let rowIndexStress = __ret.rowIndexStress;\r\n        let row1 = __ret.row1;\r\n        const rows = __ret.rows;\r\n        var r = __ret.r;\r\n        this.props.AnalysisPunchouts(rows[r][12]);\r\n        this.props.AnalysisSlabThickness(Math.min(13,i));\r\n        this.setState({row1,rows,rowIndexStress})\r\n    };\r\n\r\n    analysis(slabthickness) {\r\n        const data = this.computeStress(slabthickness);\r\n        console.log(data)\r\n        let rowIndexStress = 8;\r\n        let row1 = [];\r\n        const rows = [];\r\n        row1.push(1);\r\n        row1.push(row1[0] / 12);\r\n        row1.push(this.state.ModulusOfRupture);\r\n        row1.push(57000 / 7.5 * row1[2] / 1000);\r\n        row1.push(+data[rowIndexStress - 2][\"STR (T)\"]);\r\n        row1.push(data[rowIndexStress - 2][\"STR (E)\"] * row1[3] / 5000)\r\n        row1.push(row1[4] + row1[5])\r\n        row1.push(row1[6] / row1[2])\r\n        row1.push(11800 * Math.pow(row1[7], fatigue(this.state.CompositeK)))\r\n        row1.push(lane(this.state.LanesOneDirection)\r\n            * this.state.TrafficOneDirection * 1000000 / 12 / this.state.DesignLife)\r\n        row1.push(row1[9] / row1[8])\r\n        row1.push(row1[10])\r\n        row1.push(18.985 / (1 + 5 * Math.pow(row1[11], -1.1)))\r\n        rows.push(row1);    // Add to the array\r\n\r\n        //console.log(+document.getElementById(\"DesignLife\").value);\r\n        for (var i = 1; i <= this.state.DesignLife; i++) {\r\n            //debugger;\r\n            if (i !== 1)\r\n                rowIndexStress = 7;\r\n            for (var j = 0; j < 12; j++) {\r\n                if (i == 1 && j == 0)\r\n                    ;\r\n                    //If counterYear = 1 And counterMonth = 1 Then\r\n                //      'If First Year than Omit Calculation of First Month, Already Done\r\n                else {\r\n                    rowIndexStress = rowIndexStress + 1\r\n                    let row2 = [];\r\n                    row2.push(row1[0] + 1)\r\n                    row2.push(row2[0] / 12);\r\n                    // Cells(rowIndex, 2) = Cells(rowIndex, 1).Value / 12\r\n                    row2.push(this.state.ModulusOfRupture\r\n                        * Math.pow((30 * row2[0] / (4 + 0.85 * 30 * row2[0])), 0.5));\r\n                    // Cells(rowIndex, 3) = Sheets(\"Input\").Range(\"F8\").Value * ((30 * Cells(rowIndex, 1).Value / (4 + 0.85 * 30 * Cells(rowIndex, 1).Value))) ^ 0.5\r\n                    row2.push(57000 / 7.5 * row2[2] / 1000);\r\n                    // Cells(rowIndex, 4) = 57000 / 7.5 * Cells(rowIndex, 3) / 1000\r\n                    row2.push(+data[rowIndexStress - 2][\"STR (T)\"]);\r\n                    // Cells(rowIndex, 5) = Sheets(\"Stress\").Cells(rowIndexStress, 38).Value\r\n                    row2.push(data[rowIndexStress - 2][\"STR (E)\"] * row2[3] / 5000);\r\n                    // Cells(rowIndex, 6) = Sheets(\"Stress\").Cells(rowIndexStress, 39).Value * Cells(rowIndex, 4) / 5000\r\n                    row2.push(row2[4] + row2[5]);\r\n                    // Cells(rowIndex, 7) = Cells(rowIndex, 5).Value + Cells(rowIndex, 6).Value\r\n                    row2.push(row2[6] / row2[2]);\r\n                    // Cells(rowIndex, 8) = Cells(rowIndex, 7).Value / Cells(rowIndex, 3).Value\r\n                    row2.push(11800 * Math.pow(row2[7], fatigue(this.state.CompositeK)));\r\n                    // Cells(rowIndex, 9) = 11800 * Cells(rowIndex, 8).Value ^ fatigue(Sheets(\"Input\").Range(\"CompositeK\").Value)\r\n                    row2.push(row1[9]);\r\n                    // Cells(rowIndex, 10) = Cells(rowIndex - 1, 10).Value\r\n                    row2.push(row2[9] / row2[8]);\r\n                    // Cells(rowIndex, 11) = Cells(rowIndex, 10).Value / Cells(rowIndex, 9).Value\r\n                    row2.push(row1[11] + row2[10])\r\n                    // Cells(rowIndex, 12) = Cells(rowIndex - 1, 12).Value + Cells(rowIndex, 11).Value\r\n                    row2.push(18.985 / (1 + 5 * Math.pow(row2[11], -1.1)))\r\n                    // Cells(rowIndex, 13) = 18.985 / (1 + 5 * Cells(rowIndex, 12).Value ^ -1.1)\r\n                    if (rowIndexStress == 13)\r\n                        rowIndexStress = 1\r\n                    rows.push(row2);\r\n                    row1 = row2;\r\n                }\r\n            }\r\n        }\r\n        var r = 12 * this.state.DesignLife - 1;\r\n        console.log(rows)\r\n        return {rowIndexStress, row1, rows, r};\r\n        function lane(n) {\r\n            if (n <= 2)\r\n                return 1;\r\n            else if (n >= 4)\r\n                return 0.6;\r\n            else\r\n                return 0.7;\r\n        }\r\n\r\n        function fatigue(k) {\r\n            if (k < 200)\r\n                return k * 0.0221 - 15.97;\r\n            else if (k < 300)\r\n                return k * 0.0164 - 14.83;\r\n            else if (k < 500)\r\n                return k * 0.0038 - 11.05;\r\n            else if (k < 1000)\r\n                return k * 0.00033 - 9.31;\r\n            else\r\n                return k * 0.00071 - 9.69;\r\n        }\r\n    }\r\n\r\n    errorFunc={\r\n        Step3:{\r\n            'SubbaseThickness': ()=>this.state.SubbaseThickness<this.state.SubbaseThicknessThreshHold?`Must greater than ${this.state.SubbaseThicknessThreshHold}`:(this.state.SubbaseThickness===''?'Required':null),\r\n            'BaseThickness': ()=>(this.state.BaseThickness<this.state.BaseThicknessMin)?`≥ ${this.state.BaseThicknessMin}`:(this.state.BaseThickness===''?'Required':null)\r\n        }\r\n    };\r\n\r\n    handleNext = () => {\r\n        this.setState({activeStep: this.state.activeStep + 1});\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.setState({activeStep: this.state.activeStep - 1});\r\n    };\r\n\r\n    handleModify = () => {\r\n        this.setState({activeStep: 0, finished:false});\r\n    };\r\n\r\n    handleReset = () => {\r\n        this.setState({...init});\r\n    };\r\n    onLoadInput = (event) =>{\r\n        const self = this;\r\n        var reader = new FileReader();\r\n        reader.addEventListener(\"load\", parseFile, false);\r\n        if (event.target.files[0]) {\r\n            debugger\r\n            reader.readAsText(event.target.files[0]);\r\n        }\r\n\r\n        function parseFile(){\r\n            let loaded = false;\r\n            var data = JSON.parse(reader.result);\r\n            loaded = true;\r\n            const currentState = JSON.stringify(self.state);\r\n            try{\r\n                self.setState(data);\r\n                event.target.value = ''\r\n            }catch(e){\r\n                window.alert(\"Can't read file. Please check format!\")\r\n                if(loaded)\r\n                    self.setState(JSON.parse(currentState))\r\n                event.target.value = ''\r\n            }\r\n        }\r\n    }\r\n    onSaveInput = () => {\r\n        let filename = `txDoT_${this.state.District}_${new Date().toISOString().replace('.','|')}`;\r\n        let saveDataKey = ['DesignLife', 'PunchoutsPerMile', 'LanesOneDirection', 'TrafficOneDirection', 'ModulusOfRupture',\r\n            'ElasticModulue', 'SoilClassificationSystem', 'SoilSub', 'PlasticityIndex', 'SubbaseType',\r\n            'SubbaseThickness', 'BaseType', 'BaseThickness', 'BaseThicknessMin', 'ModulusBase',\r\n            'CompositeK', 'District', 'County', 'Highway', 'ProjectScope', 'StationBegin', 'StationEnd',\r\n            'currentDistricts', 'currentCounties', 'SubbaseThicknessThreshHold', 'SubbaseTypeOpt', 'baseTypeOpt'];\r\n        const saveData = {};\r\n        saveDataKey.forEach(k=>saveData[k]=this.state[k]);\r\n        const jsonse = JSON.stringify(saveData);\r\n        let blob = new Blob([jsonse], {type: \"application/json\"});\r\n\r\n        // Specify link url\r\n        let url = URL.createObjectURL(blob);\r\n        // Specify file name\r\n        filename = filename?filename+'.json':'txDot.json';\r\n\r\n        // Create download link element\r\n        let downloadLink = document.createElement(\"a\");\r\n\r\n        document.body.appendChild(downloadLink);\r\n\r\n        if(navigator.msSaveOrOpenBlob ){\r\n            navigator.msSaveOrOpenBlob(blob, filename);\r\n        }else{\r\n            // Create a link to the file\r\n            downloadLink.href = url;\r\n\r\n            // Setting the file name\r\n            downloadLink.download = filename;\r\n\r\n            //triggering the function\r\n            downloadLink.click();\r\n        }\r\n\r\n        document.body.removeChild(downloadLink);\r\n    }\r\n\r\n    handleOpenHelper = (content,freeze) => (event) => {\r\n        if (this.state.helperEl) {\r\n            if (this.state.helperEl.el === event.currentTarget && freeze && this.state.helperEl.freeze) // same target\r\n                this.handleCloseHelper(event);\r\n            else {\r\n                if (freeze || this.state.helperEl.el !== event.currentTarget && freeze)\r\n                    this.setState({helperEl: {el: event.currentTarget, content, freeze}})\r\n            }\r\n        }else{\r\n            this.setState({helperEl: {el: event.currentTarget, content, freeze}})\r\n        }\r\n    };\r\n\r\n    handleCloseHelper = (source) => {\r\n        if(source.type!=='mouseleave' || source.type==='mouseleave'&&this.state.helperEl&& (!this.state.helperEl.freeze))\r\n        this.setState({helperEl: undefined})\r\n    };\r\n\r\n    handleBlurSliderInput = (key, min, max) => {\r\n        const value = this.state[key];\r\n        const obj = {};\r\n        if (value < min) {\r\n            obj[key] = min;\r\n            this.setState(obj);\r\n        } else if (value > max) {\r\n            obj[key] = max;\r\n            this.setState(obj);\r\n        }\r\n    }\r\n    handleChangeSliderInput = (event, key) => {\r\n        const obj = {};\r\n        obj[key] = event.target.value === '' ? '' : Number(event.target.value);\r\n        this.setState(obj);\r\n    }\r\n    handleChange = (key, value) => {\r\n        const obj = {};\r\n        obj[key] = value;\r\n        this.setState(obj);\r\n    };\r\n    handleSoilSub = (value)=>{\r\n        let baseTypeOpt = [\"CTB\", \"HMA Base\"];\r\n        let BaseType = this.state.BaseType;\r\n        if (this.state.PlasticityIndex>=15){\r\n            if ([\"ML\", \"CL\", \"OL\", \"MH\", \"CH\", \"OH\"].indexOf(value)!==-1)\r\n             {   baseTypeOpt = [\"CTB\"];\r\n                 BaseType = \"CTB\";\r\n             }\r\n        }\r\n        this.setState({SoilSub:value,baseTypeOpt,BaseType});\r\n    };\r\n    handleBaseType = (value) => {\r\n        let BaseThicknessMin = 4;\r\n        let BaseThickness = this.state.BaseThickness;\r\n        let ModulusBase = 400;\r\n        if (value==='CTB'){\r\n            BaseThicknessMin = 6;\r\n            ModulusBase = 500;\r\n        }\r\n        if (BaseThickness<BaseThicknessMin)\r\n            BaseThickness = BaseThicknessMin;\r\n        this.setState({BaseType:value,BaseThicknessMin,BaseThickness,ModulusBase});\r\n    }\r\n    handlePlasticityIndex = (value)=>{\r\n        let SubbaseTypeOpt = [];\r\n        let SubbaseThicknessThreshHold = -1;\r\n        if (value<15){\r\n            SubbaseTypeOpt = ['Cement treated subgrade','Lime-fly ash treated subgrade','N/A'];\r\n        }else if (value<35){\r\n            SubbaseTypeOpt = ['Cement treated subgrade',\r\n                'Lime treated subgrade',\r\n                'Lime-cement treated subgrade',\r\n                'Lime-fly ash treated subgrade',\r\n                'Fly ash treated subgrade','N/A'];\r\n        }else{\r\n            SubbaseTypeOpt = ['Lime treated subgrade',\r\n                'Lime-cement treated subgrade',\r\n                'Lime-fly ash treated subgrade','N/A'];\r\n            SubbaseThicknessThreshHold = 8;\r\n        }\r\n        this.setState({PlasticityIndex:value,SubbaseTypeOpt,SubbaseThicknessThreshHold});\r\n        this.handleBaseType(this.state.BaseType);\r\n    };\r\n    calculateCompositeK = ()=>{\r\n        const {ModulusBase,SoilSub,BaseThickness,ksTable} = this.state;\r\n        debugger\r\n        this.setState({CompositeK: ksTable.get(''+getSubgradeValue(SoilSub)+' '+Math.round(BaseThickness)+' '+getModulusBase(ModulusBase))});\r\n\r\n        function getSubgradeValue(SoilSub){\r\n            switch (SoilSub) {\r\n                case \"A-1-a\":\r\n                case \"A-2-4\":\r\n                case \"A-2-5\":\r\n                case \"GW\":\r\n                case \"GP\":\r\n                case \"GM\":\r\n                case \"SM\":\r\n                    return 300;\r\n                case \"A-1-b\":\r\n                case \"SW\":\r\n                    return 200;\r\n                case \"A-3\":\r\n                case \"A-2-6\":\r\n                case \"A-2-7\":\r\n                case \"SP\":\r\n                case \"GC\":\r\n                case \"SC\":\r\n                    return 150;\r\n                case \"A-7-6\":\r\n                case \"CH\":\r\n                case \"OH\":\r\n                    return 50;\r\n                case \"A-4\":\r\n                case \"A-5\":\r\n                case \"A-7-5\":\r\n                case \"ML\":\r\n                case \"OL\":\r\n                case \"MH\":\r\n                case \"CL\":\r\n                    return 25;\r\n            }\r\n        }\r\n        function getModulusBase(ModulusBase){\r\n            if (ModulusBase<=100)\r\n                return Math.round(ModulusBase/10)*10;\r\n            else if((ModulusBase>100)&&(ModulusBase<1000)&&((ModulusBase%50) <25))\r\n                return ModulusBase-(ModulusBase%50)\r\n            else if((ModulusBase>100)&&(ModulusBase<1000)&&((ModulusBase%50)>=25))\r\n                return ModulusBase+50-(ModulusBase%50)\r\n            else if(ModulusBase>=1000)\r\n                return Math.round(ModulusBase/100)*100;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        const getGroupControl = () => {\r\n            return <div className={classes.actionsContainer}>\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={this.props.toMenu}\r\n                        className={classes.button}\r\n                        startIcon={<HomeIcon/>}\r\n                    >\r\n                        To Main Menu\r\n                    </Button>\r\n                    <Button\r\n                        disabled={this.state.activeStep === 0}\r\n                        onClick={this.handleBack}\r\n                        className={classes.button}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                    <Button\r\n                        disabled={!this.state.District}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleNext}\r\n                        className={classes.button}\r\n                    >\r\n                        {this.state.activeStep === this.state.stepsLength - 1 ? 'Finish' : 'Next'}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        }\r\n        if ((this.state.activeStep === this.state.stepsLength) && !this.state.finished){\r\n            this.setState({finished: true});\r\n            this.recompute();\r\n        }\r\n        return (<Container maxWidth=\"lg\"> <Paper elevation={3}>\r\n            <Grid container>\r\n            <Grid item xs={this.state.finished?2:12}>\r\n            <Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\r\n                <Step>\r\n                    <StepLabel>Step 1</StepLabel>\r\n                    <StepContent displayPrint=\"block\">\r\n                        <Grid container spacing={4} justify=\"center\">\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classes.button}\r\n                                    startIcon={<PublishIcon/>}\r\n                                    component=\"label\"\r\n                                >\r\n                                    Load data input\r\n                                    <input\r\n                                        accept=\"application/JSON\"\r\n                                        type=\"file\"\r\n                                        hidden\r\n                                        onChange={this.onLoadInput}\r\n                                    />\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} container>\r\n                                <Grid item style={{flexGrow:1}}><Divider variant=\"middle\" /></Grid>\r\n                                <Grid item style={{transform:'translateY(-50%)'}}>Or</Grid>\r\n                                <Grid item style={{flexGrow:1}}><Divider variant=\"middle\" /></Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid container item xs={12} spacing={1} justify=\"center\">\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <Autocomplete\r\n                                            margin=\"dense\"\r\n                                            id=\"district\"\r\n                                            value={this.state.District}\r\n                                            options={this.state.currentDistricts}\r\n                                            size=\"small\"\r\n                                            style={{marginTop: 8, marginBottom: 4}}\r\n                                            onChange={(event, value, reason) => {\r\n                                                if (value == null)\r\n                                                    this.setState({\r\n                                                        District: value,\r\n                                                        County: null,\r\n                                                        currentCounties: Object.keys(counties)\r\n                                                    });\r\n                                                else\r\n                                                    this.setState({\r\n                                                        District: value,\r\n                                                        County: null,\r\n                                                        currentCounties: districts[value]\r\n                                                    });\r\n                                            }}\r\n                                            renderInput={(params) => <TextField dense {...params} variant=\"filled\"\r\n                                                                                className={classes.inputWithHelper}\r\n                                                                                required\r\n                                                                                error={!this.state.District}\r\n                                                                                label={<>DISTRICT<IconButton\r\n                                                                                    aria-label=\"info\"\r\n                                                                                    className={classes.margin}\r\n                                                                                    size=\"small\">\r\n                                                                                    <InfoIcon fontSize=\"small\"\r\n                                                                                              onClick={this.handleOpenHelper({src: DistrictPic},true)}\r\n                                                                                              onMouseEnter={this.handleOpenHelper({src: DistrictPic})}\r\n                                                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                                                    /></IconButton></>}\r\n                                            />}/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <Autocomplete\r\n                                            margin=\"dense\"\r\n                                            id=\"county\"\r\n                                            value={this.state.County}\r\n                                            options={this.state.currentCounties}\r\n                                            onChange={(event, value) => {\r\n                                                if (value)\r\n                                                    this.setState({\r\n                                                        County: value,\r\n                                                        District: counties[value].length === 1 ? counties[value][0] : null\r\n                                                    });\r\n                                                else\r\n                                                    this.setState({County: value})\r\n                                            }}\r\n                                            size=\"small\"\r\n                                            style={{marginTop: 8, marginBottom: 4}}\r\n                                            renderInput={(params) => <TextField dense {...params}\r\n                                                                                className={classes.inputWithHelper}\r\n                                                                                label={<>COUNTY<IconButton\r\n                                                                                    aria-label=\"info\"\r\n                                                                                    className={classes.margin}\r\n                                                                                    size=\"small\">\r\n                                                                                    <InfoIcon fontSize=\"small\"\r\n                                                                                              onClick={this.handleOpenHelper({map: 'county'},true)}\r\n                                                                                              onMouseEnter={this.handleOpenHelper({map: 'county'})}\r\n                                                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                                                    /></IconButton></>}\r\n                                                                                variant=\"filled\"/>}/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <Autocomplete\r\n                                            margin=\"dense\"\r\n                                            id=\"highway\"\r\n                                            options={highway}\r\n                                            value={this.state.Highway}\r\n                                            onChange={(event, value) => this.handleChange('Highway', value)}\r\n                                            size=\"small\"\r\n                                            freeSolo\r\n                                            style={{marginTop: 8, marginBottom: 4}}\r\n                                            renderInput={(params) => <TextField dense {...params} label=\"HIGHWAY\"\r\n                                                                                variant=\"filled\"/>}/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"DirectionOfConstruction\"\r\n                                            label=\"DIRECTION OF CONSTRUCTION\"\r\n                                            value={this.state.DirectionOfConstruction}\r\n                                            onChange={(event) => this.handleChange('DirectionOfConstruction', event.target.value)}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"control\"\r\n                                            label=\"CONTROL\"\r\n                                            value={this.state.Control}\r\n                                            onChange={(event) => this.handleChange('Control', event.target.value)}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"section\"\r\n                                            label=\"SECTION\"\r\n                                            value={this.state.Section}\r\n                                            onChange={(event) => this.handleChange('Section', event.target.value)}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"job\"\r\n                                            label=\"JOB\"\r\n                                            value={this.state.Job}\r\n                                            onChange={(event) => this.handleChange('Job', event.target.value)}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"ProjectScope\"\r\n                                            className={classes.inputWithHelper}\r\n                                            label={<>Project Scope <IconButton aria-label=\"info\"\r\n                                                                               className={classes.margin} size=\"small\">\r\n                                                <InfoIcon fontSize=\"small\"\r\n                                                          onClick={this.handleOpenHelper({text: \"Will be provided later.\"},true)}\r\n                                                          onMouseEnter={this.handleOpenHelper({text: \"Will be provided later.\"})}\r\n                                                          onMouseLeave={this.handleCloseHelper}\r\n                                                />\r\n                                            </IconButton></>}\r\n                                            select\r\n                                            value={this.state.ProjectScope}\r\n                                            onChange={(event) => this.handleChange('ProjectScope', event.target.value)}\r\n                                            variant=\"filled\">\r\n                                            <MenuItem value=\"WIDENING\">WIDENING</MenuItem>\r\n                                            <MenuItem value=\"REHABILITATION\">REHABILITATION</MenuItem>\r\n                                            <MenuItem value=\"NEW CONSTRUCTION\">NEW CONSTRUCTION</MenuItem>\r\n                                        </TextField>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"StationBegin\"\r\n                                            label=\"STATION (BEGIN)\"\r\n                                            value={this.state.StationBegin}\r\n                                            onChange={(event) => this.handleChange('StationBegin', event.target.value)}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"StationEnd\"\r\n                                            label=\"STATION (END)\"\r\n                                            value={this.state.StationEnd}\r\n                                            onChange={(event) => this.handleChange('StationEnd', event.target.value)}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"date\"\r\n                                            type=\"date\"\r\n                                            label=\"DATE\"\r\n                                            value={this.state.Date}\r\n                                            onChange={(event) => this.handleChange('Date', event.target.value)}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1}>\r\n                                    <TextField\r\n                                        id=\"comment\"\r\n                                        label=\"COMMENTS\"\r\n                                        multiline\r\n                                        onChange={(event) => this.handleChange('Comment', event.target.value)}\r\n                                        rows={4}\r\n                                        defaultValue=\"\"\r\n                                        variant=\"filled\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                        {getGroupControl()}\r\n                    </StepContent>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel>Step 2</StepLabel>\r\n                    <StepContent displayPrint=\"block\">\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Basic Design Information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Design life (years)</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={3} sm={4} md={3}>\r\n                                            <Slider\r\n                                                value={this.state.DesignLife}\r\n                                                onChange={(event, newValue) => this.setState({DesignLife: newValue})}\r\n                                                defaultValue={30}\r\n                                                min={1} max={50}\r\n                                                id=\"DesignLife\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={1}>\r\n                                                <Input\r\n                                                    value={this.state.DesignLife}\r\n                                                    onChange={(event) => this.handleChangeSliderInput(event, 'DesignLife')}\r\n                                                    onBlur={() => this.handleBlurSliderInput('DesignLife', 1, 100)}\r\n                                                    id=\"DesignLife\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    inputProps={{\r\n                                                        min: 1,\r\n                                                        max: 50,\r\n                                                        type: 'number',\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Total number of lanes in one direction</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={3} xm={4} md={3}>\r\n                                            <Slider\r\n                                                value={this.state.LanesOneDirection}\r\n                                                onChange={(event, newValue) => this.setState({LanesOneDirection: newValue})}\r\n                                                defaultValue={2}\r\n                                                min={1} max={10}\r\n                                                id=\"LanesOneDirection\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={1}>\r\n                                                <Input\r\n                                                    value={this.state.LanesOneDirection}\r\n                                                    onChange={(event) => this.handleChangeSliderInput(event, 'LanesOneDirection')}\r\n                                                    onBlur={() => this.handleBlurSliderInput('LanesOneDirection', 1, 10)}\r\n                                                    id=\"LanesOneDirection\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    inputProps={{\r\n                                                        min: 1,\r\n                                                        max: 10,\r\n                                                        type: 'number',\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Total design traffic in one direction (million ESAL)</span>\r\n                                                <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onClick={this.handleOpenHelper({src: TrafficOneDirectionPic},true)}\r\n                                                              onMouseEnter={this.handleOpenHelper({src: TrafficOneDirectionPic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={3} xm={4} md={3}>\r\n                                            <Slider\r\n                                                value={this.state.TrafficOneDirection}\r\n                                                onChange={(event, newValue) => this.setState({TrafficOneDirection: newValue})}\r\n                                                defaultValue={100}\r\n                                                min={1} max={500}\r\n                                                id=\"TrafficOneDirection\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={1}>\r\n                                                <Input\r\n                                                    value={this.state.TrafficOneDirection}\r\n                                                    onChange={(event) => this.handleChangeSliderInput(event, 'TrafficOneDirection')}\r\n                                                    onBlur={() => this.handleBlurSliderInput('TrafficOneDirection', 10, 1000)}\r\n                                                    id=\"TrafficOneDirection\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    inputProps={{\r\n                                                        min: 1,\r\n                                                        max: 500,\r\n                                                        type: 'number',\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} container justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Structural design criteria</Typography>\r\n                                        <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                            <InfoIcon fontSize=\"small\"\r\n                                                      onClick={this.handleOpenHelper({src: StructureDesignCriteriaPic},true)}\r\n                                                      onMouseEnter={this.handleOpenHelper({src: StructureDesignCriteriaPic})}\r\n                                                      onMouseLeave={this.handleCloseHelper}\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Acceptable punchout per mile</span>\r\n                                                <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onClick={this.handleOpenHelper({src: AcceptableNumberofPunchoutPic},true)}\r\n                                                              onMouseEnter={this.handleOpenHelper({src: AcceptableNumberofPunchoutPic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={3} xm={4} md={3}>\r\n                                            <Slider\r\n                                                value={this.state.PunchoutsPerMile}\r\n                                                onChange={(event, newValue) => this.setState({PunchoutsPerMile: newValue})}\r\n                                                defaultValue={5}\r\n                                                min={1} max={20}\r\n                                                id=\"PunchoutsPerMile\"\r\n                                                disabled\r\n                                            />\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={1}>\r\n                                                <Input\r\n                                                    value={this.state.PunchoutsPerMile}\r\n                                                    onChange={(event) => this.handleChangeSliderInput(event, 'PunchoutsPerMile')}\r\n                                                    onBlur={() => this.handleBlurSliderInput('PunchoutsPerMile', 1, 100)}\r\n                                                    id=\"PunchoutsPerMile\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    inputProps={{\r\n                                                        min: 5,\r\n                                                        max: 20,\r\n                                                        type: 'number',\r\n                                                    }}\r\n                                                    disabled\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} container justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Concrete Layer/Material information</Typography>\r\n                                        <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                            <InfoIcon fontSize=\"small\"\r\n                                                      onClick={this.handleOpenHelper({src: ConcreteLayerPic},true)}\r\n                                                      onMouseEnter={this.handleOpenHelper({src: ConcreteLayerPic})}\r\n                                                      onMouseLeave={this.handleCloseHelper}\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>28-day modulus of tupture (psi)</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={3} sm={4} md={3}>\r\n                                                <Slider\r\n                                                    value={this.state.ModulusOfRupture}\r\n                                                    onChange={(event, newValue) => this.setState({ModulusOfRupture: newValue})}\r\n                                                    id=\"ModulusOfRupture\"\r\n                                                    defaultValue={570}\r\n                                                    min={1} max={1000}\r\n                                                    disabled\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                        <Grid item xs={1}>\r\n                                            <Input\r\n                                                value={this.state.ModulusOfRupture}\r\n                                                onChange={(event) => this.handleChangeSliderInput(event, 'ModulusOfRupture')}\r\n                                                onBlur={() => this.handleBlurSliderInput('ModulusOfRupture', 1, 1000)}\r\n                                                id=\"ModulusOfRupture\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                inputProps={{\r\n                                                    min: 1,\r\n                                                    max: 1000,\r\n                                                    type: 'number',\r\n                                                }}\r\n                                                disabled\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Concrete elastic modulus (million psi)</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={3} sm={4} md={3}>\r\n                                                <Slider\r\n                                                    value={this.state.ElasticModulue}\r\n                                                    onChange={(event, newValue) => this.setState({ElasticModulue: newValue})}\r\n                                                    id=\"ElasticModulue\"\r\n                                                    defaultValue={570}\r\n                                                    min={1} max={1000}\r\n                                                    disabled\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                        <Grid item xs={1}>\r\n                                            <Input\r\n                                                value={this.state.ElasticModulue}\r\n                                                onChange={(event) => this.handleChangeSliderInput(event, 'ElasticModulue')}\r\n                                                onBlur={() => this.handleBlurSliderInput('ElasticModulue', 1, 1000)}\r\n                                                id=\"ModulusOfRupture\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                inputProps={{\r\n                                                    min: 1,\r\n                                                    max: 1000,\r\n                                                    type: 'number',\r\n                                                }}\r\n                                                disabled\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                        {getGroupControl()}\r\n                    </StepContent>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel>Step 3</StepLabel>\r\n                    <StepContent displayPrint=\"block\">\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Subgrade and Treatment Information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Soil classification system</span>\r\n                                                <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onClick={this.handleOpenHelper({src: soilSystermPic},true)}\r\n                                                              onMouseEnter={this.handleOpenHelper({src: soilSystermPic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Input\r\n                                                value={this.state.SoilClassificationSystem}\r\n                                                onChange={(event, newValue) => this.setState({SoilClassificationSystem: newValue})}\r\n                                                id=\"SoilClassificationSystem\"\r\n                                                disabled\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Soil classification of subgrade</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Autocomplete\r\n                                                margin=\"dense\"\r\n                                                id=\"SoilSub\"\r\n                                                options={soilClassSub}\r\n                                                size=\"small\"\r\n                                                onChange={(event, value) => this.handleSoilSub(value)}\r\n                                                renderInput={(params) => <TextField dense {...params} label=\"\"/>}/>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Plasticity Index (PI)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <TextField type=\"number\" id=\"PlasticityIndex\" value={this.state.PlasticityIndex} onChange={(event)=>this.handlePlasticityIndex(event.target.value)}/>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Subgrade treatment</span>\r\n                                                <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onClick={this.handleOpenHelper({src: subbasePic},true)}\r\n                                                              onMouseEnter={this.handleOpenHelper({src: subbasePic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <TextField\r\n                                                margin=\"dense\"\r\n                                                id=\"SubbaseType\"\r\n                                                select\r\n                                                value={this.state.SubbaseType}\r\n                                                size=\"small\"\r\n                                                onChange={(event)=>this.handleChange('SubbaseType',event.target.value)}\r\n                                                >\r\n                                                {this.state.SubbaseTypeOpt.map(d=><MenuItem value={d} key={d}>{d}</MenuItem>)}\r\n                                            </TextField>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Subgrade treatment thickness (in.)</span>\r\n                                                <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onClick={this.handleOpenHelper({src: subbasePic},true)}\r\n                                                              onMouseEnter={this.handleOpenHelper({src: subbasePic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <TextField\r\n                                                error={this.errorFunc.Step3.SubbaseThickness()}\r\n                                                helperText={this.errorFunc.Step3.SubbaseThickness()}\r\n                                                type=\"number\" id=\"SubbaseThickness\" value={this.state.SubbaseThickness}\r\n                                                onChange={(event) => ((event.target.value>0)||(event.target.value===''))?this.handleChange(\"SubbaseThickness\",event.target.value):''}\r\n                                                inputProps={{min:0}}\r\n                                            />\r\n                                        </Grid>\r\n                                        {/*<Grid item xs={8} justify=\"flex-start\">*/}\r\n                                        {/*    <Grid container xs={12} justify=\"flex-start\">*/}\r\n                                        {/*        <span>Composite K (psi/in.)</span>*/}\r\n                                        {/*        <span className={classes.dot} style={{flexGrow:1}}/>*/}\r\n                                        {/*    </Grid>*/}\r\n                                        {/*</Grid>*/}\r\n                                        {/*<Grid item xs={4}>*/}\r\n                                        {/*    <input type=\"number\" id=\"19\" value={this.state.CompositeK} onChange={(event, newValue) => this.setState({CompositeK:newValue})}/>*/}\r\n                                        {/*</Grid>*/}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Base layer information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Base type</span>\r\n                                                <IconButton\r\n                                                    aria-label=\"info\"\r\n                                                    className={classes.margin}\r\n                                                    size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onMouseEnter={this.handleOpenHelper({src: BasetypePic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    /></IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <TextField\r\n                                                select\r\n                                                margin=\"dense\"\r\n                                                id=\"BaseType\"\r\n                                                size=\"small\"\r\n                                                value={this.state.BaseType}\r\n                                                onChange={(event)=>{this.handleBaseType(event.target.value)}}\r\n                                            >\r\n                                                {this.state.baseTypeOpt.map(d=><MenuItem value={d} key={d}>{d}</MenuItem>)}\r\n                                            </TextField>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Base layer thickness (inches)</span>\r\n                                                <IconButton aria-label=\"info\"\r\n                                                            className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onMouseEnter={this.handleOpenHelper({text: <><div>Minimum Cap.</div><div>CTB ≥ 6.0 in.</div><div>HMA ≥ 4.0 in</div></>})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                            <Grid item xs={4}>\r\n                                                <TextField\r\n                                                    error={this.errorFunc.Step3.BaseThickness()}\r\n                                                    helperText={this.errorFunc.Step3.BaseThickness()}\r\n                                                    value={this.state.BaseThickness}\r\n                                                    onChange={(event) => this.handleChange('BaseThickness',event.target.value)}\r\n                                                    id=\"BaseThickness\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    inputProps={{\r\n                                                        min: this.state.BaseThicknessMin,\r\n                                                        type: 'number',\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Modulus of base layer (ksi)</span>\r\n                                                <IconButton aria-label=\"info\"\r\n                                                            className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onMouseEnter={this.handleOpenHelper({text: <><div>CTB = 500 ksi</div><div>HMA base = 400 ksi</div></>})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <TextField type=\"number\" id=\"ModulusBase \" value={this.state.ModulusBase }\r\n                                                       disabled\r\n                                                   onChange={(event) => this.setState({ModulusBase : event.target.value})}/>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Composite k-Value</span>\r\n                                                <IconButton aria-label=\"info\"\r\n                                                            className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onMouseEnter={this.handleOpenHelper({text: 'Composite k table'})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <TextField type=\"number\" id=\"CompositeK \" value={this.state.CompositeK }\r\n                                                       disabled/>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                        {getGroupControl()}\r\n                    </StepContent>\r\n                </Step>\r\n            </Stepper>\r\n            {this.state.activeStep === this.state.stepsLength && (\r\n                <>\r\n                    <Paper square elevation={0} className={classes.resetContainer}>\r\n                        <Button onClick={this.handleModify} className={classes.button}\r\n                                size=\"small\"\r\n                                startIcon={<EditIcon/>}\r\n                        >\r\n                            Modify\r\n                        </Button>\r\n                        <Button onClick={this.handleReset} className={classes.button}\r\n                                size=\"small\"\r\n                                startIcon={<RefreshIcon/>}\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            className={classes.button}\r\n                            startIcon={<PrintIcon/>}\r\n                            // onClick={()=>this.props.print(this.state)}\r\n                            onClick={()=>window.print()}\r\n                        >\r\n                            Print\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon/>}\r\n                            // onClick={()=>this.props.print(this.state)}\r\n                            onClick={this.onSaveInput}\r\n                        >\r\n                            Save input\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            className={classes.button}\r\n                            // startIcon={<PrintIcon/>}\r\n                            // onClick={()=>this.props.print(this.state)}\r\n                            onClick={()=>this.setState({openAnalytics:true})}\r\n                        >\r\n                            ANALYSIS RESULT\r\n                        </Button>\r\n                        <Button\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            onClick={this.props.toMenu}\r\n                            className={classes.button}\r\n                            startIcon={<HomeIcon/>}\r\n                        >\r\n                            To Main Menu\r\n                        </Button>\r\n                    </Paper>\r\n                </>\r\n            )}\r\n            </Grid>\r\n                {this.state.finished ?<Grid xs={10} item>\r\n                    <Report\r\n                        data={this.state}\r\n                        AnalysisPunchouts={this.props.AnalysisPunchouts()}\r\n                        AnalysisSlabThickness={this.props.AnalysisSlabThickness()}\r\n                    />\r\n                </Grid>:''}\r\n            </Grid>\r\n        </Paper>\r\n            {(this.state.helperEl&& this.state.helperEl.content && !this.state.helperEl.content.map) ?\r\n                <Popper\r\n                    placement=\"right\"\r\n                    disablePortal={false}\r\n                    open={true}\r\n                    anchorEl={this.state.helperEl.el}\r\n                    modifiers={{\r\n                        flip: {\r\n                            enabled: true,\r\n                        },\r\n                        preventOverflow: {\r\n                            enabled: true,\r\n                            boundariesElement: 'window',\r\n                        },\r\n                        arrow: {\r\n                            enabled: true,\r\n                        },\r\n                    }}\r\n                    style={{zIndex: 4}}\r\n                >\r\n                    <Card className={classes.helpHolder}>\r\n                        {this.state.helperEl.freeze?<IconButton aria-label=\"close\" className={classes.closeButton} onClick={this.handleCloseHelper}>\r\n                            <CloseIcon />\r\n                        </IconButton>:''}\r\n                        {this.state.helperEl.content.src ?\r\n                            <TransformWrapper\r\n                                defaultScale={1}\r\n                                defaultPositionX={1}\r\n                                defaultPositionY={1}\r\n                            >\r\n                                <TransformComponent>\r\n                            <img\r\n                                src={this.state.helperEl.content.src}\r\n                                style={{maxWidth: 600, height: 'auto'}}\r\n                            /></TransformComponent></TransformWrapper> :\r\n                            this.state.helperEl.content.text\r\n                        }\r\n                    </Card>\r\n                </Popper> : ''\r\n            }\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth={\"lg\"}\r\n                open={this.state.openAnalytics}\r\n                onClose={()=>this.setState({openAnalytics:false})}>\r\n                <DialogTitle id=\"responsive-dialog-title\" onClose={()=>this.setState({openAnalytics:false})}>Analysis</DialogTitle>\r\n                <DialogContent>\r\n                {this.state.finished ? <Graph\r\n                    rows={this.state.rows}\r\n                    AnalysisPunchouts={this.props.AnalysisPunchouts}\r\n                    init={this.state.activeStep === this.state.stepsLength}\r\n                    parameter={{...this.state}}/> : ''}\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Popper\r\n                placement=\"right\"\r\n                disablePortal={false}\r\n                open={(this.state.helperEl&& this.state.helperEl.content&& this.state.helperEl.content.map)}\r\n                anchorEl={this.state.helperEl&&this.state.helperEl.el}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: true,\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: true,\r\n                        boundariesElement: 'window',\r\n                    },\r\n                    arrow: {\r\n                        enabled: true,\r\n                    },\r\n                }}\r\n                style={{zIndex: 4}}\r\n            >\r\n                <Card style={{width:800}}>\r\n                    {this.state.helperEl&&this.state.helperEl.freeze?<IconButton aria-label=\"close\" className={classes.closeButton} onClick={this.handleCloseHelper}>\r\n                        <CloseIcon />\r\n                    </IconButton>:''}\r\n\r\n                <County highlight={this.state.currentCounties}\r\n                        target={this.state.County}\r\n                        selected={(value)=>{\r\n                    if (value)\r\n                        this.setState({\r\n                            County: value,\r\n                            District: counties[value].length === 1 ? counties[value][0] : null\r\n                        });\r\n                    else\r\n                        this.setState({County: value})\r\n                }}/>\r\n                </Card>\r\n            </Popper>\r\n        </Container>);\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CRCP);\r\n","import React from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {AppBar,IconButton,Typography,Button,Toolbar,Grid,Slide} from '@material-ui/core';\nimport coverPic from './image/cover.jpg';\nimport CRCP from './component/CRCP'\nimport Report from \"./component/report\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  titleNav: {\n    flexGrow: 1,\n  },\n  title: {\n    color: 'white'\n  },\n  cover: {\n    width:'100%',\n    position:'fixed',\n    background: `linear-gradient(0deg,rgba(0,0,0,0) 0,#000 100%), url(${coverPic}) no-repeat center center fixed`,\n    backgroundSize: 'cover',\n    height: '100vh',\n    overflow: 'hidden',\n    zIndex: -1\n  },\n}));\n\nfunction App() {\n  const [page, setPage] = React.useState('home');\n  const [reportData, setReportData] = React.useState({});\n  const [AnalysisPunchouts, setAnalysisPunchouts] = React.useState(0);\n  const [AnalysisSlabThickness, setAnalysisSlabThickness] = React.useState(0);\n  const classes = useStyles();\n  const AnalysisPunchoutsFunc = (d)=>d===undefined?AnalysisPunchouts:setAnalysisPunchouts(d);\n  const AnalysisSlabThicknessFunc = (d)=>d===undefined?AnalysisSlabThickness:setAnalysisSlabThickness(d);\n  return (\n    <div >\n      <div className={classes.cover}></div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.titleNav}>\n            TxCRCP-ME\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.root}>\n        <Slide direction=\"up\" in={page==='home'} mountOnEnter unmountOnExit>\n          <Grid container spacing={5} alignItems=\"center\" justify=\"center\" direction={\"column\"} style={{height: 'calc(100vh - 64px)',width:'100%'}}>\n            <Grid item>\n              <Typography variant=\"h3\" className={classes.title}>\n                TxDOT Mechanistic-Empirical CRCP Design System\n              </Typography>\n            </Grid>\n            <Grid container item alignItems=\"stretch\" justify=\"center\" direction={\"column\"} spacing={3} style={{width:'fit-content'}}>\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\" style={{width:'100%'}} onClick={()=>setPage('CRCP')}>CRCP Design</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" style={{width:'100%'}}>Slab Support</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" style={{width:'100%'}}>Product Disclaimer</Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Slide>\n        <Slide direction=\"up\" in={page==='CRCP'} mountOnEnter unmountOnExit>\n          <CRCP\n              toMenu={()=>setPage('home')}\n              // print={(d)=>{setReportData(d);setPage('Print')}}\n              AnalysisPunchouts={AnalysisPunchoutsFunc}\n              AnalysisSlabThickness={AnalysisSlabThicknessFunc}\n          />\n        </Slide>\n        {/*<Slide direction=\"up\" in={page==='Print'} mountOnEnter unmountOnExit>*/}\n        {/*  <Report*/}\n        {/*      data={reportData}*/}\n        {/*      toMenu={()=>setPage('home')}*/}\n        {/*      toCRCP={()=>setPage('CRCP')}*/}\n        {/*      AnalysisPunchouts={AnalysisPunchoutsFunc()}*/}\n        {/*  />*/}\n        {/*</Slide>*/}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}