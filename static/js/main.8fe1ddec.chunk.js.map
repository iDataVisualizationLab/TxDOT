{"version":3,"sources":["image/cover.jpg","component/tableData.js","component/Graph.js","image/TotalDesign Traffic.png","image/StructureDesignCriteria.png","image/soilSystermPic.png","image/AcceptableNumberofPunchout.png","image/ConcreteLayer.png","image/subbase.png","image/BasetypePic.png","component/report.js","component/data/txcrcp-me-v07b.xlsm","component/data/01062021 TxCRCP-ME Analysis Result Sheet.xlsx","component/County.js","component/ulti.js","component/District.js","component/CRCP.js","App.js","reportWebVitals.js","index.js"],"names":["Tabledata","props","titles","state","visible","handleInput","prevProps","this","rows","minArray","maxArray","j","length","push","i","colorRedBlues","colorScale","d3","domain","range","r","parameter","DesignLife","color","colorgreenred","id","type","disabled","style","textAlign","fontSize","fontWeight","value","parseFloat","toFixed","size","onChange","event","setState","target","checked","for","width","display","border","backgroundColor","map","t","c","paddingRight","paddingTop","paddingBottom","indexOf","Component","Graph","colorGreenRed","tip","d3tip","attr","offset","html","d","y","x","init","parameterGraph","height","dataset","obj","xScale","yScale","xAxis","tickSizeInner","tickSizeOuter","tickPadding","yAxis","line","tableCreate","margin","top","right","bottom","left","refs","svg","select","selectAll","call","classes","Grid","container","alignItems","direction","spacing","item","xs","ref","className","transform","fontFamily","cx","cy","fill","strokeWidth","stroke","AnalysisPunchouts","withStyles","theme","root","Report","CRCP","BondBreaker","Base","Subbase","NaturalSoil","Paper","justify","toMenu","Button","variant","onClick","button","startIcon","toCRCP","window","print","layerHolder","Typography","header","subHeader","data","District","County","Highway","Control","Section","Job","join","ProjectScope","StationBegin","StationEnd","Date","Comment","PunchoutsPerMile","LanesOneDirection","TrafficOneDirection","SoilClassificationSystem","SoilSub","PlasticityIndex","SubbaseType","SubbaseThickness","BaseType","BaseThickness","ModulusBase","ModulusOfRupture","ElasticModulue","alignContent","underline","AnalysisSlabThickness","minHeight","flexGrow","padding","marginTop","marginRight","borderBottom","position","zIndex","paddingLeft","svgRef","React","createRef","zoom","k","map_width","map_height","projection","geoMercator","center","translate","scale","geographies","Name","undefined","highlighto","topojson","county","objects","features","forEach","path","geoPath","centroid","highlight","current","scaleExtent","on","viewBox","properties","NAME","onMouseOver","pointerEvents","onMouseOut","selected","dy","textAnchor","opacity","strokeOpacity","lineHeight","textShadow","textTransform","letterSpacing","shapeRendering","districts","districtCode","counties","Object","keys","key","district","geo","geometries","filter","geometry","Label","soilClassSub","styles","actionsContainer","marginBottom","resetContainer","dot","helpHolder","inputWithHelper","closeButton","palette","grey","capitalize","DialogTitle","children","onClose","other","disableTypography","IconButton","aria-label","activeStep","stepsLength","finished","BaseThicknessMin","BaseThicknessMax","CompositeK","currentDistricts","currentCounties","SubbaseThicknessThreshHold","SubbaseTypeOpt","baseTypeOpt","ksTable","Map","ssTable","temperature","Acceptable_punchout_Popup","maxWidth","computeStress","SlabThickness","input","H","Input","K","Math","floor","ceil","B3","mapd2","lastd2","index","DT","STR_T","STR_E","s","B2","A2","C2","D2","E2","data3","data4","Q2","Q3","R2","R3","data5","W2","W4","X2","X4","ti","AveragetTemperature","getSTR_T","getSTR_E","recompute","__ret","analysis","rowIndexStress","row1","min","warningFunc","Step3","errorFunc","general","handleNext","helperEl","handleBack","handleModify","handleReset","initFunc","onLoadInput","self","files","XlsxPopulate","fromDataAsync","then","workbook","fn","sheet","_District","cell","indexDis","values","CSJ","split","catch","alert","onSaveInput","filename","toISOString","replace","fetch","excelOutputFile","res","arrayBuffer","file","console","log","upColor","an","borderstyle","column","outputAsync","generate","blob","navigator","msSaveOrOpenBlob","url","URL","createObjectURL","a","document","createElement","body","appendChild","href","download","click","revokeObjectURL","removeChild","err","message","handleOpenHelper","content","freeze","el","currentTarget","handleCloseHelper","source","handleBlurSliderInput","max","isNaN","handleChangeSliderInput","Number","handleChange","handleSoilSub","handleBaseType","handlePlasticityIndex","getPossibleMove","step","find","calculateCompositeK","get","getSubgradeValue","round","getModulusBase","prevState","snapshot","printRequest","isBackdropOpen","excelFile","ab","wb","XLSX","read","temperatureSheet","Sheets","utils","sheet_to_json","sTableSheet","ksTableSheet","_ktalbe","set","slabthickness","n","pow","fatigue","row2","getGroupControl","Container","elevation","Stepper","orientation","Step","StepLabel","StepContent","displayPrint","component","accept","hidden","noValidate","autoComplete","sm","md","Autocomplete","options","reason","renderInput","params","TextField","dense","required","error","label","onMouseEnter","onMouseLeave","defaultValue","text","MenuItem","InputLabelProps","shrink","multiline","lg","helperText","onBlur","inputProps","src","TrafficOneDirectionPic","StructureDesignCriteriaPic","soilSystermPic","newValue","subbasePic","freeSolo","autoSelect","BasetypePic","square","matchMedia","addListener","mql","matches","onafterprint","openAnalytics","Popper","placement","disablePortal","open","anchorEl","modifiers","flip","enabled","preventOverflow","boundariesElement","arrow","Card","defaultScale","defaultPositionX","defaultPositionY","Backdrop","sx","Dialog","fullWidth","DialogContent","useStyles","makeStyles","menuButton","titleNav","title","cover","background","coverPic","backgroundSize","overflow","App","useState","page","setPage","setAnalysisPunchouts","setAnalysisSlabThickness","AppBar","Toolbar","Slide","in","mountOnEnter","unmountOnExit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8fe1ddec.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cover.43610a00.jpg\";","import React,{ Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\nclass Tabledata  extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible:false\r\n        }\r\n        this.handleInput();\r\n        // var r = 12 * this.props.parameter.DesignLife - 1;\r\n        // this.props.AnalysisPunchouts(this.props.rows[r][12]);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.rows!==prevProps.rows){\r\n            this.handleInput();\r\n            // var r = 12 * this.props.parameter.DesignLife - 1;\r\n            // this.props.AnalysisPunchouts(this.props.rows[r][12]);\r\n        }\r\n    }\r\n\r\n    handleInput() {\r\n        const rows = this.props.rows;\r\n        var minArray = [];\r\n        var maxArray = [];\r\n        for (var j = 0; j < rows[0].length; j++) {\r\n            minArray.push(1000000000);\r\n            maxArray.push(0);\r\n        }\r\n        for (var i = 0; i < rows.length; i++) {\r\n            for (var j = 0; j < rows[i].length; j++) {\r\n                if (rows[i][j] > maxArray[j])\r\n                    maxArray[j] = rows[i][j];\r\n                if (rows[i][j] < minArray[j])\r\n                    minArray[j] = rows[i][j];\r\n            }\r\n        }\r\n        this.colorRedBlues = [];\r\n        for (var j = 0; j < rows[0].length; j++) {\r\n            var colorScale = d3.scaleLinear()\r\n                .domain([minArray[j], (minArray[j] + maxArray[j]) / 2, maxArray[j]])\r\n                .range([\"#55f\", \"white\", \"#f55\"]);\r\n            this.colorRedBlues.push(colorScale);\r\n        }\r\n    }\r\n\r\n    titles = [\"Age (Month)\",\"Age (Year)\", \"Modulus of Rupture (psi)\",\"Modulus of Elasticity (ksi)\"\r\n        ,\"Concrete Stress (T) (psi)\"\r\n        ,\"Concrete Stress (E) (psi)\"\r\n        ,\"Total Concrete Stress (psi)\"\r\n        ,\"Stress to Strength Ratio (psi/psi)\"\r\n        ,\"Number of Load Repetitions to Failure\"\r\n        ,\"Number of Load Repetitions\"\r\n        ,\"Pavement Damage\"\r\n        ,\"Cumulative Damage\"\r\n        ,\"Number of Punchouts per Mile\"]\r\n    render() {\r\n        debugger\r\n        var r = 12 * this.props.parameter.DesignLife - 1;\r\n        if (this.colorRedBlues&&this.props.rows[r]) {\r\n            var color = this.props.colorgreenred(this.props.rows[r][12]);\r\n            return (<div>\r\n                <div id=\"div_CRCP_PERFORMANCE\"><b>CRCP PERFORMANCE</b><br/>\r\n                    Number of Punchouts per Mile:<input type=\"TEXT\" disabled style={{\r\n                        \"background-color\": color,\r\n                        textAlign: \"center\",\r\n                        fontSize: 17,\r\n                        fontWeight: \"bold\"\r\n                    }} value={parseFloat(this.props.rows[r][12]).toFixed(2)} size=\"7\"/><br/><br/>\r\n                </div>\r\n                <div id=\"divCheckbox1\"><input type=\"checkbox\" id=\"checkbox1\"\r\n                                              onChange={(event) => this.setState({visible: event.target.checked})}/>\r\n                    <label for=\"checkbox1\"> Analysis Result </label></div>\r\n                <table style={{width: '99%', fontSize: '12px', display: this.state.visible ? 'table' : 'none'}}\r\n                       border=\"1\" id=\"analysisTable\">\r\n                    <tr style={{backgroundColor: \"#888\"}}>\r\n                        {this.titles.map(t => <td>{t}</td>)}\r\n                    </tr>\r\n                    {this.props.rows.map(r => <tr>{r.map((c, j) => <td style={{\r\n                        textAlign: 'right',\r\n                        backgroundColor: (j === 12) ? this.props.colorgreenred(c) : this.colorRedBlues[j](c),\r\n                        paddingRight: '10px',\r\n                        paddingTop: '0px',\r\n                        paddingBottom: '0px'\r\n                    }}>\r\n                        {([1, 2, 3, 12, 8, 9, 5, 6, 7, 10, 11].indexOf(j) !== -1) ? parseFloat(c).toFixed((j == 1 || j == 12) ? 2 : ((j == 2 || j == 3 || j == 8 || j == 9) ? 0 : ((j == 5 || j == 6) ? 1 : ((j == 7) ? 3 : 4)))) : c}\r\n                    </td>)}</tr>)}\r\n                </table>\r\n            </div>)\r\n        }else\r\n            return ''\r\n    }\r\n}\r\n\r\nexport default Tabledata;\r\n","import React, {Component} from 'react';\r\nimport './Graph.css';\r\nimport Tabledata from './tableData';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Button,\r\n    Paper,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    StepContent,\r\n    TextField,\r\n    Container\r\n} from '@material-ui/core';\r\nimport * as d3 from 'd3';\r\nimport {tip as d3tip} from \"d3-v6-tip\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        '& .MuiTextField-root': {\r\n            width: '100%',\r\n        },\r\n        '& input': {\r\n            width: '100%',\r\n        },\r\n    }\r\n});\r\n\r\nclass Graph extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const margin = {top: 20, right: 80, bottom: 60, left: 120},\r\n            width = 900 - margin.left - margin.right,\r\n            height = 400 - margin.top - margin.bottom;\r\n\r\n        this.state = {\r\n            margin,\r\n            width,\r\n            height,\r\n            // row1:[],\r\n            // rows:[],\r\n            init: true\r\n        }\r\n    }\r\n\r\n    colorGreenRed = d3.scaleLinear()\r\n        .domain([0, 25])\r\n        .range([\"#0f0\", \"#f00\"]);\r\n    tip = d3tip()\r\n        .attr('class', 'd3-tip')\r\n        .offset([-10, 0])\r\n        .html((d) => {\r\n            var color = this.colorGreenRed(d.y);\r\n            var html = \"#Punchouts per Mile: <span style='color:\" + color + \"; font-weight: bold'>\" + parseFloat(d.y).toFixed(2) + \"</span><br>\";\r\n            html += \"&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; Age (months):  <span style='color:white; font-weight: bold'>\" + d.x + \"</span>\";\r\n            return html;\r\n        });\r\n\r\n    componentDidMount() {\r\n        this.tableCreate();\r\n        this.parameterGraph();\r\n    }\r\n\r\n    init = true;\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const init = ((this.props.init !== prevProps.init) && this.props.init);\r\n        // console.log('-------------------------',init)\r\n        this.init = init || this.init;\r\n        // console.log('-------------------------this',this.init)\r\n        if ((this.props.parameter !== prevProps.parameter) || this.init) {\r\n            this.parameterGraph();\r\n            if (this.refs.svg && this.state.xAxis && this.state.yAxis) {\r\n                const svg = d3.select(this.refs.svg).select('g.content');\r\n                svg.selectAll(\".xaxis\")\r\n                    .attr(\"transform\", \"translate(0,\" + this.state.height + \")\")\r\n                    .call(this.state.xAxis);\r\n                svg.selectAll(\".yaxis\")\r\n                    .call(this.state.yAxis);\r\n                if (this.init && this.state.dataset.length) {\r\n                    //     debugger\r\n                    //     svg.selectAll(\".point\")\r\n                    //         .data(this.state.dataset).enter()\r\n                    //         .append(\"circle\")\r\n                    //         .attr(\"class\", \"point\")\r\n                    //         .attr(\"r\", 4)\r\n                    //         .attr(\"cx\", (d)=>this.state.xScale(d.x))\r\n                    //         .attr(\"cy\", (d)=> this.state.yScale(d.y))\r\n                    //         .attr(\"fill\", (d)=> this.colorGreenRed(d.y))\r\n                    //         .attr(\"stroke-width\", 0.5)\r\n                    //         .attr(\"stroke\",\"#000\")\r\n                    //         .on('mouseover', this.tip.show)\r\n                    //         .on('mouseout', this.tip.hide)\r\n                    //     svg.call(this.tip)\r\n                    this.init = false;\r\n                }\r\n                // }else{\r\n                //     svg.selectAll(\".point\")\r\n                //         .data(this.state.dataset)\r\n                //         .attr(\"cx\", (d)=> this.state.xScale(d.x))\r\n                //         .attr(\"cy\", (d,i)=>this.state.yScale(d.y))\r\n                //         .attr(\"fill\", (d)=> this.colorGreenRed(d.y));\r\n                // }\r\n            }\r\n        }\r\n    }\r\n\r\n    parameterGraph = () => {\r\n        const width = this.state.width;\r\n        const height = this.state.height;\r\n        const rows = this.props.rows;\r\n        var dataset = [];\r\n        for (var i = 0; i < rows.length; i++) {\r\n            var obj = {};\r\n            obj.x = rows[i][0];\r\n            obj.y = rows[i][12];\r\n            dataset.push(obj);\r\n        }\r\n        var xScale = d3.scaleLinear()\r\n            .domain([0, d3.max(dataset, function (d) {\r\n                return d.x;\r\n            })])\r\n            .range([0, width]);\r\n        var yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(dataset, function (d) {\r\n                return d.y;\r\n            })])\r\n            .range([height, 0]);\r\n        var xAxis = d3.axisBottom(xScale)\r\n            .tickSizeInner(-height)\r\n            .tickSizeOuter(0)\r\n            .tickPadding(10);\r\n\r\n        var yAxis = d3.axisLeft(yScale)\r\n            .tickSizeInner(-width)\r\n            .tickSizeOuter(0)\r\n            .tickPadding(10);\r\n\r\n        var line = d3.line()\r\n            .x(function (d) {\r\n                return xScale(d.x);\r\n            })\r\n            .y(function (d) {\r\n                return yScale(d.y);\r\n            });\r\n\r\n        this.setState({xScale, yScale, xAxis, yAxis, line, dataset});\r\n    }\r\n\r\n    tableCreate = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return ((this.props.rows.length && this.state.dataset) ?\r\n            <Grid container alignItems=\"center\" direction={\"column\"} spacing={1}>\r\n                <Grid item xs={11}>\r\n                    <svg ref=\"svg\"\r\n                         width={this.state.width + this.state.margin.left + this.state.margin.right}\r\n                         height={this.state.height + this.state.margin.top + this.state.margin.bottom}>\r\n                        <g className=\"content\"\r\n                           transform={\"translate(\" + this.state.margin.left + \",\" + this.state.margin.top + \")\"}>\r\n                            <text className=\"xAxisText\"\r\n                                  style={{\"textAnchor\": \"middle\", \"textShadow\": \"1px 1px 0 rgba(200, 200, 200, 0.7\"}}\r\n                                  fontFamily=\"sans-serif\" fontSize=\"16px\" x={this.state.width / 2}\r\n                                  y={this.state.height + 40}>Age (months)\r\n                            </text>\r\n                            <text className=\"YAxisText\"\r\n                                  transform={\"translate(\" + (-50) + \",\" + this.state.height / 2 + \")\" + \" rotate(-90)\"}\r\n                                  style={{\"textAnchor\": \"middle\", \"textShadow\": \"1px 1px 0 rgba(200, 200, 200, 0.7\"}}\r\n                                  fontFamily=\"sans-serif\" fontSize=\"16px\">Number of Punchouts per Mile\r\n                            </text>\r\n                            <g className=\"xaxis\" transform={\"translate(0,\" + this.state.height + \")\"}></g>\r\n                            <g className=\"yaxis\"></g>\r\n                            <path className=\"line\" d={this.state.line(this.state.dataset)}/>\r\n                            {this.state.dataset.map(d => <circle className=\"point\" r={4} cx={this.state.xScale(d.x)}\r\n                                                                 cy={this.state.yScale(d.y)}\r\n                                                                 fill={this.colorGreenRed(d.y)}\r\n                                                                 strokeWidth={0.5} stroke={\"#000\"}></circle>)}\r\n                        </g>\r\n                    </svg>\r\n                </Grid><Grid item xs={11}><Tabledata AnalysisPunchouts={this.props.AnalysisPunchouts}\r\n                                                     parameter={this.props.parameter} colorgreenred={this.colorGreenRed}\r\n                                                     rows={this.props.rows}/></Grid></Grid> : '');\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Graph);\r\n","export default __webpack_public_path__ + \"static/media/TotalDesign Traffic.948031ff.png\";","export default __webpack_public_path__ + \"static/media/StructureDesignCriteria.4f123ed0.png\";","export default __webpack_public_path__ + \"static/media/soilSystermPic.c6e7e75d.png\";","export default __webpack_public_path__ + \"static/media/AcceptableNumberofPunchout.f191431d.png\";","export default __webpack_public_path__ + \"static/media/ConcreteLayer.45d36da4.png\";","export default __webpack_public_path__ + \"static/media/subbase.a3bc3c69.png\";","export default __webpack_public_path__ + \"static/media/BasetypePic.8298e57a.png\";","import React, {Component} from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        padding: theme.spacing(2)\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    underline: {\r\n        borderBottom: '1px solid black'\r\n    },\r\n    subHeader: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    // header:{\r\n    //     backgroundColor: theme.palette.secondary.light\r\n    // },\r\n    layerHolder:{\r\n        display: 'flex',\r\n        position:'relative',\r\n        '& svg':{\r\n          position: 'absolute',\r\n          top:0,\r\n          left:0,\r\n          width:'100%',\r\n          height:'100%'\r\n        },\r\n        '& div, & h5':{\r\n          zIndex:1\r\n        },\r\n        '& .MuiGrid-item:first-child':{\r\n            paddingLeft: 10\r\n        }\r\n    }\r\n});\r\n\r\nclass Report extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            CRCP: 13,\r\n            BondBreaker: 1,\r\n            Base: 6,\r\n            Subbase: 12,\r\n            NaturalSoil: 6,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return <Paper>\r\n            <Grid container alignItems={\"start\"} justify={\"center\"}>\r\n                {this.props.toMenu ? <Grid item xs={12}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        onClick={this.props.toMenu}\r\n                        className={classes.button}\r\n                        startIcon={<HomeIcon/>}\r\n                    >\r\n                        To Main Menu\r\n                    </Button>\r\n                    <Button\r\n                        onClick={this.props.toCRCP}\r\n                        className={classes.button}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        startIcon={<PrintIcon/>}\r\n                        onClick={() => window.print()}\r\n                    >\r\n                        Print\r\n                    </Button>\r\n                </Grid> : ''}\r\n                <Grid container item xs={12} justify={\"start\"} spacing={1} className={[\"section-to-print\", classes.root]}>\r\n\r\n                    <Grid item xs={6} container justify=\"flex-start\"\r\n                          alignItems=\"flex-start\"\r\n                    >\r\n                        <Grid item xs={12} className={classes.layerHolder}>\r\n                            <Typography variant={'h5'} className={classes.header}>INPUT DATA</Typography>\r\n                            <svg><rect width={'100%'} height={'100%'} fill={'#ff4081'}/></svg>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}>A. Project\r\n                                Identification</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            District\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.District}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            County\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.County}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Highway\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.Highway}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            CSJ\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {[this.props.data.Control??'',this.props.data.Section??'',this.props.data.Job??''].join('-')}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Project Scope\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ProjectScope}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Station (Begin)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.StationBegin}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Station (End)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.StationEnd}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Date\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.Date}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Comment\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.Comment}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> B. Design Parameters &\r\n                                Traffic</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Design Life (year)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.DesignLife}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Number of Punchouts per Mile\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.PunchoutsPerMile}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Total Number of Lanes in One Direction\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.LanesOneDirection}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Total Design Traffic in One Direction <br/>(million ESALs)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.TrafficOneDirection}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> C. Subgrade and Treatment Information</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Soil Classification System\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SoilClassificationSystem}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Soil Classification of Subgrade\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SoilSub}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Plasticity Index (PI)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.PlasticityIndex}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Subgrade Type\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SubbaseType}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Subgrade Thickness (in.)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SubbaseThickness}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}>D. Base Layer\r\n                                Information</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Base Type\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.BaseType}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Base Thickness (in.)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.BaseThickness}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Modulus of Base Layer (ksi)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ModulusBase}\r\n                        </Grid>\r\n                        {/*<Grid item xs={8}>*/}\r\n                        {/*    Composite K (psi/in.)*/}\r\n                        {/*</Grid>*/}\r\n                        {/*<Grid item xs={4}>*/}\r\n                        {/*    {this.props.data.CompositeK}*/}\r\n                        {/*</Grid>*/}\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> E. Concrete Material\r\n                                Properties</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            28-Day Modulus of Rupture (psi)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ModulusOfRupture}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Elastic Modulus (million psi)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ElasticModulue}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={6} container justify=\"flex-start\"\r\n                          direction=\"row\"\r\n                          alignContent=\"flex-start\"\r\n                    >\r\n                        <Grid item xs={12} className={classes.layerHolder}>\r\n                            <Typography variant={'h5'} className={classes.header}>ANALYSIS RESULT</Typography>\r\n                            <svg><rect width={'100%'} height={'100%'} fill={'#ff4081'}/></svg>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> F. Design Slab Thickness & Performance</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.underline}>\r\n                            Design Slab Thickness\r\n                        </Grid>\r\n                        <Grid item xs={4} className={classes.underline} style={{color:(this.props.AnalysisSlabThickness>13)?'red':null}}>\r\n                            {this.props.AnalysisSlabThickness}\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.underline}>\r\n                            Number of Punchouts per Mile\r\n                        </Grid>\r\n                        <Grid item xs={4} className={classes.underline} style={{color:(this.props.AnalysisPunchouts>this.props.data.PunchoutsPerMile)?'red':null}}>\r\n                            {this.props.AnalysisPunchouts ? this.props.AnalysisPunchouts.toFixed(2) : ''}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> G. Layer Information</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} container justify=\"center\" direction=\"column\" style={{minHeight: 450, '-webkitPrintColorAdjust':'exact'}}>\r\n                            <Grid className={classes.layerHolder} container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.state.CRCP, backgroundColor: '#F2F2F2'}}>\r\n                                <Grid xs item>CRCP</Grid>\r\n                                <Grid xs item>Thickness</Grid>\r\n                                {/*<Grid xs item>{this.state.CRCP}''</Grid>*/}\r\n                                <Grid xs item>{this.props.AnalysisSlabThickness}''</Grid>\r\n                                <svg><rect width={'100%'} height={'100%'} fill={'#F2F2F2'}/></svg>\r\n                            </Grid>\r\n                           {this.props.data.BaseType==='CTB'?<Grid className={classes.layerHolder} container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.state.BondBreaker, backgroundColor: '#404040', color:'white'}}>\r\n                                <Grid xs item>Bond Breaker</Grid>\r\n                                <Grid xs item>Thickness</Grid>\r\n                                <Grid xs item>≥{this.state.BondBreaker}''</Grid>\r\n                               <svg><rect width={'100%'} height={'100%'} fill={'#404040'}/></svg>\r\n                            </Grid>:''}\r\n                            <Grid container alignContent={\"center\"} className={classes.layerHolder}\r\n                                  style={{flexGrow: this.props.data.BaseThickness, backgroundColor: this.props.data.BaseType==='HMA'?'#b5b5b5':'#D9D9D9'}}>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item>Base</Grid>\r\n                                    <Grid xs item>Type</Grid>\r\n                                    <Grid xs item>{this.props.data.BaseType}</Grid>\r\n                                </Grid>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item></Grid>\r\n                                    <Grid xs item>Thickness</Grid>\r\n                                    <Grid xs item>{this.props.data.BaseThickness}''</Grid>\r\n                                </Grid>\r\n                                <svg><rect width={'100%'} height={'100%'} fill={this.props.data.BaseType==='HMA'?'#b5b5b5':'#D9D9D9'}/></svg>\r\n                            </Grid>\r\n                            <Grid container alignContent={\"center\"} className={classes.layerHolder}\r\n                                  style={{flexGrow: this.props.data.SubbaseThickness, backgroundColor: '#F2F2F2'}}>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item>Subgrade</Grid>\r\n                                    <Grid xs item>Type</Grid>\r\n                                    <Grid xs item>{this.props.data.SubbaseType}</Grid>\r\n                                </Grid>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item></Grid>\r\n                                    <Grid xs item>Thickness</Grid>\r\n                                    <Grid xs item>{this.props.data.SubbaseThickness}''</Grid>\r\n                                </Grid>\r\n                                <svg><rect width={'100%'} height={'100%'} fill={'#F2F2F2'}/></svg>\r\n                            </Grid>\r\n                            <Grid container alignContent={\"center\"} className={classes.layerHolder}\r\n                                  style={{flexGrow: this.state.NaturalSoil, backgroundColor: '#FFC000'}}>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item>Natural Soil</Grid>\r\n                                    <Grid xs item>Type</Grid>\r\n                                    <Grid xs item>{this.props.data.SoilSub}</Grid>\r\n                                </Grid>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item></Grid>\r\n                                    <Grid xs item>PI</Grid>\r\n                                    <Grid xs item>{this.props.data.PlasticityIndex}</Grid>\r\n                                </Grid>\r\n                                <svg><rect width={'100%'} height={'100%'} fill={'#FFC000'}/></svg>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} container>\r\n                            <ul>\r\n                                <li>The minimum thickness for CRCP is 7 in., and the maximum thickness is 13 in.</li>\r\n                                <li>When the design slab thickness from this program is greater than 13-in, use 13-in slab. If a thickness greater than 13-in is desired, a request with justifications needs to be submitted to the District Engineer for approval.</li>\r\n                            </ul>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Report)\r\n","export default __webpack_public_path__ + \"static/media/txcrcp-me-v07b.5be1ece2.xlsm\";","export default __webpack_public_path__ + \"static/media/01062021 TxCRCP-ME Analysis Result Sheet.e5eb16db.xlsx\";","import React, {Component} from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport { geoMercator, geoPath } from \"d3-geo\";\r\nimport * as topojson from \"topojson-client\";\r\nimport * as d3 from \"d3\";\r\nimport county from \"./data/texas-counties\"\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        position:'relative',\r\n        '& .label text': {\r\n          fontSize:4,\r\n            textAnchor: 'middle'\r\n        },\r\n        '& .tooltip': {\r\n          position: 'absolute',\r\n          display:'none',\r\n            pointerEvents:'none',\r\n            transform:'translate(3px,3px)'\r\n        },\r\n        '& .bold': {\r\n            fontWeight: 'bold',\r\n        },\r\n\r\n        '& .raster': {\r\n            fill: 'none',\r\n            opacity: 1\r\n        },\r\n\r\n        '& .neutral-county': {\r\n            fill: '#FFF',\r\n            opacity: 0.4\r\n        },\r\n        '& .highlighted-county': {\r\n            fill: '#C00',\r\n            opacity: 0.6\r\n        },\r\n\r\n        '& .neutral-county, .highlighted-county': {\r\n            stroke: '#6E6E6E',\r\n            strokeOpacity: 0.6,\r\n            strokeWidth: '0.7px'\r\n        },\r\n        '& .counties': {\r\n            fill: 'none',\r\n            stroke: '#6E6E6E',\r\n            strokeOpacity: 0.4,\r\n            strokeWidth: '0.5px'\r\n        },\r\n        '& .state-border': {\r\n            fill: 'none',\r\n            stroke: '#6E6E6E',\r\n            strokeOpacity: 0.7,\r\n            strokeWidth: '1px'\r\n        },\r\n        '& .city-marker': {\r\n            fill: 'none',\r\n            opacity: 0.6,\r\n            strokeWidth: '2px',\r\n            stroke: '#000'\r\n        },\r\n        '& .capital-marker': {\r\n            fill: 'goldenrod',\r\n            opacity: 1,\r\n            strokeWidth: '3px',\r\n            stroke: '#000',\r\n            strokeOpacity: 0.6\r\n        },\r\n\r\n        '& .text-note': {\r\n            fontSize: '15px',\r\n            fontWeight: 500,\r\n            color: '#000',\r\n            opacity: 0.6,\r\n            lineHeight: '18px',\r\n            margin: 0,\r\n            textShadow: '1px  1px 0 white, 1px -1px 0 white, -1px  1px 0 white, -1px -1px 0 white'\r\n        },\r\n\r\n        '& .city-label': {\r\n            textAnchor: 'middle',\r\n            margin: 0,\r\n            fontSize: '15px',\r\n            lineHeight: '14px',\r\n            fontWeight: 500,\r\n            textAlign: 'right',\r\n            opacity: 0.6,\r\n            color: '#000',\r\n            textShadow: '1px  1px 0 white, 1px -1px 0 white, -1px  1px 0 white, -1px -1px 0 white'\r\n        },\r\n\r\n        '& .legend': {\r\n            fontSize: '15px',\r\n            lineHeight: '24px',\r\n            fontWeight: 500,\r\n            color: '#333'\r\n        },\r\n\r\n        '& .label-line': {\r\n            stroke: '#000',\r\n            strokeWidth: '1.5px',\r\n            strokeOpacity: 1,\r\n            opacity: 0.8,\r\n            fill: 'none'\r\n        },\r\n\r\n        '& .state-label': {\r\n            fontWeight: 500,\r\n            textTransform: 'uppercase',\r\n            textAnchor: 'middle',\r\n            opacity: 0.3,\r\n            color: '#000',\r\n            fontSize: '24px',\r\n            lineHeight: '28px',\r\n            letterSpacing: '0.6em'\r\n        },\r\n\r\n        '& .distance-scale': {\r\n            fontSize: '11px',\r\n            lineHeight: '11px',\r\n            position: 'absolute',\r\n            fontWeight: 500,\r\n            textTransform: 'uppercase',\r\n            color: '#000'\r\n        },\r\n\r\n        '& .distance-scale-line': {\r\n            stroke: '#000',\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            opacity: 1,\r\n            fill: '#000',\r\n            shapeRendering: 'crispEdges'\r\n        }\r\n\r\n    }\r\n});\r\n\r\nclass County extends Component {\r\n    svgRef = React.createRef();\r\n    zoom = {k:1,x:0,y:0};\r\n    map_width=600;\r\n    map_height=450;\r\n\r\n    projection = geoMercator()\r\n        .center([ -99.43,31.47 ])\r\n        .translate([ this.map_width/2, this.map_height/2 ])\r\n        .scale([ 2000 ]);\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            target:props.target,\r\n            geographies: [],\r\n            Name:undefined,\r\n            highlighto:{}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const geographies = topojson.feature(county, county.objects['texas-counties']).features;\r\n        geographies.forEach(d=>{\r\n            d.path = geoPath().projection(this.projection)(d);\r\n            d.centroid = geoPath().projection(this.projection).centroid(d);\r\n        });\r\n        const highlighto = {};\r\n        this.props.highlight.forEach(d=>highlighto[d]=1);\r\n        this.setState({geographies,highlighto});\r\n        if (this.svgRef){\r\n            let svg = d3.select(this.svgRef.current);\r\n                // .select('g.content')\r\n            svg.call(d3.zoom().scaleExtent([1, 10]).on('zoom',(event)=>{\r\n                svg.select('g.content').attr('transform', event.transform);\r\n                this.zoom = event.transform\r\n                }))\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.highlight!==this.props.highlight){\r\n            const highlighto = {};\r\n            this.props.highlight.forEach(d=>highlighto[d]=1);\r\n            this.setState({highlight:this.props.highlight,highlighto})\r\n        }\r\n        if(prevProps.target!==this.props.target){\r\n            this.setState({target:(this.props.target??'')})\r\n        }\r\n    }\r\n    render(){\r\n        const {classes} = this.props;\r\n        const {target,highlighto} = this.state;\r\n        const {geographies} = this.state;\r\n        const {map_width,map_height,projection} = this;\r\n        return <div className={classes.root}>\r\n            <svg width={ map_width } height={ map_height } viewBox={`0 0 ${map_width} ${map_height}`} ref={this.svgRef}>\r\n                <g className=\"content\">\r\n                    <g className=\"countries\">\r\n                        {\r\n                            geographies.map((d,i) => (\r\n                                <path\r\n                                    key={ `path-${ i }` }\r\n                                    d={ d.path }\r\n                                    className=\"country\"\r\n                                    // fill={ `rgba(38,50,56,${ 1 / geographies.length * i})` }\r\n                                    fill={(d.properties.NAME===target) ?'#17dd75':(highlighto[d.properties.NAME]?(this.state.Name===d.properties.NAME?'#3adddd':'steelBlue'):`rgba(38,50,56,1)` )}\r\n                                    stroke=\"#FFFFFF\"\r\n                                    strokeWidth={ 0.5 }\r\n                                    onMouseOver={(event)=>{this.setState({Name:d.properties.NAME,x:(d3.pointer(event)[0]-this.zoom.x)/this.zoom.k,y:(d3.pointer(event)[1]/this.zoom.y)/this.zoom.k});}}\r\n                                    style={{pointerEvents:highlighto[d.properties.NAME]?'all':'none'}}\r\n                                    onMouseOut={()=>{this.setState({Name:undefined})}}\r\n                                    onClick={()=>{this.props.selected(d.properties.NAME)}}\r\n                                />\r\n                            ))\r\n                        }\r\n                        {/*{*/}\r\n                        {/*    <path*/}\r\n                        {/*        key={'hovered'}*/}\r\n                        {/*        d={ geoPath().projection(projection)(d) }*/}\r\n                        {/*        className=\"country\"*/}\r\n                        {/*        // fill={ `rgba(38,50,56,${ 1 / geographies.length * i})` }*/}\r\n                        {/*        fill={(d.properties.NAME===target) ?'#17dd75':(highlighto[d.properties.NAME]?(this.state.Name===d.properties.NAME?'#3adddd':'steelBlue'):`rgba(38,50,56,1)` )}*/}\r\n                        {/*        stroke=\"#FFFFFF\"*/}\r\n                        {/*        strokeWidth={ 0.5 }*/}\r\n                        {/*        onMouseEnter={(event)=>{this.setState({Name:d.properties.NAME,x:(d3.pointer(event)[0]-this.zoom.x)/this.zoom.k,y:(d3.pointer(event)[1]/this.zoom.y)/this.zoom.k});}}*/}\r\n                        {/*        onMouseOut={()=>{this.setState({Name:undefined})}}*/}\r\n                        {/*        onClick={()=>{this.props.selected(d.properties.NAME)}}*/}\r\n                        {/*        style={{pointerEvents:'none'}}*/}\r\n                        {/*    />*/}\r\n                        {/*}*/}\r\n                    </g>\r\n                    <g className=\"label\">\r\n                        {\r\n                            geographies.map((d, i) => (\r\n                                <text\r\n                                    key={`path-${i}`}\r\n                                    // fill={ `rgba(38,50,56,${ 1 / geographies.length * i})` }\r\n                                    x={d.centroid[0]}\r\n                                    y={d.centroid[1]}\r\n                                    fill={(d.properties.NAME === target) ? 'black' : (highlighto[d.properties.NAME] ? (this.state.Name === d.properties.NAME ? 'black' : 'black') : `gray`)}\r\n                                    style={{pointerEvents: 'none'}}\r\n                                >\r\n                                    {d.properties.NAME}\r\n                                </text>\r\n                            ))\r\n                        }\r\n                    </g>\r\n                </g>\r\n                <g id={'legend'} transform={`translate(${map_width-165},${map_height-80})`} style={{fontSize:14}}>\r\n                    <g transform={`translate(${10},${-17})`}>\r\n                        <text x={-40} y={0} dy={10} fill={'#8a8a8a'}>Click on map to select County</text>\r\n                    </g>\r\n                    <g transform={`translate(${10},${13})`}>\r\n                        <rect width={10} height={10} fill={'rgba(38,50,56,1)'}/>\r\n                        <text x={15} y={0} dy={10}> Not selectable</text>\r\n                    </g>\r\n                    <g transform={`translate(${10},${33})`}>\r\n                        <rect width={10} height={10} fill={'steelBlue'}/>\r\n                        <text x={15} y={0} dy={10}> Selectable</text>\r\n                    </g>\r\n                    {/*<g transform={`translate(${10},${53})`}>*/}\r\n                    {/*    <rect width={10} height={10} fill={'#3adddd'}/>*/}\r\n                    {/*    <text x={15} y={0} dy={10}> Highlighted</text>*/}\r\n                    {/*</g>*/}\r\n                    <g transform={`translate(${10},${53})`}>\r\n                        <rect width={10} height={10} fill={'#17dd75'}/>\r\n                        <text x={15} y={0} dy={10}> Selected</text>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n            {/*<Card className=\"tooltip\" style={{display:this.state.Name?'block':'none',left:this.state.x,top:this.state.y}}>*/}\r\n            <div className=\"tooltip bold\" style={{display:this.state.Name?'block':'none',left:10,top:10, fontSize:20, padding:5,backgroundColor:'rgba(255,255,255,0.49)'}}>\r\n                {this.state.Name}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(County);\r\n","export const districts = {\r\n    \"Abilene\": [\"Borden\", \"Callahan\", \"Fisher\", \"Haskell\", \"Howard\", \"Jones\", \"Kent\", \"Mitchell\", \"Nolan\", \"Scurry\", \"Shackelford\", \"Stonewall\", \"Taylor\"],\r\n    \"Amarillo\": [\"Armstrong\", \"Carson\", \"Dallam\", \"Deaf Smith\", \"Gray\", \"Hansford\", \"Hartley\", \"Hemphill\", \"Hutchinson\", \"Lipscomb\", \"Moore\", \"Ochiltree\", \"Oldham\", \"Potter\", \"Randall\", \"Roberts\", \"Sherman\"],\r\n    \"Atlanta\": [\"Bowie\", \"Camp\", \"Cass\", \"Harrison\", \"Marion\", \"Morris\", \"Panola\", \"Titus\", \"Upshur\"],\r\n    \"Austin\": [\"Bastrop\", \"Blanco\", \"Burnet\", \"Caldwell\", \"Gillespie\", \"Hays\", \"Lee\", \"Llano\", \"Mason\", \"Travis\", \"Williamson\"],\r\n    \"Beaumont\": [\"Chambers\", \"Hardin\", \"Jasper\", \"Jefferson\", \"Liberty\", \"Newton\", \"Orange\", \"Tyler\"],\r\n    \"Brownwood\": [\"Brown\", \"Coleman\", \"Comanche\", \"Eastland\", \"Lampasas\", \"McCulloch\", \"Mills\", \"San Saba\", \"Stephens\"],\r\n    \"Bryan\": [\"Brazos\", \"Burleson\", \"Freestone\", \"Grimes\", \"Leon\", \"Madison\", \"Milam\", \"Robertson\", \"Walker\", \"Washington\"],\r\n    \"Childress\": [\"Briscoe\", \"Childress\", \"Collingsworth\", \"Cottle\", \"Dickens\", \"Donley\", \"Foard\", \"Hardeman\", \"Hall\", \"King\", \"Knox\", \"Motley\", \"Wheeler\"],\r\n    \"Corpus Christi\": [\"Aransas\", \"Bee\", \"Goliad\", \"Jim Wells\", \"Karnes\", \"Kleberg\", \"Live Oak\", \"Nueces\", \"Refugio\", \"San Patricio\"],\r\n    \"Dallas\": [\"Collin\", \"Dallas\", \"Denton\", \"Ellis\", \"Kaufman\", \"Navarro\", \"Rockwall\"],\r\n    \"El Paso\": [\"Brewster\", \"Culberson\", \"El Paso\", \"Hudspeth\", \"Jeff Davis\", \"Presidio\"],\r\n    \"Fort Worth\": [\"Erath\", \"Hood\", \"Jack\", \"Johnson\", \"Palo Pinto\", \"Parker\", \"Somervell\", \"Tarrant\", \"Wise\"],\r\n    \"Houston\": [\"Brazoria\", \"Fort Bend\", \"Galveston\", \"Harris\", \"Montgomery\", \"Waller\"],\r\n    \"Laredo\": [\"Dimmitt\", \"Duval\", \"Kinney\", \"La Salle\", \"Maverick\", \"Val Verde\", \"Webb\", \"Zavala\"],\r\n    \"Lubbock\": [\"Bailey\", \"Castro\", \"Cochran\", \"Crosby\", \"Dawson\", \"Floyd\", \"Gaines\", \"Garza\", \"Hale\", \"Hockley\", \"Lamb\", \"Lubbock\", \"Lynn\", \"Parmer\", \"Swisher\", \"Terry\", \"Yoakum\"],\r\n    \"Lufkin\": [\"Angelina\", \"Houston\", \"Nacogdoches\", \"Polk\", \"Sabine\", \"San Augustine\", \"San Jacinto\", \"Shelby\", \"Trinity\"],\r\n    \"Odesa\": [\"Andrews\", \"Crane\", \"Ector\", \"Loving\", \"Martin\", \"Midland\", \"Pecos\", \"Reeves\", \"Terrell\", \"Upton\", \"Ward\", \"Winkler\"],\r\n    \"Paris\": [\"Delta\", \"Fannin\", \"Franklin\", \"Grayson\", \"Hopkins\", \"Hunt\", \"Lamar\", \"Rains\", \"Red River\"],\r\n    \"Pharr\": [\"Brooks\", \"Cameron\", \"Hidalgo\", \"Jim Hogg\", \"Kenedy\", \"Starr\", \"Willacy\", \"Zapata\"],\r\n    \"San Angelo\": [\"Coke\", \"Concho\", \"Crockett\", \"Edwards\", \"Glasscock\", \"Irion\", \"Kimble\", \"Menard\", \"Reagan\", \"Real\", \"Runnels\", \"Schleicher\", \"Sterling\", \"Sutton\", \"Tom Green\"],\r\n    \"San Antonio\": [\"Atascosa\", \"Bandera\", \"Bexar\", \"Comal\", \"Frio\", \"Guadalupe\", \"Kendall\", \"Kerr\", \"McMullen\", \"Medina\", \"Uvalde\", \"Wilson\"],\r\n    \"Tyler\": [\"Anderson\", \"Cherokee\", \"Gregg\", \"Henderson\", \"Rusk\", \"Smith\", \"Van Zandt\", \"Wood\"],\r\n    \"Waco\": [\"Bell\", \"Bosque\", \"Coryell\", \"Falls\", \"Hamilton\", \"Hill\", \"Limestone\", \"McLennan\"],\r\n    \"Wichita Falls\": [\"Archer\", \"Baylor\", \"Clay\", \"Cooke\", \"Montague\", \"Throckmorton\", \"Wichita\", \"Wilbarger\", \"Young\"],\r\n    \"Yokum\": [\"Austin\", \"Calhoun\", \"Colorado\", \"DeWitt\", \"Fayette\", \"Gonzales\", \"Jackson\", \"Lavaca\", \"Matagorda\", \"Victoria\", \"Wharton\"]\r\n};\r\nexport const districtCode = {\r\n    \"Abilene\": \"ABL\",\r\n    \"Amarillo\": \"AMA\",\r\n    \"Atlanta\": \"ATL\",\r\n    \"Austin\": \"AUS\",\r\n    \"Beaumont\": \"BMT\",\r\n    \"Bryan\": \"BRY\",\r\n    \"Brownwood\": \"BWD\",\r\n    \"Corpus Christi\": \"CRP\",\r\n    \"Childress\": \"CHS\",\r\n    \"Dallas\": \"DAL\",\r\n    \"El Paso\": \"ELP\",\r\n    \"Fort worth\": \"FTW\",\r\n    \"Houston\": \"HOU\",\r\n    \"Lubbock\": \"LBB\",\r\n    \"Lufkin\": \"LFK\",\r\n    \"Laredo\": \"LRD\",\r\n    \"Odesa\": \"ODA\",\r\n    \"Paris\": \"PAR\",\r\n    \"Pharr\": \"PHR\",\r\n    \"San Antonio\": \"SAT\",\r\n    \"San Angelo\": \"SJT\",\r\n    \"Tyler\": \"TYL\",\r\n    \"Waco\": \"WAC\",\r\n    \"Wichita Falls\": \"WFS\",\r\n    \"Yokum\": \"YKM\"\r\n};\r\nexport const counties = {};\r\nObject.keys(districts).forEach(key => {\r\n    districts[key].forEach(c => counties[c] ? counties[c].push(key) : counties[c] = [key])\r\n});\r\n","import React, {Component} from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport { geoMercator, geoPath } from \"d3-geo\";\r\nimport * as topojson from \"topojson-client\";\r\nimport * as d3 from \"d3\";\r\nimport county from \"./data/texas-counties\"\r\nimport {districts,districtCode,counties} from \"./ulti\"\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        position:'relative',\r\n        '& .label text': {\r\n          fontSize:14,\r\n            textAnchor: 'middle'\r\n        },\r\n        '& .tooltip': {\r\n          position: 'absolute',\r\n          display:'none',\r\n            pointerEvents:'none',\r\n            transform:'translate(3px,3px)'\r\n        },\r\n        '& .bold': {\r\n            fontWeight: 'bold',\r\n        },\r\n\r\n        '& .raster': {\r\n            fill: 'none',\r\n            opacity: 1\r\n        },\r\n\r\n        '& .neutral-county': {\r\n            fill: '#FFF',\r\n            opacity: 0.4\r\n        },\r\n        '& .highlighted-county': {\r\n            fill: '#C00',\r\n            opacity: 0.6\r\n        },\r\n\r\n        '& .neutral-county, .highlighted-county': {\r\n            stroke: '#6E6E6E',\r\n            strokeOpacity: 0.6,\r\n            strokeWidth: '0.7px'\r\n        },\r\n        '& .counties': {\r\n            fill: 'none',\r\n            stroke: '#6E6E6E',\r\n            strokeOpacity: 0.4,\r\n            strokeWidth: '0.5px'\r\n        },\r\n        '& .state-border': {\r\n            fill: 'none',\r\n            stroke: '#6E6E6E',\r\n            strokeOpacity: 0.7,\r\n            strokeWidth: '1px'\r\n        },\r\n        '& .city-marker': {\r\n            fill: 'none',\r\n            opacity: 0.6,\r\n            strokeWidth: '2px',\r\n            stroke: '#000'\r\n        },\r\n        '& .capital-marker': {\r\n            fill: 'goldenrod',\r\n            opacity: 1,\r\n            strokeWidth: '3px',\r\n            stroke: '#000',\r\n            strokeOpacity: 0.6\r\n        },\r\n\r\n        '& .text-note': {\r\n            fontSize: '15px',\r\n            fontWeight: 500,\r\n            color: '#000',\r\n            opacity: 0.6,\r\n            lineHeight: '18px',\r\n            margin: 0,\r\n            textShadow: '1px  1px 0 white, 1px -1px 0 white, -1px  1px 0 white, -1px -1px 0 white'\r\n        },\r\n\r\n        '& .city-label': {\r\n            textAnchor: 'middle',\r\n            margin: 0,\r\n            fontSize: '15px',\r\n            lineHeight: '14px',\r\n            fontWeight: 500,\r\n            textAlign: 'right',\r\n            opacity: 0.6,\r\n            color: '#000',\r\n            textShadow: '1px  1px 0 white, 1px -1px 0 white, -1px  1px 0 white, -1px -1px 0 white'\r\n        },\r\n\r\n        '& .legend': {\r\n            fontSize: '15px',\r\n            lineHeight: '24px',\r\n            fontWeight: 500,\r\n            color: '#333'\r\n        },\r\n\r\n        '& .label-line': {\r\n            stroke: '#000',\r\n            strokeWidth: '1.5px',\r\n            strokeOpacity: 1,\r\n            opacity: 0.8,\r\n            fill: 'none'\r\n        },\r\n\r\n        '& .state-label': {\r\n            fontWeight: 500,\r\n            textTransform: 'uppercase',\r\n            textAnchor: 'middle',\r\n            opacity: 0.3,\r\n            color: '#000',\r\n            fontSize: '24px',\r\n            lineHeight: '28px',\r\n            letterSpacing: '0.6em'\r\n        },\r\n\r\n        '& .distance-scale': {\r\n            fontSize: '11px',\r\n            lineHeight: '11px',\r\n            position: 'absolute',\r\n            fontWeight: 500,\r\n            textTransform: 'uppercase',\r\n            color: '#000'\r\n        },\r\n\r\n        '& .distance-scale-line': {\r\n            stroke: '#000',\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            opacity: 1,\r\n            fill: '#000',\r\n            shapeRendering: 'crispEdges'\r\n        }\r\n\r\n    }\r\n});\r\n\r\nclass District extends Component {\r\n    svgRef = React.createRef();\r\n    zoom = {k:1,x:0,y:0};\r\n    map_width=600;\r\n    map_height=450;\r\n\r\n    projection = geoMercator()\r\n        .center([ -99.43,31.47 ])\r\n        .translate([ this.map_width/2, this.map_height/2 ])\r\n        .scale([ 2000 ]);\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            target:props.target,\r\n            geographies: [],\r\n            Name:undefined,\r\n            highlighto:{}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const geographies = [];\r\n        debugger\r\n        for ( let district in districts){\r\n            const geo = topojson.merge(county, county.objects['texas-counties'].geometries.filter(function(d) { return counties[d.properties.NAME][0]===district; }))\r\n            if(!districtCode[district])\r\n                debugger\r\n            geographies.push({geometry:geo,properties:{NAME:district,Label:districtCode[district]},type: \"Feature\"})\r\n        }\r\n        geographies.forEach(d=>{\r\n            d.path = geoPath().projection(this.projection)(d);\r\n            d.centroid = geoPath().projection(this.projection).centroid(d);\r\n        });\r\n        const highlighto = {...districts};\r\n        if(this.props.highlight)\r\n            this.props.highlight.forEach(d=>highlighto[d]=1);\r\n        this.setState({geographies,highlighto,target:this.props.target});\r\n        if (this.svgRef){\r\n            let svg = d3.select(this.svgRef.current);\r\n                // .select('g.content')\r\n            svg.call(d3.zoom().scaleExtent([1, 10]).on('zoom',(event)=>{\r\n                svg.select('g.content').attr('transform', event.transform);\r\n                this.zoom = event.transform\r\n                }))\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.highlight!==this.props.highlight){\r\n            const highlighto = {};\r\n            this.props.highlight.forEach(d=>highlighto[d]=1);\r\n            this.setState({highlight:this.props.highlight,highlighto})\r\n        }\r\n        if(prevProps.target!==this.props.target){\r\n            this.setState({target:(this.props.target??'')})\r\n        }\r\n    }\r\n    render(){\r\n        const {classes} = this.props;\r\n        const {target,highlighto} = this.state;\r\n        const {geographies} = this.state;\r\n        const {map_width,map_height,projection} = this;\r\n        return <div className={classes.root}>\r\n            <svg width={ map_width } height={ map_height } viewBox={`0 0 ${map_width} ${map_height}`} ref={this.svgRef}>\r\n                <g className=\"content\">\r\n                    <g className=\"countries\">\r\n                        {\r\n                            geographies.map((d,i) => (\r\n                                <path\r\n                                    key={ `path-${ i }` }\r\n                                    d={ d.path }\r\n                                    className=\"country\"\r\n                                    // fill={ `rgba(38,50,56,${ 1 / geographies.length * i})` }\r\n                                    fill={(d.properties.NAME===target) ?'#17dd75':(highlighto[d.properties.NAME]?(this.state.Name===d.properties.NAME?'#3adddd':'steelBlue'):`rgba(38,50,56,1)` )}\r\n                                    stroke=\"#FFFFFF\"\r\n                                    strokeWidth={ 0.5 }\r\n                                    onMouseOver={(event)=>{this.setState({Name:d.properties.NAME,x:(d3.pointer(event)[0]-this.zoom.x)/this.zoom.k,y:(d3.pointer(event)[1]/this.zoom.y)/this.zoom.k});}}\r\n                                    style={{pointerEvents:highlighto[d.properties.NAME]?'all':'none'}}\r\n                                    onMouseOut={()=>{this.setState({Name:undefined})}}\r\n                                    onClick={()=>{this.props.selected(d.properties.NAME)}}\r\n                                />\r\n                            ))\r\n                        }\r\n                        {/*{*/}\r\n                        {/*    <path*/}\r\n                        {/*        key={'hovered'}*/}\r\n                        {/*        d={ geoPath().projection(projection)(d) }*/}\r\n                        {/*        className=\"country\"*/}\r\n                        {/*        // fill={ `rgba(38,50,56,${ 1 / geographies.length * i})` }*/}\r\n                        {/*        fill={(d.properties.NAME===target) ?'#17dd75':(highlighto[d.properties.NAME]?(this.state.Name===d.properties.NAME?'#3adddd':'steelBlue'):`rgba(38,50,56,1)` )}*/}\r\n                        {/*        stroke=\"#FFFFFF\"*/}\r\n                        {/*        strokeWidth={ 0.5 }*/}\r\n                        {/*        onMouseEnter={(event)=>{this.setState({Name:d.properties.NAME,x:(d3.pointer(event)[0]-this.zoom.x)/this.zoom.k,y:(d3.pointer(event)[1]/this.zoom.y)/this.zoom.k});}}*/}\r\n                        {/*        onMouseOut={()=>{this.setState({Name:undefined})}}*/}\r\n                        {/*        onClick={()=>{this.props.selected(d.properties.NAME)}}*/}\r\n                        {/*        style={{pointerEvents:'none'}}*/}\r\n                        {/*    />*/}\r\n                        {/*}*/}\r\n                    </g>\r\n                    <g className=\"label\">\r\n                        {\r\n                            geographies.map((d, i) => (\r\n                                <text\r\n                                    key={`path-${i}`}\r\n                                    // fill={ `rgba(38,50,56,${ 1 / geographies.length * i})` }\r\n                                    x={d.centroid[0]}\r\n                                    y={d.centroid[1]}\r\n                                    fill={(d.properties.NAME === target) ? 'black' : (highlighto[d.properties.NAME] ? (this.state.Name === d.properties.NAME ? 'black' : 'black') : `gray`)}\r\n                                    style={{pointerEvents: 'none'}}\r\n                                >\r\n                                    {d.properties.Label}\r\n                                </text>\r\n                            ))\r\n                        }\r\n                    </g>\r\n                </g>\r\n                {/*<g id={'legend'} transform={`translate(${map_width-165},${map_height-80})`} style={{fontSize:14}}>*/}\r\n                {/*    <g transform={`translate(${10},${-17})`}>*/}\r\n                {/*        <text x={-40} y={0} dy={10} fill={'#8a8a8a'}>Click on map to select District</text>*/}\r\n                {/*    </g>*/}\r\n                {/*    <g transform={`translate(${10},${13})`}>*/}\r\n                {/*        <rect width={10} height={10} fill={'rgba(38,50,56,1)'}/>*/}\r\n                {/*        <text x={15} y={0} dy={10}> Not selectable</text>*/}\r\n                {/*    </g>*/}\r\n                {/*    <g transform={`translate(${10},${33})`}>*/}\r\n                {/*        <rect width={10} height={10} fill={'steelBlue'}/>*/}\r\n                {/*        <text x={15} y={0} dy={10}> Selectable</text>*/}\r\n                {/*    </g>*/}\r\n                {/*    /!*<g transform={`translate(${10},${53})`}>*!/*/}\r\n                {/*    /!*    <rect width={10} height={10} fill={'#3adddd'}/>*!/*/}\r\n                {/*    /!*    <text x={15} y={0} dy={10}> Highlighted</text>*!/*/}\r\n                {/*    /!*</g>*!/*/}\r\n                {/*    <g transform={`translate(${10},${53})`}>*/}\r\n                {/*        <rect width={10} height={10} fill={'#17dd75'}/>*/}\r\n                {/*        <text x={15} y={0} dy={10}> Selected</text>*/}\r\n                {/*    </g>*/}\r\n                {/*</g>*/}\r\n            </svg>\r\n            {/*<Card className=\"tooltip\" style={{display:this.state.Name?'block':'none',left:this.state.x,top:this.state.y}}>*/}\r\n            <div className=\"tooltip bold\" style={{display:this.state.Name?'block':'none',left:10,top:10, fontSize:20, padding:5,backgroundColor:'rgba(255,255,255,0.49)'}}>\r\n                {this.state.Name}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(District);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Slider,\r\n    Typography,\r\n    Button,\r\n    Paper,\r\n    Grid,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    StepContent,\r\n    TextField,\r\n    Container,\r\n    Input,\r\n    Hidden\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Graph from './Graph'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport TrafficOneDirectionPic from '../././image/TotalDesign Traffic.png';\r\nimport StructureDesignCriteriaPic from '../././image/StructureDesignCriteria.png';\r\nimport AcceptableNumberofPunchoutPic from '../././image/AcceptableNumberofPunchout.png';\r\nimport ConcreteLayerPic from '../././image/ConcreteLayer.png';\r\nimport soilSystermPic from '../././image/soilSystermPic.png';\r\nimport subbasePic from '../././image/subbase.png';\r\nimport BasetypePic from '../././image/BasetypePic.png';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Report from \"./report\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport * as d3 from \"d3\";\r\nimport {TransformWrapper, TransformComponent} from \"react-zoom-pan-pinch\";\r\nimport XLSX from 'xlsx';\r\nimport XlsxPopulate from 'xlsx-populate';\r\nimport excelFile from \"./data/txcrcp-me-v07b.xlsm\"\r\nimport excelOutputFile from \"./data/01062021 TxCRCP-ME Analysis Result Sheet.xlsx\"\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Divider from \"@material-ui/core/Divider/Divider\";\r\nimport County from \"./County\";\r\nimport District from \"./District\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport {districts,districtCode,counties} from \"./ulti\"\r\nconst highway = [\"IH 45\", \"US 290\", \"IH 30\", \"US 59\", \"IH 35W\", \"IH 820\", \"IH 10\", \"IH 40\", \"IH 35\", \"US 287\", \"US 81\", \"IH 27\", \"SL 289\", \"SH 226\", \"SH 36\", \"US 83B\", \"VA\", \"FM 3129\", \"IH 20\", \"US 71\", \"US 79\", \"US 47\", \"US 67\", \"BU90-Y\", \"CS\", \"FM 1960\", \"FM 364\", \"FM 365\", \"SH 347\", \"SH 105\", \"SH 12\", \"SH 124\", \"SH 146\", \"SH 326\", \"SH 61\", \"SH 73\", \"SH 87\", \"SS 380\", \"US 90\", \"US 69\", \"US 96\", \"BS6-R\", \"SH 21\", \"BW 8\", \"US 83\", \"BS 121H\", \"FM 1171\", \"FM 1382\", \"FM 2499\", \"FM 709\", \"FM 740\", \"IH 35E\", \"IH4 5\", \"IH 635\", \"LP 12\", \"LP 354\", \"MH\", \"SH 289\", \"SH 31\", \"SH 66\", \"SH 78\", \"SH 114\", \"SH 121\", \"SH 161\", \"SH 180\", \"SH 183\", \"SH 310\", \"SH 34\", \"SH 342\", \"SH 356\", \"SL 12\", \"SL 288\", \"SP 244\", \"SP 348\", \"SP 366\", \"SPUR 354\", \"US 175\", \"US 380\", \"US 75\", \"US 77\", \"US 377\", \"US 80\", \"US 54\", \"BU 287P\", \"FM 157\", \"IH 820 \", \"SH 199\", \"SH 26\", \"SH 360\", \"FM 1764\", \"FM 523\", \"FM 1092\", \"FM 1488\", \"FM 518\", \"IH 610\", \"SH 288\", \"SH 332\", \"SH 225\", \"SH 242\", \"SH 249\", \"SH 35\", \"US 90A\", \"IH27\", \"SH 7\", \"FM 1472\", \"LP 20\", \"ODA 181-1\", \"ODA 181-2\", \"ODA 250-1\", \"ODA 250-2\", \"US 82\", \"SH 6\", \"FM 85\", \"LP 281\", \"LP 323\", \"SH 19\", \"SH 198\", \"SH 334\", \"US 259\", \"US 281\", \"FM 1695\", \"FM 3476\", \"FM 933\", \"IH 36\", \"LP 363\", \"SH 195\", \"US 84\", \"BU 287J\", \"IH 44\", \"SH 240\", \"SP 1027 \", \"US 287 \", \"US 55\", \"US 70\", \"SH 71\"];\r\n// const baseType = [\"CTB\", \"HMA Base\"];\r\nconst soilClassSub = [\"GW\", \"GP\", \"GM\", \"GC\", \"SW\", \"SP\", \"SM\", \"SC\", \"ML\", \"CL\", \"OL\", \"MH\", \"CH\", \"OH\", \"Pt\"];\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        '& .MuiTextField-root': {\r\n            width: '100%',\r\n        },\r\n        '& input': {\r\n            width: '100%',\r\n        },\r\n        '& input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button': {\r\n            opacity: 1\r\n        }\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n        paddingTop: theme.spacing(8)\r\n    },\r\n    dot: {\r\n        borderBottom: '2px dotted',\r\n        marginBottom: '4px'\r\n    },\r\n    helpHolder: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    inputWithHelper: {\r\n        '& label': {\r\n            pointerEvents: 'all'\r\n        }\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n        zIndex: 2\r\n    },\r\n    capitalize: {\r\n        textTransform: 'capitalize'\r\n    }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const {children, classes, onClose, ...other} = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" size=\"small\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\nconst init = {\r\n    activeStep: 0,\r\n    stepsLength: 3,\r\n    finished: false,\r\n    DesignLife: null,//30,\r\n    PunchoutsPerMile: 10,\r\n    LanesOneDirection: null,//2,\r\n    TrafficOneDirection: null,//100,\r\n    ModulusOfRupture: 570,\r\n    ElasticModulue: 5,\r\n    SoilClassificationSystem: 'USCS',\r\n    SoilSub: null,//\"CH\",\r\n    PlasticityIndex: null,//8,\r\n    SubbaseType: null,//\"LTS\",\r\n    SubbaseThickness: null,//12,\r\n    BaseType: null,\r\n    BaseThickness: null,//6,\r\n    BaseThicknessMin: 2,\r\n    BaseThicknessMax: 6,\r\n    ModulusBase: null,//400,\r\n    CompositeK: null,//539,\r\n    District: null,\r\n    County: null,\r\n    Highway: '',\r\n    ProjectScope: '',\r\n    Control: '',\r\n    Section: '',\r\n    Job: '',\r\n    Date: null,\r\n    Comment: '',\r\n    StationBegin: '',\r\n    StationEnd: '',\r\n    currentDistricts: Object.keys(districts),\r\n    currentCounties: Object.keys(counties),\r\n    SubbaseThicknessThreshHold: -1,\r\n    SubbaseTypeOpt: [\"Cement treated subgrade\",\"Lime treated subgrade\",\"Lime-cement treated subgrade\",\"Lime-fly ash treated subgrade\",\"Fly ash treated subgrade\",\"Select Fill\",\"No treatment\"],\r\n    baseTypeOpt: [\"CTB\", \"HMA\"],\r\n    ksTable: new Map(),\r\n    ssTable: [],\r\n    temperature: [],\r\n}\r\n\r\nconst Acceptable_punchout_Popup = <>\r\n    <h5>B. Design parameter</h5>\r\n    <p style={{maxWidth: 500}}>Provide the design period in years and the design acceptable number of punchouts per\r\n        mile. Currently, 10 punchouts per mile is a nationally accepted value for the terminal condition of CRCP, even though a designer could select a more appropriate value depending on the importance of the highway system under analysis. The design acceptability will be based on those design parameters; if the predicted number of punchouts at the end of the design period is more than the design value, modification of input(s) is required.</p>\r\n</>\r\n\r\nclass CRCP extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {...init};\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if ((prevState.ModulusBase !== this.state.ModulusBase) || (prevState.SoilSub !== this.state.SoilSub) || (prevState.BaseThickness !== this.state.BaseThickness)) {\r\n            this.calculateCompositeK();\r\n        }\r\n        if(this.state.printRequest&& this.state.isBackdropOpen){\r\n            window.print();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initFunc();\r\n    }\r\n\r\n    initFunc() {\r\n        fetch(excelFile).then(res => res.arrayBuffer()).then(ab => {\r\n            const wb = XLSX.read(ab, {type: \"array\"});\r\n            debugger\r\n            // XLSX.writeFile(wb, 'out.xlsm');\r\n            const temperatureSheet = wb.Sheets['Temperature'];\r\n            init.temperature = XLSX.utils.sheet_to_json(temperatureSheet);\r\n\r\n            const sTableSheet = wb.Sheets['S-Table'];\r\n            init.ssTable = XLSX.utils.sheet_to_json(sTableSheet);\r\n\r\n            const ksTableSheet = wb.Sheets['K-Table'];\r\n            const _ktalbe = XLSX.utils.sheet_to_json(ksTableSheet);\r\n\r\n            init.ksTable = new Map();\r\n            _ktalbe.forEach(r => {\r\n                init.ksTable.set('' + r['Subgrade K-Value (psi/in.)'] + ' ' + r['Base Thickness (in.)'] + ' ' + r['Modulus of Base Layer (ksi)'], +r['Composite K (psi/in.)']);\r\n            });\r\n\r\n            this.setState({temperature:init.temperature,ssTable:init.ssTable,ksTable:init.ksTable})\r\n        })\r\n        // this.handlePlasticityIndex(this.state.PlasticityIndex);\r\n        // this.calculateCompositeK();\r\n    }\r\n\r\n    computeStress = (SlabThickness) => { // F7\r\n        let input = {\r\n            H: {Input: SlabThickness, \"L Bound\": 0, \"U Bound\": 0},\r\n            K: {Input: this.state.CompositeK, \"L Bound\": 0, \"U Bound\": 0}\r\n        }\r\n        input.H[\"L Bound\"] = (input.H.Input >= 15.5) ? 15.5 : ((input.H.Input < 6.5) ? 6 : Math.floor(input.H.Input * 2) / 2);\r\n        input.H[\"U Bound\"] = (input.H.Input >= 15.5) ? 16 : ((input.H.Input < 6.5) ? 6.5 : Math.ceil(input.H.Input * 2 + 1) / 2);\r\n        const B3 = input.K.Input;\r\n        input.K[\"L Bound\"] = (B3 < 100 ? 50 : (B3 < 300 ? 100 : (B3 < 500 ? 300 : (B3 < 700 ? 500 : (B3 < 1000 ? 700 : (B3 < 1300 ? 1000 : (B3 >= 1300 ? 1300 : 0)))))));\r\n        input.K[\"U Bound\"] = (B3 < 100 ? 100 : (B3 < 300 ? 300 : (B3 < 500 ? 500 : (B3 < 700 ? 700 : (B3 < 1000 ? 1000 : (B3 < 1300 ? 1300 : (B3 >= 1300 ? 1600 : 0)))))));\r\n        const mapd2 = {};\r\n        let lastd2 = {index: 1, DT: 0, H: 0, K: 0, STR_T: 0, STR_E: 0};\r\n        this.state.ssTable.forEach(s => {\r\n            const B2 = +s[\"Thickness of Concrete Layer (in.)\"];\r\n            const A2 = +s[\"Temperature Change (F)\"];\r\n            const C2 = +s[\"Composite K (psi/in.)\"];\r\n            const D2 = +s[\"Concrete Stress (T) (psi)\"];\r\n            const E2 = +s[\"Concrete Stress (E) (psi)\"];\r\n\r\n            const DT = ((B2 - input.H[\"L Bound\"]) * (B2 - input.H[\"U Bound\"])) === 0 ? ((C2 - input.K[\"L Bound\"]) * (C2 - input.K[\"U Bound\"]) === 0 ? A2 : 0) : 0;\r\n            const H = ((B2 - input.H[\"L Bound\"]) * (B2 - input.H[\"U Bound\"])) === 0 ? ((C2 - input.K[\"L Bound\"]) * (C2 - input.K[\"U Bound\"]) === 0 ? B2 : 0) : 0;\r\n            const K = ((B2 - input.H[\"L Bound\"]) * (B2 - input.H[\"U Bound\"])) === 0 ? ((C2 - input.K[\"L Bound\"]) * (C2 - input.K[\"U Bound\"]) === 0 ? C2 : 0) : 0;\r\n            const STR_T = ((B2 - input.H[\"L Bound\"]) * (B2 - input.H[\"U Bound\"])) === 0 ? ((C2 - input.K[\"L Bound\"]) * (C2 - input.K[\"U Bound\"]) === 0 ? D2 : 0) : 0;\r\n            const STR_E = ((B2 - input.H[\"L Bound\"]) * (B2 - input.H[\"U Bound\"])) === 0 ? ((C2 - input.K[\"L Bound\"]) * (C2 - input.K[\"U Bound\"]) === 0 ? E2 : 0) : 0;\r\n            const index = DT === 0 ? (lastd2.DT === 0 ? lastd2.index : lastd2.index + 1) : (lastd2.DT === 0 ? lastd2.index : lastd2.index + 1);\r\n            mapd2[index] = {index, DT, H, K, STR_T, STR_E};\r\n            lastd2 = {index, DT, H, K, STR_T, STR_E};\r\n        });\r\n        debugger\r\n        const data3 = [];\r\n        for (let i = 1; i < 25; i++) {\r\n            const index = Math.floor((i - 1) / 4) * 4 + 1;\r\n            const DT = mapd2[index].DT;\r\n            const H = mapd2[Math.floor((i - 1) / 2) * 2 + 1].H;\r\n            if (!mapd2[i])\r\n                debugger\r\n            const {K, STR_T, STR_E} = mapd2[i];\r\n            data3.push({DT, H, K, STR_T, STR_E})\r\n        }\r\n        const data4 = [];\r\n        for (let i = 0; i < 12; i++) {\r\n            const Q2 = data3[i * 2].STR_T;\r\n            const Q3 = data3[i * 2 + 1].STR_T;\r\n            const R2 = data3[i * 2].STR_E;\r\n            const R3 = data3[i * 2 + 1].STR_E;\r\n            const STR_T = ((Q3 - Q2) * input.K.Input + (Q2 * input.K['U Bound'] - Q3 * input.K['L Bound'])) / (input.K['U Bound'] - input.K['L Bound']);\r\n            const STR_E = ((R3 - R2) * input.K.Input + (R2 * input.K['U Bound'] - R3 * input.K['L Bound'])) / (input.K['U Bound'] - input.K['L Bound']);\r\n            data4.push({STR_T, STR_E})\r\n        }\r\n        const data5 = [];\r\n        for (let i = 0; i < 6; i++) {\r\n            const W2 = data4[i * 2].STR_T;\r\n            const W4 = data4[i * 2 + 1].STR_T;\r\n            const X2 = data4[i * 2].STR_E;\r\n            const X4 = data4[i * 2 + 1].STR_E;\r\n            const STR_T = ((W4 - W2) * input.H.Input + (W2 * input.H['U Bound'] - W4 * input.H['L Bound'])) / (input.H['U Bound'] - input.H['L Bound']);\r\n            const STR_E = ((X4 - X2) * input.H.Input + (X2 * input.H['U Bound'] - X4 * input.H['L Bound'])) / (input.H['U Bound'] - input.H['L Bound']);\r\n            data5.push({STR_T, STR_E})\r\n        }\r\n        const districtemp = this.state.temperature.filter(d => d.District === districtCode[this.state.District]);\r\n        const stress = districtemp.map((t, ti) => {\r\n            const AveragetTemperature = +t['Average Temperature (F)'];\r\n            const DT = 120 - AveragetTemperature;\r\n            const H = input.H.Input;\r\n            const K = input.K.Input;\r\n            const STR_T = getSTR_T(DT);\r\n            const STR_E = getSTR_E(DT);\r\n            if (ti === 3)\r\n                debugger\r\n            return {\r\n                'District': this.state.District, 'Month': ti + 1, 'Average Temperature': AveragetTemperature,\r\n                DT, H, K, 'STR (T)': STR_T, 'STR (E)': STR_E\r\n            }\r\n        });\r\n\r\n        function getSTR_T(DT) {\r\n            if (DT >= 95)\r\n                return (data5[5].STR_T - data5[4].STR_T) / (data3[20].DT - data3[16].DT) * (DT - data3[20].DT) + data5[5].STR_T;\r\n            if ((DT >= 65) && (DT < 95))\r\n                return (data5[5].STR_T - data5[4].STR_T) / (data3[20].DT - data3[16].DT) * (DT - data3[16].DT) + data5[4].STR_T;\r\n            if ((DT >= 35) && (DT < 65))\r\n                return (data5[4].STR_T - data5[3].STR_T) / (data3[16].DT - data3[12].DT) * (DT - data3[12].DT) + data5[3].STR_T;\r\n            if ((DT >= 5) && (DT < 35))\r\n                return (data5[3].STR_T - data5[2].STR_T) / (data3[12].DT - data3[8].DT) * (DT - data3[8].DT) + data5[2].STR_T;\r\n            if ((DT >= -25) && (DT < 5))\r\n                return (data5[2].STR_T - data5[1].STR_T) / (data3[8].DT - data3[4].DT) * (DT - data3[4].DT) + data5[1].STR_T;\r\n            if ((DT >= -55) && (DT < -25))\r\n                return (data5[1].STR_T - data5[0].STR_T) / (data3[4].DT - data3[0].DT) * (DT - data3[0].DT) + data5[0].STR_T;\r\n            return (data5[1].STR_T - data5[0].STR_T) / (data3[4].DT - data3[0].DT) * (DT - data3[0].DT) + data5[0].STR_T;\r\n        }\r\n\r\n        function getSTR_E(DT) {\r\n            if (DT >= 95)\r\n                return (data5[5].STR_E - data5[4].STR_E) / (data3[20].DT - data3[16].DT) * (DT - data3[20].DT) + data5[5].STR_E;\r\n            if ((DT >= 65) && (DT < 95))\r\n                return (data5[5].STR_E - data5[4].STR_E) / (data3[20].DT - data3[16].DT) * (DT - data3[16].DT) + data5[4].STR_E;\r\n            if ((DT >= 35) && (DT < 65))\r\n                return (data5[4].STR_E - data5[3].STR_E) / (data3[16].DT - data3[12].DT) * (DT - data3[12].DT) + data5[3].STR_E;\r\n            if ((DT >= 5) && (DT < 35))\r\n                return (data5[3].STR_E - data5[2].STR_E) / (data3[12].DT - data3[8].DT) * (DT - data3[8].DT) + data5[2].STR_E;\r\n            if ((DT >= -25) && (DT < 5))\r\n                return (data5[2].STR_E - data5[1].STR_E) / (data3[8].DT - data3[4].DT) * (DT - data3[4].DT) + data5[1].STR_E;\r\n            if ((DT >= -55) && (DT < -25))\r\n                return (data5[1].STR_E - data5[0].STR_E) / (data3[4].DT - data3[0].DT) * (DT - data3[0].DT) + data5[0].STR_E;\r\n            return (data5[1].STR_E - data5[0].STR_E) / (data3[4].DT - data3[0].DT) * (DT - data3[0].DT) + data5[0].STR_E;\r\n        }\r\n\r\n        // for (let i = 0;i<12;i++) {\r\n        //     const item = {'District'\t'Month'\t'Average' 'Temperature'\tDT\tH\tK\tSTR (T)\tSTR (E)}\r\n        // }\r\n        // this.setState({data: stress});\r\n        return stress;\r\n    }\r\n    recompute = () => {\r\n        let __ret = {};\r\n        let i = 7;\r\n        for (i = 7; i < 16; i+=0.5) {\r\n            __ret = this.analysis(i);\r\n            if (__ret.rows[__ret.r][12] <= this.state.PunchoutsPerMile)\r\n                break;\r\n        }\r\n        let rowIndexStress = __ret.rowIndexStress;\r\n        let row1 = __ret.row1;\r\n        const rows = __ret.rows;\r\n        var r = __ret.r;\r\n        this.props.AnalysisPunchouts(rows[r][12]);\r\n        // this.props.AnalysisSlabThickness(Math.min(13,i));\r\n        this.props.AnalysisSlabThickness(Math.min(i, 15));\r\n        this.setState({row1, rows, rowIndexStress})\r\n    };\r\n\r\n    analysis(slabthickness) {\r\n        const data = this.computeStress(slabthickness);\r\n        let rowIndexStress = 8;\r\n        let row1 = [];\r\n        const rows = [];\r\n        row1.push(1);\r\n        row1.push(row1[0] / 12);\r\n        row1.push(this.state.ModulusOfRupture);\r\n        row1.push(57000 / 7.5 * row1[2] / 1000);\r\n        row1.push(+data[rowIndexStress - 2][\"STR (T)\"]);\r\n        row1.push(data[rowIndexStress - 2][\"STR (E)\"] * row1[3] / 5000)\r\n        row1.push(row1[4] + row1[5])\r\n        row1.push(row1[6] / row1[2])\r\n        row1.push(11800 * Math.pow(row1[7], fatigue(this.state.CompositeK)))\r\n        row1.push(lane(this.state.LanesOneDirection)\r\n            * this.state.TrafficOneDirection * 1000000 / 12 / this.state.DesignLife)\r\n        row1.push(row1[9] / row1[8])\r\n        row1.push(row1[10])\r\n        row1.push(18.985 / (1 + 5 * Math.pow(row1[11], -1.1)))\r\n        rows.push(row1);    // Add to the array\r\n\r\n        //console.log(+document.getElementById(\"DesignLife\").value);\r\n        for (var i = 1; i <= this.state.DesignLife; i++) {\r\n            //debugger;\r\n            if (i !== 1)\r\n                rowIndexStress = 7;\r\n            for (var j = 0; j < 12; j++) {\r\n                if (i == 1 && j == 0)\r\n                    ;\r\n                    //If counterYear = 1 And counterMonth = 1 Then\r\n                //      'If First Year than Omit Calculation of First Month, Already Done\r\n                else {\r\n                    rowIndexStress = rowIndexStress + 1\r\n                    let row2 = [];\r\n                    row2.push(row1[0] + 1)\r\n                    row2.push(row2[0] / 12);\r\n                    // Cells(rowIndex, 2) = Cells(rowIndex, 1).Value / 12\r\n                    row2.push(this.state.ModulusOfRupture\r\n                        * Math.pow((30 * row2[0] / (4 + 0.85 * 30 * row2[0])), 0.5));\r\n                    // Cells(rowIndex, 3) = Sheets(\"Input\").Range(\"F8\").Value * ((30 * Cells(rowIndex, 1).Value / (4 + 0.85 * 30 * Cells(rowIndex, 1).Value))) ^ 0.5\r\n                    row2.push(57000 / 7.5 * row2[2] / 1000);\r\n                    // Cells(rowIndex, 4) = 57000 / 7.5 * Cells(rowIndex, 3) / 1000\r\n                    row2.push(+data[rowIndexStress - 2][\"STR (T)\"]);\r\n                    // Cells(rowIndex, 5) = Sheets(\"Stress\").Cells(rowIndexStress, 38).Value\r\n                    row2.push(data[rowIndexStress - 2][\"STR (E)\"] * row2[3] / 5000);\r\n                    // Cells(rowIndex, 6) = Sheets(\"Stress\").Cells(rowIndexStress, 39).Value * Cells(rowIndex, 4) / 5000\r\n                    row2.push(row2[4] + row2[5]);\r\n                    // Cells(rowIndex, 7) = Cells(rowIndex, 5).Value + Cells(rowIndex, 6).Value\r\n                    row2.push(row2[6] / row2[2]);\r\n                    // Cells(rowIndex, 8) = Cells(rowIndex, 7).Value / Cells(rowIndex, 3).Value\r\n                    row2.push(11800 * Math.pow(row2[7], fatigue(this.state.CompositeK)));\r\n                    // Cells(rowIndex, 9) = 11800 * Cells(rowIndex, 8).Value ^ fatigue(Sheets(\"Input\").Range(\"CompositeK\").Value)\r\n                    row2.push(row1[9]);\r\n                    // Cells(rowIndex, 10) = Cells(rowIndex - 1, 10).Value\r\n                    row2.push(row2[9] / row2[8]);\r\n                    // Cells(rowIndex, 11) = Cells(rowIndex, 10).Value / Cells(rowIndex, 9).Value\r\n                    row2.push(row1[11] + row2[10])\r\n                    // Cells(rowIndex, 12) = Cells(rowIndex - 1, 12).Value + Cells(rowIndex, 11).Value\r\n                    row2.push(18.985 / (1 + 5 * Math.pow(row2[11], -1.1)))\r\n                    // Cells(rowIndex, 13) = 18.985 / (1 + 5 * Cells(rowIndex, 12).Value ^ -1.1)\r\n                    if (rowIndexStress == 13)\r\n                        rowIndexStress = 1\r\n                    rows.push(row2);\r\n                    row1 = row2;\r\n                }\r\n            }\r\n        }\r\n        var r = 12 * this.state.DesignLife - 1;\r\n        return {rowIndexStress, row1, rows, r};\r\n\r\n        function lane(n) {\r\n            if (n <= 2)\r\n                return 1;\r\n            else if (n >= 4)\r\n                return 0.6;\r\n            else\r\n                return 0.7;\r\n        }\r\n\r\n        function fatigue(k) {\r\n            if (k < 200)\r\n                return k * 0.0221 - 15.97;\r\n            else if (k < 300)\r\n                return k * 0.0164 - 14.83;\r\n            else if (k < 500)\r\n                return k * 0.0038 - 11.05;\r\n            else if (k < 1000)\r\n                return k * 0.00033 - 9.31;\r\n            else\r\n                return k * 0.00071 - 9.69;\r\n        }\r\n    }\r\n\r\n    warningFunc = {\r\n        Step3: {\r\n            'SubbaseThickness': () => this.state.SubbaseThickness < this.state.SubbaseThicknessThreshHold ? `Should greater than ${this.state.SubbaseThicknessThreshHold}` : null,\r\n        }\r\n    };\r\n\r\n    errorFunc = {\r\n        general: k=>(this.state[k]===undefined ||this.state[k]===null||this.state[k]==='')?'Required':null,\r\n        Step3: {\r\n            // 'SubbaseThickness': () => this.state.SubbaseThickness < this.state.SubbaseThicknessThreshHold ? `Must greater than ${this.state.SubbaseThicknessThreshHold}` : (this.state.SubbaseThickness === '' ? 'Required' : null),\r\n            'SubbaseThickness': () => (this.state.SubbaseThickness === '' ? 'Required' : null),\r\n            'BaseThickness': () => (this.state.BaseThickness < this.state.BaseThicknessMin) ? `≥ ${this.state.BaseThicknessMin}` : (this.state.BaseThickness === '' ? 'Required' : null)\r\n        }\r\n    };\r\n\r\n    handleNext = () => {\r\n        this.setState({activeStep: this.state.activeStep + 1, helperEl:undefined});\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.setState({activeStep: this.state.activeStep - 1, finished: false, helperEl:undefined});\r\n    };\r\n\r\n    handleModify = () => {\r\n        this.setState({activeStep: 0, finished: false, helperEl:undefined});\r\n    };\r\n\r\n    handleReset = () => {\r\n        this.setState({...init, helperEl:undefined});\r\n        this.initFunc();\r\n    };\r\n    onLoadInput = (event) => {\r\n        const self = this;\r\n        if (event.target.files[0]) {\r\n            XlsxPopulate.fromDataAsync(event.target.files[0]).then(function(workbook) {\r\n                const fn = workbook.sheet('Result');\r\n                const _District = fn.cell(\"C6\").value();\r\n                const indexDis = Object.values(districtCode).indexOf(_District);\r\n                const CSJ = fn.cell(\"C9\").value();\r\n                const state = {\r\n                    District: indexDis===-1?null:Object.keys(districtCode)[indexDis]??'',\r\n                    County: fn.cell(\"C7\").value()??'',\r\n                    Highway:fn.cell(\"C8\").value()??'',\r\n                    Control:CSJ?CSJ.split('-')[0]:null,\r\n                    Section:CSJ?CSJ.split('-')[1]:null,\r\n                    Job:CSJ?CSJ.split('-')[2]:null,\r\n                    ProjectScope : fn.cell(\"C10\").value()??'',\r\n                    StationBegin : fn.cell(\"C11\").value()??'',\r\n                    StationEnd : fn.cell(\"C12\").value()??'',\r\n                    Date : fn.cell(\"C13\").value()??'',\r\n                    Comment : fn.cell(\"C14\").value()??'',\r\n                    DesignLife : fn.cell(\"C18\").value()??'',\r\n                    PunchoutsPerMile : fn.cell(\"C19\").value()??'',\r\n                    LanesOneDirection : fn.cell(\"C20\").value()??'',\r\n                    TrafficOneDirection : fn.cell(\"C21\").value()??'',\r\n                    SoilClassificationSystem : fn.cell(\"C25\").value()??'',\r\n                    SoilSub : fn.cell(\"C26\").value()??'',\r\n                    PlasticityIndex : fn.cell(\"C27\").value()??'',\r\n                    SubbaseType : fn.cell(\"C28\").value()??'',\r\n                    SubbaseThickness : fn.cell(\"C29\").value()??'',\r\n                    BaseType : fn.cell(\"C33\").value()??'',\r\n                    BaseThickness : fn.cell(\"C34\").value()??'',\r\n                    ModulusBase : fn.cell(\"C35\").value()??'',\r\n                    ModulusOfRupture : fn.cell(\"C39\").value()??'',\r\n                    ElasticModulue : fn.cell(\"C40\").value()??'',\r\n                };\r\n                state.currentCounties = districts[state.District];\r\n                self.setState(state)\r\n            }).catch(()=>{\r\n                window.alert(\"Can't read file. Please check format!\")\r\n            })\r\n        }\r\n    };\r\n    onSaveInput = () => {\r\n        let filename = `txDoT_${this.state.District}_${new Date().toISOString().replace('.', '|')}`;\r\n        const AnalysisSlabThickness = this.props.AnalysisSlabThickness();\r\n        const AnalysisPunchouts = this.props.AnalysisPunchouts();\r\n        const data = this.state;\r\n        fetch(excelOutputFile).then(res => res.arrayBuffer()).then(file => {\r\n            XlsxPopulate.fromDataAsync(file).then(function(workbook) {\r\n                console.log(data.rows)\r\n                generateBlob();\r\n                function generate(type) {\r\n                    const fn = workbook.sheet(0);\r\n                    fn.cell(\"C6\").value(districtCode[data.District]);\r\n                    fn.cell(\"C7\").value(data.County);\r\n                    fn.cell(\"C8\").value(data.Highway);\r\n                    fn.cell(\"C9\").value([data.Control??'',data.Section??'',data.Job??''].join('-'));\r\n                    fn.cell(\"C10\").value(data.ProjectScope);\r\n                    fn.cell(\"C11\").value(data.StationBegin);\r\n                    fn.cell(\"C12\").value(data.StationEnd);\r\n                    fn.cell(\"C13\").value(data.Date);\r\n                    fn.cell(\"C14\").value(data.Comment);\r\n                    //B\r\n                    fn.cell(\"C18\").value(data.DesignLife);\r\n                    fn.cell(\"C19\").value(data.PunchoutsPerMile);\r\n                    fn.cell(\"C20\").value(data.LanesOneDirection);\r\n                    fn.cell(\"C21\").value(data.TrafficOneDirection);\r\n                    //C\r\n                    fn.cell(\"C25\").value(data.SoilClassificationSystem);\r\n                    fn.cell(\"C26\").value(data.SoilSub);\r\n                    fn.cell(\"C27\").value(data.PlasticityIndex);\r\n                    fn.cell(\"C28\").value(data.SubbaseType);\r\n                    fn.cell(\"C29\").value(data.SubbaseThickness);\r\n                    //D\r\n                    fn.cell(\"C33\").value(data.BaseType);\r\n                    fn.cell(\"C34\").value(data.BaseThickness);\r\n                    fn.cell(\"C35\").value(data.ModulusBase);\r\n                    //E\r\n                    fn.cell(\"C39\").value(data.ModulusOfRupture);\r\n                    fn.cell(\"C40\").value(data.ElasticModulue);\r\n                    //F\r\n                    fn.cell(\"S6\").value(AnalysisSlabThickness);\r\n                    fn.cell(\"S7\").value(AnalysisPunchouts);\r\n                    //G\r\n                    fn.cell(\"O12\").value(\"\"+AnalysisSlabThickness+'\"');\r\n                    if(data.BaseType==='CTB'){\r\n                        fn.cell(\"O17\").value(\"≥1\");\r\n                    }else{\r\n                        fn.cell(\"O17\").value(undefined);\r\n                        fn.cell(\"L17\").value(undefined);\r\n                        fn.cell(\"I17\").value(undefined);\r\n                        const upColor = fn.cell(\"O16\").style('fill');\r\n                        fn.cell(\"H17\").style('fill',upColor);\r\n                        fn.cell(\"I17\").style('fill',upColor);\r\n                        fn.cell(\"J17\").style('fill',upColor);\r\n                        fn.cell(\"K17\").style('fill',upColor);\r\n                        fn.cell(\"L17\").style('fill',upColor);\r\n                        fn.cell(\"M17\").style('fill',upColor);\r\n                        fn.cell(\"N17\").style('fill',upColor);\r\n                        fn.cell(\"O17\").style('fill',upColor);\r\n                        fn.cell(\"P17\").style('fill',upColor);\r\n                        fn.cell(\"Q17\").style('fill',upColor);\r\n                        fn.cell(\"R17\").style('fill',upColor);\r\n                    }\r\n                    fn.cell(\"O19\").value(data.BaseType);\r\n                    fn.cell(\"O20\").value(\"\"+data.BaseThickness+'\"');\r\n                    fn.cell(\"O23\").value(data.SubbaseType);\r\n                    fn.cell(\"O24\").value(\"\"+data.SubbaseThickness+'\"');\r\n                    fn.cell(\"O28\").value(data.SoilSub);\r\n                    fn.cell(\"O29\").value(data.PlasticityIndex);\r\n\r\n                    const an = workbook.sheet(1);\r\n                    const borderstyle = an.cell('A1').style('border');\r\n                    an.cell(\"A2\").value(data.rows)\r\n                    an.column(\"A\").style('border',borderstyle);\r\n                    an.column(\"C\").style('border',borderstyle);\r\n                    an.column(\"D\").style('border',borderstyle);\r\n                    an.column(\"I\").style('border',borderstyle);\r\n                    an.column(\"J\").style('border',borderstyle);\r\n                    an.column(\"K\").style('border',borderstyle);\r\n                    an.column(\"B\").style({'border': borderstyle,\"numberFormat\": \"0.00\"});\r\n                    an.column(\"E\").style({'border': borderstyle,\"numberFormat\": \"0.0\"});\r\n                    an.column(\"F\").style({'border': borderstyle,\"numberFormat\": \"0.0\"});\r\n                    an.column(\"G\").style({'border': borderstyle,\"numberFormat\": \"0.0\"});\r\n                    an.column(\"H\").style({'border': borderstyle,\"numberFormat\": \"0.000\"});\r\n                    an.column(\"L\").style({'border': borderstyle,\"numberFormat\": \"0.0000\"});\r\n                    an.column(\"M\").style({'border': borderstyle,\"numberFormat\": \"0.00\"});\r\n                    debugger\r\n                    return workbook.outputAsync({ type: type });\r\n                }\r\n                function generateBlob() {\r\n                    return generate()\r\n                        .then(function (blob) {\r\n                            if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n                                window.navigator.msSaveOrOpenBlob(blob, filename+\".xlsx\");\r\n                            } else {\r\n                                var url = window.URL.createObjectURL(blob);\r\n                                var a = document.createElement(\"a\");\r\n                                document.body.appendChild(a);\r\n                                a.href = url;\r\n                                a.download = filename+\".xlsx\";\r\n                                a.click();\r\n                                window.URL.revokeObjectURL(url);\r\n                                document.body.removeChild(a);\r\n                            }\r\n                        })\r\n                        .catch(function (err) {\r\n                            alert(err.message || err);\r\n                            throw err;\r\n                        });\r\n                }\r\n\r\n            });\r\n        })\r\n    }\r\n\r\n    handleOpenHelper = (content, freeze) => (event) => {\r\n        if (this.state.helperEl) {\r\n            if (this.state.helperEl.el === event.currentTarget && freeze && this.state.helperEl.freeze) // same target\r\n                this.handleCloseHelper(event);\r\n            else {\r\n                if (freeze || this.state.helperEl.el !== event.currentTarget && freeze)\r\n                    this.setState({helperEl: {el: event.currentTarget, content, freeze}})\r\n            }\r\n        } else {\r\n            this.setState({helperEl: {el: event.currentTarget, content, freeze}})\r\n        }\r\n    };\r\n\r\n    handleCloseHelper = (source) => {\r\n        if (source.type !== 'mouseleave' || source.type === 'mouseleave' && this.state.helperEl && (!this.state.helperEl.freeze))\r\n            this.setState({helperEl: undefined})\r\n    };\r\n\r\n    handleBlurSliderInput = (key, min, max) => {\r\n        let value = (+this.state[key]);\r\n        if((this.state[key]!==null) && (this.state[key]!==undefined) && (this.state[key]!=='') && !isNaN(value)) {\r\n            const obj = {};\r\n            if (value < min) {\r\n                obj[key] = min;\r\n                this.setState(obj);\r\n            } else if ((max!==undefined) && value > max) {\r\n                obj[key] = max;\r\n                this.setState(obj);\r\n            }\r\n        }\r\n    }\r\n    handleChangeSliderInput = (event, key) => {\r\n        const obj = {};\r\n        obj[key] = event.target.value === '' ? '' : Number(event.target.value);\r\n        this.setState(obj);\r\n    }\r\n    handleChange = (key, value) => {\r\n        const obj = {};\r\n        obj[key] = value;\r\n        this.setState(obj);\r\n    };\r\n    handleSoilSub = (value) => {\r\n        let baseTypeOpt = [\"CTB\", \"HMA\"];\r\n        let BaseType = this.state.BaseType;\r\n        if (this.state.PlasticityIndex >= 15) {\r\n            if ([\"ML\", \"CL\", \"OL\", \"MH\", \"CH\", \"OH\"].indexOf(value) !== -1) {\r\n                baseTypeOpt = [\"CTB\"];\r\n                BaseType = \"CTB\";\r\n            }\r\n        }\r\n        this.setState({SoilSub: value, baseTypeOpt, BaseType});\r\n    };\r\n    handleBaseType = (value) => {\r\n        if (value && value!=='') {\r\n            let BaseThicknessMin = 4;\r\n            let BaseThicknessMax = 6;\r\n            let BaseThickness = this.state.BaseThickness;\r\n            let ModulusBase = 400;\r\n            if (value === 'CTB') {\r\n                BaseThicknessMin = 6;\r\n                ModulusBase = 500;\r\n            }\r\n            if (value === 'HMA') {\r\n                BaseThicknessMax = 4;\r\n            }\r\n            if (BaseThickness < BaseThicknessMin)\r\n                BaseThickness = BaseThicknessMin;\r\n            if (BaseThickness > BaseThicknessMax)\r\n                BaseThickness = BaseThicknessMax;\r\n            this.setState({BaseType: value, BaseThicknessMin, BaseThickness, ModulusBase});\r\n        }else {\r\n            this.setState({BaseType: value, BaseThicknessMin:null, BaseThickness:null, ModulusBase:null});\r\n        }\r\n    }\r\n    handlePlasticityIndex = (value) => {\r\n        let SubbaseThicknessThreshHold = -1;\r\n        if (value >= 35){\r\n            SubbaseThicknessThreshHold = 8;\r\n        }\r\n        this.setState({PlasticityIndex: value, SubbaseThicknessThreshHold});\r\n        this.handleBaseType(this.state.BaseType);\r\n    };\r\n    getPossibleMove = (step)=>{\r\n        switch (step){\r\n            case 0:\r\n                return this.state.District;\r\n            case 1:\r\n                return (![\"DesignLife\",\"LanesOneDirection\",\"TrafficOneDirection\"].find(k=>this.errorFunc.general(k)));\r\n            case 2:\r\n                return !this.errorFunc.Step3.BaseThickness() && (!this.errorFunc.Step3.SubbaseThickness()) && (![\"SoilSub\",\"PlasticityIndex\",\"SubbaseType\",\"SubbaseThickness\",\"BaseType\",\"BaseThickness\"].find(k=>this.errorFunc.general(k)));\r\n            default:\r\n                return true;\r\n        }\r\n    };\r\n\r\n    calculateCompositeK = () => {\r\n        const {ModulusBase, SoilSub, BaseThickness, ksTable} = this.state;\r\n        this.setState({CompositeK: ksTable.get('' + getSubgradeValue(SoilSub) + ' ' + Math.round(BaseThickness) + ' ' + getModulusBase(ModulusBase))});\r\n\r\n        function getSubgradeValue(SoilSub) {\r\n            switch (SoilSub) {\r\n                case \"A-1-a\":\r\n                case \"A-2-4\":\r\n                case \"A-2-5\":\r\n                case \"GW\":\r\n                case \"GP\":\r\n                case \"GM\":\r\n                case \"SM\":\r\n                    return 300;\r\n                case \"A-1-b\":\r\n                case \"SW\":\r\n                    return 200;\r\n                case \"A-3\":\r\n                case \"A-2-6\":\r\n                case \"A-2-7\":\r\n                case \"SP\":\r\n                case \"GC\":\r\n                case \"SC\":\r\n                    return 150;\r\n                case \"A-7-6\":\r\n                case \"CH\":\r\n                case \"OH\":\r\n                    return 50;\r\n                case \"A-4\":\r\n                case \"A-5\":\r\n                case \"A-7-5\":\r\n                case \"ML\":\r\n                case \"OL\":\r\n                case \"MH\":\r\n                case \"CL\":\r\n                    return 25;\r\n            }\r\n        }\r\n\r\n        function getModulusBase(ModulusBase) {\r\n            if (ModulusBase <= 100)\r\n                return Math.round(ModulusBase / 10) * 10;\r\n            else if ((ModulusBase > 100) && (ModulusBase < 1000) && ((ModulusBase % 50) < 25))\r\n                return ModulusBase - (ModulusBase % 50)\r\n            else if ((ModulusBase > 100) && (ModulusBase < 1000) && ((ModulusBase % 50) >= 25))\r\n                return ModulusBase + 50 - (ModulusBase % 50)\r\n            else if (ModulusBase >= 1000)\r\n                return Math.round(ModulusBase / 100) * 100;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        const {isBackdropOpen} = this.state;\r\n        const getGroupControl = () => {\r\n            return <div className={classes.actionsContainer}>\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={this.props.toMenu}\r\n                        className={classes.button}\r\n                        startIcon={<HomeIcon/>}\r\n                    >\r\n                        To Main Menu\r\n                    </Button>\r\n                    <Button\r\n                        disabled={this.state.activeStep === 0}\r\n                        onClick={this.handleBack}\r\n                        className={classes.button}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                    <Button\r\n                        disabled={!this.getPossibleMove(this.state.activeStep)}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleNext}\r\n                        className={classes.button}\r\n                    >\r\n                        {this.state.activeStep === this.state.stepsLength - 1 ? 'Finish' : 'Next'}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        }\r\n        if ((this.state.activeStep === this.state.stepsLength) && !this.state.finished) {\r\n            this.setState({finished: true});\r\n            this.recompute();\r\n        }\r\n        return (<Container maxWidth=\"lg\"> <Paper elevation={3}>\r\n            <Grid container>\r\n                <Grid item style={{maxWidth: this.state.finished ? '250px' : '100%'}}>\r\n                    <Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\r\n                        <Step>\r\n                            <StepLabel>Step 1</StepLabel>\r\n                            <StepContent displayPrint=\"block\">\r\n                                <Grid container spacing={4} justify=\"center\">\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            className={classes.button}\r\n                                            startIcon={<PublishIcon/>}\r\n                                            component=\"label\"\r\n                                        >\r\n                                            Load data input\r\n                                            <input\r\n                                                accept=\"application/vnd.sealed.xls\"\r\n                                                type=\"file\"\r\n                                                hidden\r\n                                                onChange={this.onLoadInput}\r\n                                            />\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} container>\r\n                                        <Grid item style={{flexGrow: 1}}><Divider variant=\"middle\"/></Grid>\r\n                                        <Grid item style={{transform: 'translateY(-50%)'}}>Or</Grid>\r\n                                        <Grid item style={{flexGrow: 1}}><Divider variant=\"middle\"/></Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                                    <Grid container spacing={4}>\r\n                                        <Grid container item xs={12} spacing={1} justify=\"center\">\r\n                                            <Grid item xs={12} sm={6} md={4}>\r\n                                                <Autocomplete\r\n                                                    margin=\"dense\"\r\n                                                    id=\"district\"\r\n                                                    value={this.state.District}\r\n                                                    options={this.state.currentDistricts}\r\n                                                    size=\"small\"\r\n                                                    style={{marginTop: 8, marginBottom: 4}}\r\n                                                    onChange={(event, value, reason) => {\r\n                                                        if (value == null)\r\n                                                            this.setState({\r\n                                                                District: value,\r\n                                                                County: null,\r\n                                                                currentCounties: Object.keys(counties)\r\n                                                            });\r\n                                                        else\r\n                                                            this.setState({\r\n                                                                District: value,\r\n                                                                County: null,\r\n                                                                currentCounties: districts[value]\r\n                                                            });\r\n                                                    }}\r\n                                                    renderInput={(params) => <TextField dense {...params}\r\n                                                                                        variant=\"filled\"\r\n                                                                                        className={classes.inputWithHelper}\r\n                                                                                        required\r\n                                                                                        error={!this.state.District}\r\n                                                                                        label={<>DISTRICT<IconButton\r\n                                                                                            aria-label=\"info\"\r\n                                                                                            className={classes.margin}\r\n                                                                                            size=\"small\">\r\n                                                                                            <InfoIcon fontSize=\"small\"\r\n                                                                                                      onClick={this.handleOpenHelper({map: 'district'}, true)}\r\n                                                                                                      onMouseEnter={this.handleOpenHelper({map: 'district'})}\r\n                                                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                                                            /></IconButton>\r\n                                                                                            {/*<InfoIcon fontSize=\"small\"*/}\r\n                                                                                            {/*          onClick={this.handleOpenHelper({src: DistrictPic}, true)}*/}\r\n                                                                                            {/*          onMouseEnter={this.handleOpenHelper({src: DistrictPic})}*/}\r\n                                                                                            {/*          onMouseLeave={this.handleCloseHelper}*/}\r\n                                                                                            {/*/></IconButton>*/}\r\n                                                                                        </>}\r\n                                                    />}/>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={4}>\r\n                                                <Autocomplete\r\n                                                    margin=\"dense\"\r\n                                                    id=\"county\"\r\n                                                    value={this.state.County}\r\n                                                    options={this.state.currentCounties}\r\n                                                    onChange={(event, value) => {\r\n                                                        if (value)\r\n                                                            this.setState({\r\n                                                                County: value,\r\n                                                                District: counties[value].length === 1 ? counties[value][0] : null\r\n                                                            });\r\n                                                        else\r\n                                                            this.setState({County: value})\r\n                                                    }}\r\n                                                    size=\"small\"\r\n                                                    style={{marginTop: 8, marginBottom: 4}}\r\n                                                    renderInput={(params) => <TextField dense {...params}\r\n                                                                                        className={classes.inputWithHelper}\r\n                                                                                        label={<>COUNTY<IconButton\r\n                                                                                            aria-label=\"info\"\r\n                                                                                            className={classes.margin}\r\n                                                                                            size=\"small\">\r\n                                                                                            <InfoIcon fontSize=\"small\"\r\n                                                                                                      onClick={this.handleOpenHelper({map: 'county'}, true)}\r\n                                                                                                      onMouseEnter={this.handleOpenHelper({map: 'county'})}\r\n                                                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                                                            /></IconButton></>}\r\n                                                                                        variant=\"filled\"/>}/>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={4}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"highway\"\r\n                                                    label=\"HIGHWAY\"\r\n                                                    value={this.state.Highway}\r\n                                                    defaultValue={this.state.Highway}\r\n                                                    onChange={(event) => this.handleChange('Highway', event.target.value)}\r\n                                                    variant=\"filled\"/>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"control\"\r\n                                                    label=\"CONTROL\"\r\n                                                    value={this.state.Control}\r\n                                                    onChange={(event) => this.handleChange('Control', event.target.value)}\r\n                                                    variant=\"filled\"/>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"section\"\r\n                                                    label=\"SECTION\"\r\n                                                    value={this.state.Section}\r\n                                                    onChange={(event) => this.handleChange('Section', event.target.value)}\r\n                                                    variant=\"filled\"/>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"job\"\r\n                                                    label=\"JOB\"\r\n                                                    value={this.state.Job}\r\n                                                    onChange={(event) => this.handleChange('Job', event.target.value)}\r\n                                                    variant=\"filled\"/>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"ProjectScope\"\r\n                                                    className={classes.inputWithHelper}\r\n                                                    label={<>Project Scope <IconButton aria-label=\"info\"\r\n                                                                                       className={classes.margin}\r\n                                                                                       size=\"small\">\r\n                                                        <InfoIcon fontSize=\"small\"\r\n                                                                  onClick={this.handleOpenHelper({text: \"Will be provided later.\"}, true)}\r\n                                                                  onMouseEnter={this.handleOpenHelper({text: \"Will be provided later.\"})}\r\n                                                                  onMouseLeave={this.handleCloseHelper}\r\n                                                        />\r\n                                                    </IconButton></>}\r\n                                                    select\r\n                                                    value={this.state.ProjectScope}\r\n                                                    onChange={(event) => this.handleChange('ProjectScope', event.target.value)}\r\n                                                    variant=\"filled\">\r\n                                                    <MenuItem value=\"NEW CONSTRUCTION\">New Construction</MenuItem>\r\n                                                    <MenuItem value=\"REHABILITATION\">Rehabilitation</MenuItem>\r\n                                                    <MenuItem value=\"WIDENING\">Widening</MenuItem>\r\n                                                </TextField>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"StationBegin\"\r\n                                                    label=\"STATION (BEGIN)\"\r\n                                                    value={this.state.StationBegin}\r\n                                                    onChange={(event) => this.handleChange('StationBegin', event.target.value)}\r\n                                                    variant=\"filled\"/>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"StationEnd\"\r\n                                                    label=\"STATION (END)\"\r\n                                                    value={this.state.StationEnd}\r\n                                                    onChange={(event) => this.handleChange('StationEnd', event.target.value)}\r\n                                                    variant=\"filled\"/>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"date\"\r\n                                                    type=\"date\"\r\n                                                    label=\"DATE\"\r\n                                                    value={this.state.Date}\r\n                                                    onChange={(event) => this.handleChange('Date', event.target.value)}\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    variant=\"filled\"/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} spacing={1}>\r\n                                            <TextField\r\n                                                id=\"comment\"\r\n                                                label=\"COMMENTS\"\r\n                                                multiline\r\n                                                onChange={(event) => this.handleChange('Comment', event.target.value)}\r\n                                                rows={4}\r\n                                                value={this.state.Comment}\r\n                                                variant=\"filled\"\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </form>\r\n                                {getGroupControl()}\r\n                            </StepContent>\r\n                        </Step>\r\n                        <Step>\r\n                            <StepLabel>Step 2</StepLabel>\r\n                            <StepContent displayPrint=\"block\">\r\n                                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                                    <Grid container spacing={4}>\r\n                                        <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                            <Grid item xs={12} justify=\"flex-start\">\r\n                                                <Typography variant={'h6'}>Basic Design Information</Typography>\r\n                                            </Grid>\r\n                                            <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                                  alignItems=\"flex-end\">\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Design life (years)</span>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        error={this.errorFunc.general('DesignLife')}\r\n                                                        helperText={this.errorFunc.general('DesignLife')}\r\n                                                        type={'number'}\r\n                                                        value={this.state.DesignLife}\r\n                                                        onChange={(event) => this.handleChangeSliderInput(event, 'DesignLife')}\r\n                                                        onBlur={() => this.handleBlurSliderInput('DesignLife', 1, 50)}\r\n                                                        id=\"DesignLife\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            min: 1,\r\n                                                            max: 50,\r\n                                                            type: 'number',\r\n                                                        }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Total number of lanes in one direction</span>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        type={'number'}\r\n                                                        value={this.state.LanesOneDirection}\r\n                                                        error={this.errorFunc.general('LanesOneDirection')}\r\n                                                        helperText={this.errorFunc.general('LanesOneDirection')}\r\n                                                        onChange={(event) => this.handleChangeSliderInput(event, 'LanesOneDirection')}\r\n                                                        onBlur={() => this.handleBlurSliderInput('LanesOneDirection', 1, 10)}\r\n                                                        id=\"LanesOneDirection\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            min: 1,\r\n                                                            max: 10,\r\n                                                            type: 'number',\r\n                                                        }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Total design traffic in one direction (million ESAL)</span>\r\n                                                        <IconButton aria-label=\"info\" className={classes.margin}\r\n                                                                    size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onClick={this.handleOpenHelper({src: TrafficOneDirectionPic}, true)}\r\n                                                                      onMouseEnter={this.handleOpenHelper({src: TrafficOneDirectionPic})}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        type={\"number\"}\r\n                                                        value={this.state.TrafficOneDirection}\r\n                                                        error={this.errorFunc.general('TrafficOneDirection')}\r\n                                                        helperText={this.errorFunc.general('TrafficOneDirection')}\r\n                                                        onChange={(event) => this.handleChangeSliderInput(event, 'TrafficOneDirection')}\r\n                                                        onBlur={() => this.handleBlurSliderInput('TrafficOneDirection', 10, 500)}\r\n                                                        id=\"TrafficOneDirection\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            min: 1,\r\n                                                            max: 500,\r\n                                                            type: 'number',\r\n                                                        }}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                            <Grid item xs={12} container justify=\"flex-start\">\r\n                                                <Typography variant={'h6'}>Structural Design Criteria</Typography>\r\n                                                <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onClick={this.handleOpenHelper({src: StructureDesignCriteriaPic}, true)}\r\n                                                              onMouseEnter={this.handleOpenHelper({src: StructureDesignCriteriaPic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                            </Grid>\r\n                                            <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                                  alignItems=\"flex-end\">\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Acceptable punchout per mile</span>\r\n                                                        <IconButton aria-label=\"info\" className={classes.margin}\r\n                                                                    size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onClick={this.handleOpenHelper({text: Acceptable_punchout_Popup}, true)}\r\n                                                                      onMouseEnter={this.handleOpenHelper({text: Acceptable_punchout_Popup})}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        type={\"number\"}\r\n                                                        value={this.state.PunchoutsPerMile}\r\n                                                        onChange={(event) => this.handleChangeSliderInput(event, 'PunchoutsPerMile')}\r\n                                                        onBlur={() => this.handleBlurSliderInput('PunchoutsPerMile', 5, 20)}\r\n                                                        id=\"PunchoutsPerMile\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            min: 5,\r\n                                                            max: 20,\r\n                                                            type: 'number',\r\n                                                        }}\r\n                                                        disabled\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                            <Grid item xs={12} container justify=\"flex-start\">\r\n                                                <Typography variant={'h6'}>Concrete Layer/Material\r\n                                                    Information</Typography>\r\n                                                {/*<IconButton aria-label=\"info\" className={classes.margin} size=\"small\">*/}\r\n                                                {/*    <InfoIcon fontSize=\"small\"*/}\r\n                                                {/*              onClick={this.handleOpenHelper({src: ConcreteLayerPic}, true)}*/}\r\n                                                {/*              onMouseEnter={this.handleOpenHelper({src: ConcreteLayerPic})}*/}\r\n                                                {/*              onMouseLeave={this.handleCloseHelper}*/}\r\n                                                {/*    />*/}\r\n                                                {/*</IconButton>*/}\r\n                                            </Grid>\r\n                                            <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                                  alignItems=\"flex-end\">\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>28-day modulus of rupture (psi)</span>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        value={this.state.ModulusOfRupture}\r\n                                                        onChange={(event) => this.handleChangeSliderInput(event, 'ModulusOfRupture')}\r\n                                                        onBlur={() => this.handleBlurSliderInput('ModulusOfRupture', 1, 1000)}\r\n                                                        id=\"ModulusOfRupture\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            min: 1,\r\n                                                            max: 1000,\r\n                                                            type: 'number',\r\n                                                        }}\r\n                                                        disabled\r\n                                                    />\r\n                                                </Grid>\r\n\r\n\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Concrete elastic modulus (million psi)</span>\r\n                                                        <IconButton aria-label=\"info\"\r\n                                                                    className={classes.margin} size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onClick={this.handleOpenHelper({text: \"Will be provided later.\"}, true)}\r\n                                                                      onMouseEnter={this.handleOpenHelper({text: \"Will be provided later.\"})}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        value={this.state.ElasticModulue}\r\n                                                        onChange={(event) => this.handleChangeSliderInput(event, 'ElasticModulue')}\r\n                                                        onBlur={() => this.handleBlurSliderInput('ElasticModulue', 1, 1000)}\r\n                                                        id=\"ModulusOfRupture\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            min: 1,\r\n                                                            max: 1000,\r\n                                                            type: 'number',\r\n                                                        }}\r\n                                                        disabled\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </form>\r\n                                {getGroupControl()}\r\n                            </StepContent>\r\n                        </Step>\r\n                        <Step>\r\n                            <StepLabel>Step 3</StepLabel>\r\n                            <StepContent displayPrint=\"block\">\r\n                                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                                    <Grid container spacing={4}>\r\n                                        <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                            <Grid item xs={12} justify=\"flex-start\">\r\n                                                <Typography variant={'h6'}>Subgrade and Treatment\r\n                                                    Information</Typography>\r\n                                            </Grid>\r\n                                            <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                                  alignItems=\"flex-end\">\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Soil classification system</span>\r\n                                                        <IconButton aria-label=\"info\" className={classes.margin}\r\n                                                                    size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onClick={this.handleOpenHelper({src: soilSystermPic}, true)}\r\n                                                                      onMouseEnter={this.handleOpenHelper({src: soilSystermPic})}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <Input\r\n                                                        value={this.state.SoilClassificationSystem}\r\n                                                        onChange={(event, newValue) => this.setState({SoilClassificationSystem: newValue})}\r\n                                                        id=\"SoilClassificationSystem\"\r\n                                                        disabled\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Soil classification of subgrade</span>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <Autocomplete\r\n                                                        margin=\"dense\"\r\n                                                        id=\"SoilSub\"\r\n                                                        options={soilClassSub}\r\n                                                        size=\"small\"\r\n                                                        value={this.state.SoilSub}\r\n                                                        onChange={(event, value) => this.handleSoilSub(value)}\r\n                                                        renderInput={(params) => <TextField dense {...params}\r\n                                                                                            required\r\n                                                                                            error={this.errorFunc.general('SoilSub')}\r\n                                                                                            helperText={this.errorFunc.general('SoilSub')}\r\n                                                                                            label=\"\"/>}/>\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Plasticity Index (PI)</span>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField type=\"number\" id=\"PlasticityIndex\"\r\n                                                               value={this.state.PlasticityIndex}\r\n                                                               error={this.errorFunc.general('PlasticityIndex')}\r\n                                                               helperText={this.errorFunc.general('PlasticityIndex')}\r\n                                                               onBlur={() => this.handleBlurSliderInput('PlasticityIndex', 0)}\r\n                                                               inputProps={{\r\n                                                                   min: 0,\r\n                                                                   type: 'number',\r\n                                                               }}\r\n                                                               onChange={(event) => this.handlePlasticityIndex(event.target.value)}/>\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Subgrade treatment</span>\r\n                                                        <IconButton aria-label=\"info\" className={classes.margin}\r\n                                                                    size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onClick={this.handleOpenHelper({src: subbasePic,href:'https://ftp.dot.state.tx.us/pub/txdot/mtd/treatment-guidelines.pdf'}, true)}\r\n                                                                      onMouseEnter={this.handleOpenHelper({src: subbasePic})}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <Autocomplete\r\n                                                        margin=\"dense\"\r\n                                                        id=\"SubbaseType\"\r\n                                                        options={this.state.SubbaseTypeOpt}\r\n                                                        value={this.state.SubbaseType}\r\n                                                        onChange={(event,value) => {\r\n                                                            this.handleChange('SubbaseType', value);\r\n                                                            if(value===\"No treatment\")\r\n                                                                this.setState({SubbaseThickness:0})\r\n                                                        }}\r\n                                                        size=\"small\"\r\n                                                        freeSolo\r\n                                                        autoSelect={true}\r\n                                                        style={{marginTop: 8, marginBottom: 4}}\r\n                                                        renderInput={(params) => <TextField size=\"small\" {...params}\r\n                                                                                            required\r\n                                                                                            error={this.errorFunc.general('SubbaseType')}\r\n                                                                                            helperText={this.errorFunc.general('SubbaseType')}\r\n                                                                                           />}/>\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Subgrade treatment thickness (in.)</span>\r\n                                                        <IconButton aria-label=\"info\" className={classes.margin}\r\n                                                                    size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onClick={this.handleOpenHelper({src: subbasePic}, true)}\r\n                                                                      onMouseEnter={this.handleOpenHelper({src: subbasePic})}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        error={this.errorFunc.general('SubbaseThickness')||this.errorFunc.Step3.SubbaseThickness()||this.warningFunc.Step3.SubbaseThickness()}\r\n                                                        helperText={this.errorFunc.general('SubbaseThickness')||this.errorFunc.Step3.SubbaseThickness()||this.warningFunc.Step3.SubbaseThickness()}\r\n                                                        disabled={(this.state.SubbaseThickness===0)&&(this.state.SubbaseType==='No treatment')}\r\n                                                        type=\"number\" id=\"SubbaseThickness\"\r\n                                                        value={this.state.SubbaseThickness}\r\n                                                        onChange={(event) => ((event.target.value > 0) || (event.target.value === '')) ? this.handleChange(\"SubbaseThickness\", event.target.value) : ''}\r\n                                                        inputProps={{min: 0}}\r\n                                                    />\r\n                                                </Grid>\r\n                                                {/*<Grid item xs={8} justify=\"flex-start\">*/}\r\n                                                {/*    <Grid container xs={12} justify=\"flex-start\">*/}\r\n                                                {/*        <span>Composite K (psi/in.)</span>*/}\r\n                                                {/*        <span className={classes.dot} style={{flexGrow:1}}/>*/}\r\n                                                {/*    </Grid>*/}\r\n                                                {/*</Grid>*/}\r\n                                                {/*<Grid item xs={4}>*/}\r\n                                                {/*    <input type=\"number\" id=\"19\" value={this.state.CompositeK} onChange={(event, newValue) => this.setState({CompositeK:newValue})}/>*/}\r\n                                                {/*</Grid>*/}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                            <Grid item xs={12} justify=\"flex-start\">\r\n                                                <Typography variant={'h6'}>Base Layer Information</Typography>\r\n                                            </Grid>\r\n                                            <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                                  alignItems=\"flex-end\">\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Base type</span>\r\n                                                        <IconButton\r\n                                                            aria-label=\"info\"\r\n                                                            className={classes.margin}\r\n                                                            size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onClick={this.handleOpenHelper({src: BasetypePic}, true)}\r\n                                                                      onMouseEnter={this.handleOpenHelper({src: BasetypePic})}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            /></IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        select\r\n                                                        margin=\"dense\"\r\n                                                        id=\"BaseType\"\r\n                                                        size=\"small\"\r\n                                                        value={this.state.BaseType}\r\n                                                        onChange={(event) => {\r\n                                                            this.handleBaseType(event.target.value)\r\n                                                        }}\r\n                                                        error={this.errorFunc.general('BaseType')}\r\n                                                        helperText={this.errorFunc.general('BaseType')}\r\n                                                    >\r\n                                                        {this.state.baseTypeOpt.map(d => <MenuItem value={d}\r\n                                                                                                   key={d}>{d}</MenuItem>)}\r\n                                                    </TextField>\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Base layer thickness (inches)</span>\r\n                                                        <IconButton aria-label=\"info\"\r\n                                                                    className={classes.margin} size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onMouseEnter={this.handleOpenHelper({\r\n                                                                          text: <>\r\n                                                                              <div>Minimum Cap.</div>\r\n                                                                              <div>CTB ≥ 6.0 in.</div>\r\n                                                                              <div>HMA ≥ 4.0 in</div>\r\n                                                                          </>\r\n                                                                      })}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        error={this.errorFunc.general('BaseThickness')||this.errorFunc.Step3.BaseThickness()}\r\n                                                        helperText={this.errorFunc.general('BaseThickness')||this.errorFunc.Step3.BaseThickness()}\r\n                                                        value={this.state.BaseThickness}\r\n                                                        onChange={(event) => this.handleChange('BaseThickness', event.target.value)}\r\n                                                        id=\"BaseThickness\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            min: this.state.BaseThicknessMin,\r\n                                                            max: this.state.BaseThicknessMax,\r\n                                                            type: 'number',\r\n                                                        }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Modulus of base layer (ksi)</span>\r\n                                                        <IconButton aria-label=\"info\"\r\n                                                                    className={classes.margin} size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onMouseEnter={this.handleOpenHelper({\r\n                                                                          text: <>\r\n                                                                              <div>CTB = 500 ksi</div>\r\n                                                                              <div>HMA = 400 ksi</div>\r\n                                                                          </>\r\n                                                                      })}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField type=\"number\" id=\"ModulusBase \"\r\n                                                               value={this.state.ModulusBase}\r\n                                                               disabled\r\n                                                               onChange={(event) => this.setState({ModulusBase: event.target.value})}/>\r\n                                                </Grid>\r\n                                                {/*<Grid item xs={8} justify=\"flex-start\">*/}\r\n                                                {/*    <Grid container xs={12} justify=\"flex-start\">*/}\r\n                                                {/*        <span>Composite k-Value</span>*/}\r\n                                                {/*        <IconButton aria-label=\"info\"*/}\r\n                                                {/*                    className={classes.margin} size=\"small\">*/}\r\n                                                {/*            <InfoIcon fontSize=\"small\"*/}\r\n                                                {/*                      onMouseEnter={this.handleOpenHelper({text: 'Composite k table'})}*/}\r\n                                                {/*                      onMouseLeave={this.handleCloseHelper}*/}\r\n                                                {/*            />*/}\r\n                                                {/*        </IconButton>*/}\r\n                                                {/*        <span className={classes.dot} style={{flexGrow: 1}}/>*/}\r\n                                                {/*    </Grid>*/}\r\n                                                {/*</Grid>*/}\r\n                                                {/*<Grid item xs={4}>*/}\r\n                                                {/*    <TextField type=\"number\" id=\"CompositeK \"*/}\r\n                                                {/*               value={this.state.CompositeK}*/}\r\n                                                {/*               disabled/>*/}\r\n                                                {/*</Grid>*/}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </form>\r\n                                {getGroupControl()}\r\n                            </StepContent>\r\n                        </Step>\r\n                        <Step>\r\n                            <StepLabel>Result</StepLabel>\r\n                            <StepContent displayPrint=\"block\">\r\n                            </StepContent>\r\n                        </Step>\r\n                    </Stepper>\r\n                    {this.state.activeStep === this.state.stepsLength && (\r\n                        <>\r\n                            <Paper square elevation={0} className={classes.resetContainer}>\r\n                                <Grid container direction=\"column\">\r\n                                <Button\r\n                                    onClick={this.handleBack}\r\n                                    className={classes.button}\r\n                                    startIcon={<ArrowBackIosIcon/>}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n                                <Button onClick={this.handleModify} className={classes.button}\r\n                                        size=\"small\"\r\n                                        startIcon={<EditIcon/>}\r\n                                >\r\n                                    Modify\r\n                                </Button>\r\n                                <Button onClick={this.handleReset} className={classes.button}\r\n                                        size=\"small\"\r\n                                        startIcon={<RefreshIcon/>}\r\n                                >\r\n                                    Reset\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classes.button}\r\n                                    startIcon={<PrintIcon/>}\r\n                                    // onClick={()=>this.props.print(this.state)}\r\n                                    onClick={() => {\r\n                                        if (window.matchMedia) {\r\n                                            var mediaQueryList = window.matchMedia('print');\r\n                                            mediaQueryList.addListener((mql) =>{\r\n                                                if (!mql.matches) {\r\n                                                    this.setState({isBackdropOpen: false});\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                        window.onafterprint =  ()=> {\r\n                                            this.setState({isBackdropOpen: false});\r\n                                        }\r\n                                        this.setState({isBackdropOpen: true, printRequest: true});\r\n                                        // window.print();\r\n\r\n                                    }}\r\n                                >\r\n                                    Print\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    // onClick={()=>this.props.print(this.state)}\r\n                                    onClick={this.onSaveInput}\r\n                                >\r\n                                    Save input\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classes.button}\r\n                                    startIcon={<ShowChartIcon/>}\r\n                                    // onClick={()=>this.props.print(this.state)}\r\n                                    onClick={() => this.setState({openAnalytics: true})}\r\n                                >\r\n                                    ANALYSIS RESULT\r\n                                </Button>\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    variant=\"contained\"\r\n                                    onClick={this.props.toMenu}\r\n                                    className={classes.button}\r\n                                    startIcon={<HomeIcon/>}\r\n                                >\r\n                                    To Main Menu\r\n                                </Button>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </>\r\n                    )}\r\n                </Grid>\r\n                {this.state.finished ? <Grid item style={{width: 'calc(100% - 250px)'}}>\r\n                    <Report\r\n                        data={this.state}\r\n                        AnalysisPunchouts={this.props.AnalysisPunchouts()}\r\n                        AnalysisSlabThickness={this.props.AnalysisSlabThickness()}\r\n                    />\r\n                </Grid> : ''}\r\n            </Grid>\r\n        </Paper>\r\n            {(this.state.helperEl && this.state.helperEl.content && !this.state.helperEl.content.map) ?\r\n                <Popper\r\n                    placement=\"right\"\r\n                    disablePortal={false}\r\n                    open={true}\r\n                    anchorEl={this.state.helperEl.el}\r\n                    modifiers={{\r\n                        flip: {\r\n                            enabled: true,\r\n                        },\r\n                        preventOverflow: {\r\n                            enabled: true,\r\n                            boundariesElement: 'window',\r\n                        },\r\n                        arrow: {\r\n                            enabled: true,\r\n                        },\r\n                    }}\r\n                    style={{zIndex: 4}}\r\n                >\r\n                    <Card className={classes.helpHolder}>\r\n                        {this.state.helperEl.freeze ? <IconButton aria-label=\"close\" className={classes.closeButton}\r\n                                                                  onClick={this.handleCloseHelper}>\r\n                            <CloseIcon/>\r\n                        </IconButton> : ''}\r\n                        {this.state.helperEl.content.src ?\r\n                            <a href={this.state.helperEl.content.href} target={\"_blank\"}>\r\n                            <TransformWrapper\r\n                                defaultScale={1}\r\n                                defaultPositionX={1}\r\n                                defaultPositionY={1}\r\n                            >\r\n                                <TransformComponent>\r\n                                    <img\r\n                                        src={this.state.helperEl.content.src}\r\n                                        style={{maxWidth: 600, height: 'auto'}}\r\n                                    /></TransformComponent></TransformWrapper> </a>:\r\n                            this.state.helperEl.content.text\r\n                        }\r\n                    </Card>\r\n                </Popper> : ''\r\n            }\r\n            <Backdrop\r\n                sx={{ color: '#fff'}}\r\n                style={{zIndex: 10}}\r\n                open={isBackdropOpen}\r\n            >\r\n            </Backdrop>\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth={\"lg\"}\r\n                open={!!this.state.openAnalytics}\r\n                onClose={() => this.setState({openAnalytics: false})}>\r\n                <DialogTitle id=\"responsive-dialog-title\"\r\n                             onClose={() => this.setState({openAnalytics: false})}>Analysis</DialogTitle>\r\n                <DialogContent>\r\n                    {this.state.finished ? <Graph\r\n                        rows={this.state.rows}\r\n                        AnalysisPunchouts={this.props.AnalysisPunchouts}\r\n                        init={this.state.activeStep === this.state.stepsLength}\r\n                        parameter={{...this.state}}/> : ''}\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Popper\r\n                placement=\"right\"\r\n                disablePortal={false}\r\n                open={!!(this.state.helperEl && this.state.helperEl.content && this.state.helperEl.content.map)}\r\n                anchorEl={this.state.helperEl && this.state.helperEl.el}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: true,\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: true,\r\n                        boundariesElement: 'window',\r\n                    },\r\n                    arrow: {\r\n                        enabled: true,\r\n                    },\r\n                }}\r\n                style={{zIndex: 4}}\r\n            >\r\n                <Card style={{width: 600}}>\r\n                    {this.state.helperEl && this.state.helperEl.freeze ?\r\n                        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={this.handleCloseHelper}>\r\n                            <CloseIcon/>\r\n                        </IconButton> : ''}\r\n\r\n                    {this.state.helperEl && this.state.helperEl.content && this.state.helperEl.content.map==='county'?<County highlight={this.state.currentCounties}\r\n                            target={this.state.County}\r\n                            selected={(value) => {\r\n                                if (value)\r\n                                    this.setState({\r\n                                        County: value,\r\n                                        District: counties[value].length === 1 ? counties[value][0] : null\r\n                                    });\r\n                                else\r\n                                    this.setState({County: value})\r\n                            }}/>:<div><div style={{paddingLeft:10}}>\r\n\r\n                        <h5>A. Project Identification</h5>\r\n                        <span>Provide general information of a project, i.i. district, county, highway, direaction of construction, and stations. The \"District\" field is require to initiate the prescribed climatic\r\n                        data that will be used for evaluation of stresses due to environmental loading. The input must be per the official abbreviation as show in Table 1.1. All 25 TxDOT districts in the State of Texas\r\n                        are applicable to the district field. The other fields are optional. Once the design is completed, this screen can be printed for record in the project file</span>\r\n                        </div>\r\n                        <District\r\n                                         target={this.state.District}\r\n                                         selected={(value) => {\r\n                                             if (value == null)\r\n                                                 this.setState({\r\n                                                     District: value,\r\n                                                     County: null,\r\n                                                     currentCounties: Object.keys(counties)\r\n                                                 });\r\n                                             else\r\n                                                 this.setState({\r\n                                                     District: value,\r\n                                                     County: null,\r\n                                                     currentCounties: districts[value]\r\n                                                 });\r\n                                         }}/></div>}\r\n                </Card>\r\n            </Popper>\r\n        </Container>);\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CRCP);\r\n","import React from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {AppBar,IconButton,Typography,Button,Toolbar,Grid,Slide} from '@material-ui/core';\nimport coverPic from './image/cover.jpg';\nimport CRCP from './component/CRCP'\nimport Report from \"./component/report\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  titleNav: {\n    flexGrow: 1,\n  },\n  title: {\n    color: 'white'\n  },\n  cover: {\n    width:'100%',\n    position:'fixed',\n    background: `linear-gradient(0deg,rgba(0,0,0,0) 0,#000 100%), url(${coverPic}) no-repeat center center fixed`,\n    backgroundSize: 'cover',\n    height: '100vh',\n    overflow: 'hidden',\n    zIndex: -1\n  },\n}));\n\nfunction App() {\n  const [page, setPage] = React.useState('home');\n  const [reportData, setReportData] = React.useState({});\n  const [AnalysisPunchouts, setAnalysisPunchouts] = React.useState(0);\n  const [AnalysisSlabThickness, setAnalysisSlabThickness] = React.useState(0);\n  const classes = useStyles();\n  const AnalysisPunchoutsFunc = (d)=>d===undefined?AnalysisPunchouts:setAnalysisPunchouts(d);\n  const AnalysisSlabThicknessFunc = (d)=>d===undefined?AnalysisSlabThickness:setAnalysisSlabThickness(d);\n  return (\n    <div >\n      <div className={classes.cover}></div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.titleNav}>\n            TxCRCP-ME\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.root}>\n        <Slide direction=\"up\" in={page==='home'} mountOnEnter unmountOnExit>\n          <Grid container spacing={5} alignItems=\"center\" justify=\"center\" direction={\"column\"} style={{height: 'calc(100vh - 64px)',width:'100%'}}>\n            <Grid item>\n              <Typography variant=\"h3\" className={classes.title}>\n                TxDOT Mechanistic-Empirical CRCP Design System\n              </Typography>\n            </Grid>\n            <Grid container item alignItems=\"stretch\" justify=\"center\" direction={\"column\"} spacing={3} style={{width:'fit-content'}}>\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\" style={{width:'100%'}} onClick={()=>setPage('CRCP')}>CRCP Design</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" style={{width:'100%'}}>Slab Support</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" style={{width:'100%'}}>Product Disclaimer</Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Slide>\n        <Slide direction=\"up\" in={page==='CRCP'} mountOnEnter unmountOnExit>\n          <CRCP\n              toMenu={()=>setPage('home')}\n              // print={(d)=>{setReportData(d);setPage('Print')}}\n              AnalysisPunchouts={AnalysisPunchoutsFunc}\n              AnalysisSlabThickness={AnalysisSlabThicknessFunc}\n          />\n        </Slide>\n        {/*<Slide direction=\"up\" in={page==='Print'} mountOnEnter unmountOnExit>*/}\n        {/*  <Report*/}\n        {/*      data={reportData}*/}\n        {/*      toMenu={()=>setPage('home')}*/}\n        {/*      toCRCP={()=>setPage('CRCP')}*/}\n        {/*      AnalysisPunchouts={AnalysisPunchoutsFunc()}*/}\n        {/*  />*/}\n        {/*</Slide>*/}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}