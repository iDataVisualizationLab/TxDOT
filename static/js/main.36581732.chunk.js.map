{"version":3,"sources":["image/cover.jpg","component/tableData.js","component/data/stress.csv","component/Graph.js","component/CRCP.js","App.js","reportWebVitals.js","index.js"],"names":["Tabledata","props","titles","state","visible","prevProps","this","rows","minArray","maxArray","j","length","push","i","colorRedBlues","colorScale","d3","domain","range","r","parameter","C18","color","colorgreenred","id","type","disabled","style","textAlign","fontSize","fontWeight","value","parseFloat","toFixed","size","onChange","event","setState","target","checked","for","width","display","border","backgroundColor","map","t","c","paddingRight","paddingTop","paddingBottom","indexOf","Component","Graph","colorGreenRed","tip","d3tip","attr","offset","html","d","y","x","init","recompute","n","data","rowIndexStress","row1","F8","Math","pow","fatigue","F19","C24","C25","row2","k","parameterGraph","height","dataset","obj","xScale","yScale","xAxis","tickSizeInner","tickSizeOuter","tickPadding","yAxis","line","tableCreate","margin","top","right","bottom","left","stress","then","data_","refs","svg","select","selectAll","call","classes","Grid","container","alignItems","direction","spacing","item","xs","ref","className","transform","fontFamily","cx","cy","fill","strokeWidth","stroke","withStyles","theme","root","districts","counties","CRCP","handleNext","activeStep","handleBack","handleReset","stepsLength","finished","C19","F7","F16","F17","getGroupControl","actionsContainer","Button","variant","onClick","toMenu","button","startIcon","Container","maxWidth","Paper","elevation","Stepper","orientation","Step","StepLabel","StepContent","noValidate","autoComplete","justify","TextField","label","defaultValue","Autocomplete","options","marginTop","marginBottom","renderInput","params","dense","multiline","Typography","dot","flexGrow","Slider","newValue","min","max","valueLabelDisplay","square","resetContainer","marginRight","padding","borderBottom","useStyles","makeStyles","menuButton","titleNav","title","cover","position","background","coverPic","backgroundSize","overflow","zIndex","App","React","useState","page","setPage","AppBar","Toolbar","Slide","in","mountOnEnter","unmountOnExit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36581732.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cover.43610a00.jpg\";","import React,{ Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\nclass Tabledata  extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible:false\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.rows!==prevProps.rows){\r\n            const rows = this.props.rows;\r\n            var minArray = [];\r\n            var maxArray = [];\r\n            for (var j=0; j<rows[0].length; j++){\r\n                minArray.push(1000000000);\r\n                maxArray.push(0);\r\n            }\r\n            for (var i=0;i<rows.length;i++){\r\n                for (var j=0;j<rows[i].length;j++){\r\n                    if (rows[i][j]>maxArray[j])\r\n                        maxArray[j] = rows[i][j];\r\n                    if (rows[i][j]<minArray[j])\r\n                        minArray[j] = rows[i][j];\r\n                }\r\n            }\r\n            this.colorRedBlues = [];\r\n            for (var j=0; j<rows[0].length; j++){\r\n                var colorScale = d3.scaleLinear()\r\n                    .domain([minArray[j], (minArray[j]+maxArray[j])/2, maxArray[j]])\r\n                    .range([\"#55f\", \"white\", \"#f55\"]);\r\n                this.colorRedBlues.push(colorScale);\r\n            }\r\n        }\r\n    }\r\n    titles = [\"Age (Month)\",\"Age (Year)\", \"Modulus of Rupture (psi)\",\"Modulus of Elasticity (ksi)\"\r\n        ,\"Concrete Stress (T) (psi)\"\r\n        ,\"Concrete Stress (E) (psi)\"\r\n        ,\"Total Concrete Stress (psi)\"\r\n        ,\"Stress to Strength Ratio (psi/psi)\"\r\n        ,\"Number of Load Repetitions to Failure\"\r\n        ,\"Number of Load Repetitions\"\r\n        ,\"Pavement Damage\"\r\n        ,\"Cumulative Damage\"\r\n        ,\"Number of Punchouts per Mile\"]\r\n    render() {\r\n        var r =  12 * this.props.parameter.C18-1;\r\n        var color = this.props.colorgreenred(this.props.rows[r][12]);\r\n        return (this.colorRedBlues?<div>\r\n            <div id=\"div_CRCP_PERFORMANCE\"><b>CRCP PERFORMANCE</b><br/>\r\n            Number of Punchouts per Mile:<input type=\"TEXT\" disabled style={{\"background-color\":color, textAlign: \"center\", fontSize: 17, fontWeight: \"bold\"}} value={parseFloat(this.props.rows[r][12]).toFixed(2)} size=\"7\"/><br/><br/>\r\n            </div>\r\n            <div id=\"divCheckbox1\"><input type=\"checkbox\" id=\"checkbox1\" onChange={(event)=>this.setState({visible:event.target.checked})}/>\r\n                <label for=\"checkbox1\" > Analysis Result </label> </div>\r\n            <table style={{width:'99%',fontSize: '12px',display:this.state.visible?'table':'none'}} border=\"1\"  id=\"analysisTable\">\r\n                <tr style={{backgroundColor:\"#888\"}}>\r\n                    {this.titles.map(t=><td>{t}</td>)}\r\n                </tr>\r\n                {this.props.rows.map(r=><tr>{r.map((c,j)=><td style={{textAlign: 'right', backgroundColor: (j===12)?this.props.colorgreenred(c):this.colorRedBlues[j](c),\r\n                     paddingRight: '10px', paddingTop: '0px', paddingBottom: '0px'}}>\r\n                    {([1,2,3,12,8,9,5,6,7,10,11].indexOf(j)!==-1)?parseFloat(c).toFixed((j==1 || j==12)?2:((j==2 || j==3 || j==8 || j==9)?0:((j==5 || j==6)?1:((j==7)?3:4)))):c}\r\n                </td>)}</tr>)}\r\n            </table>\r\n        </div>:''  )\r\n    }\r\n}\r\n\r\nexport default Tabledata;\r\n","export default __webpack_public_path__ + \"static/media/stress.d2ebc577.csv\";","import React,{ Component } from 'react';\r\nimport './Graph.css';\r\nimport Tabledata from './tableData';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Grid,Typography,Button,Paper,Stepper,Step,StepLabel,StepContent,TextField,Container} from '@material-ui/core';\r\nimport * as d3 from 'd3';\r\nimport { tip as d3tip } from \"d3-v6-tip\";\r\nimport stress from './data/stress.csv'\r\n\r\nconst styles = theme=> ({\r\n    root: {\r\n        width:'100%',\r\n        '& .MuiTextField-root': {\r\n            width: '100%',\r\n        },\r\n        '& input': {\r\n            width: '100%',\r\n        },\r\n    }\r\n});\r\n\r\nclass Graph extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        const margin = {top: 20, right: 80, bottom: 60, left: 120},\r\n            width = 900 - margin.left - margin.right,\r\n            height = 400 - margin.top - margin.bottom;\r\n\r\n        this.state={\r\n            margin,\r\n            width,\r\n            height,\r\n            row1:[],\r\n            rows:[],\r\n            init:true\r\n        }\r\n    }\r\n    colorGreenRed = d3.scaleLinear()\r\n        .domain([0, 25])\r\n        .range([\"#0f0\", \"#f00\"]);\r\n    tip = d3tip()\r\n        .attr('class', 'd3-tip')\r\n        .offset([-10, 0])\r\n        .html((d) =>{\r\n            var color =  this.colorGreenRed(d.y);\r\n            var html = \"#Punchouts per Mile: <span style='color:\"+color+\"; font-weight: bold'>\" + parseFloat(d.y).toFixed(2) + \"</span><br>\";\r\n            html += \"&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; Age (months):  <span style='color:white; font-weight: bold'>\" + d.x + \"</span>\";\r\n            return html;\r\n        });\r\n    componentDidMount() {\r\n        d3.tsv(stress).then(data_=>{\r\n            this.setState({data: data_});\r\n            this.recompute();\r\n            this.tableCreate();\r\n            this.parameterGraph();\r\n        });\r\n    }\r\n    init = true;\r\n    componentDidUpdate(prevProps) {\r\n        const init = ((this.props.init !== prevProps.init)&&this.props.init);\r\n        // console.log('-------------------------',init)\r\n        this.init = init||this.init;\r\n        // console.log('-------------------------this',this.init)\r\n        if ((this.props.parameter !== prevProps.parameter) ||this.init) {\r\n            this.recompute();\r\n            this.parameterGraph();\r\n            if (this.state.data && this.refs.svg && this.state.xAxis && this.state.yAxis) {\r\n                const svg = d3.select(this.refs.svg).select('g.content');\r\n                svg.selectAll(\".xaxis\")\r\n                    .attr(\"transform\", \"translate(0,\" + this.state.height + \")\")\r\n                    .call(this.state.xAxis);\r\n                svg.selectAll(\".yaxis\")\r\n                    .call(this.state.yAxis);\r\n                if (this.init&&this.state.dataset.length){\r\n                //     debugger\r\n                //     svg.selectAll(\".point\")\r\n                //         .data(this.state.dataset).enter()\r\n                //         .append(\"circle\")\r\n                //         .attr(\"class\", \"point\")\r\n                //         .attr(\"r\", 4)\r\n                //         .attr(\"cx\", (d)=>this.state.xScale(d.x))\r\n                //         .attr(\"cy\", (d)=> this.state.yScale(d.y))\r\n                //         .attr(\"fill\", (d)=> this.colorGreenRed(d.y))\r\n                //         .attr(\"stroke-width\", 0.5)\r\n                //         .attr(\"stroke\",\"#000\")\r\n                //         .on('mouseover', this.tip.show)\r\n                //         .on('mouseout', this.tip.hide)\r\n                //     svg.call(this.tip)\r\n                    this.init = false;}\r\n                // }else{\r\n                //     svg.selectAll(\".point\")\r\n                //         .data(this.state.dataset)\r\n                //         .attr(\"cx\", (d)=> this.state.xScale(d.x))\r\n                //         .attr(\"cy\", (d,i)=>this.state.yScale(d.y))\r\n                //         .attr(\"fill\", (d)=> this.colorGreenRed(d.y));\r\n                // }\r\n            }\r\n        }\r\n    }\r\n    recompute = ()=>{\r\n        const data = this.state.data;\r\n        let rowIndexStress = 9;\r\n        let row1 = [];\r\n        const rows = [];\r\n\r\n        row1.push( 1 );\r\n        row1.push( row1[0]/ 12 );\r\n        row1.push( this.props.parameter.F8);\r\n        row1.push( 57000 / 7.5 * row1[2] / 1000 );\r\n        row1.push( +data[rowIndexStress-2][\"STR (T)\"] );\r\n        row1.push( data[rowIndexStress-2][\"STR (E)\"] * row1[3] / 5000 )\r\n        row1.push( row1[4] + row1[5] )\r\n        row1.push( row1[6] / row1[2] )\r\n        row1.push( 11800 * Math.pow(row1[7],fatigue(this.props.parameter.F19) ))\r\n        row1.push( lane(this.props.parameter.C24)\r\n            * this.props.parameter.C25 * 1000000 / 12 / this.props.parameter.C18 )\r\n        row1.push( row1[9] / row1[8] )\r\n        row1.push( row1[10] )\r\n        row1.push( 18.985 / (1 + 5 * Math.pow(row1[11],-1.1)) )\r\n        rows.push(row1);    // Add to the array\r\n\r\n        //console.log(+document.getElementById(\"C18\").value);\r\n        for (var i=0; i<this.props.parameter.C18;i++){\r\n            //debugger;\r\n            if (i!=0)\r\n                rowIndexStress = 8;\r\n            for (var j=0;j<12; j++){\r\n                if (i==0 && j==0)\r\n                    ;\r\n                    //If counterYear = 1 And counterMonth = 1 Then\r\n                //      'If First Year than Omit Calculation of First Month, Already Done\r\n                else {\r\n                    rowIndexStress = rowIndexStress + 1\r\n                    let row2 = [];\r\n                    row2.push( row1[0] + 1 )\r\n                    row2.push( row2[0]/ 12 );\r\n                    // Cells(rowIndex, 2) = Cells(rowIndex, 1).Value / 12\r\n                    row2.push( this.props.parameter.F8\r\n                        * Math.pow((30 * row2[0] / (4 + 0.85 * 30 * row2[0])), 0.5) );\r\n                    // Cells(rowIndex, 3) = Sheets(\"Input\").Range(\"F8\").Value * ((30 * Cells(rowIndex, 1).Value / (4 + 0.85 * 30 * Cells(rowIndex, 1).Value))) ^ 0.5\r\n                    row2.push( 57000 / 7.5 * row2[2] / 1000 );\r\n                    // Cells(rowIndex, 4) = 57000 / 7.5 * Cells(rowIndex, 3) / 1000\r\n                    row2.push( +data[rowIndexStress-2][\"STR (T)\"] );\r\n                    // Cells(rowIndex, 5) = Sheets(\"Stress\").Cells(rowIndexStress, 38).Value\r\n                    row2.push( data[rowIndexStress-2][\"STR (E)\"] * row2[3] / 5000 );\r\n                    // Cells(rowIndex, 6) = Sheets(\"Stress\").Cells(rowIndexStress, 39).Value * Cells(rowIndex, 4) / 5000\r\n                    row2.push( row2[4] + row2[5] );\r\n                    // Cells(rowIndex, 7) = Cells(rowIndex, 5).Value + Cells(rowIndex, 6).Value\r\n                    row2.push( row2[6] / row2[2] );\r\n                    // Cells(rowIndex, 8) = Cells(rowIndex, 7).Value / Cells(rowIndex, 3).Value\r\n                    row2.push( 11800 * Math.pow(row2[7],fatigue(this.props.parameter.F19)) );\r\n                    // Cells(rowIndex, 9) = 11800 * Cells(rowIndex, 8).Value ^ fatigue(Sheets(\"Input\").Range(\"F19\").Value)\r\n                    row2.push( row1[9] );\r\n                    // Cells(rowIndex, 10) = Cells(rowIndex - 1, 10).Value\r\n                    row2.push( row2[9] / row2[8] );\r\n                    // Cells(rowIndex, 11) = Cells(rowIndex, 10).Value / Cells(rowIndex, 9).Value\r\n                    row2.push( row1[11] + row2[10] )\r\n                    // Cells(rowIndex, 12) = Cells(rowIndex - 1, 12).Value + Cells(rowIndex, 11).Value\r\n                    row2.push( 18.985 / (1 + 5 * Math.pow(row2[11],-1.1)) )\r\n                    // Cells(rowIndex, 13) = 18.985 / (1 + 5 * Cells(rowIndex, 12).Value ^ -1.1)\r\n                    if (rowIndexStress == 13)\r\n                        rowIndexStress = 1\r\n                    rows.push(row2);\r\n                    row1=row2;\r\n                }\r\n            }\r\n        }\r\n        this.setState({row1,rows,rowIndexStress})\r\n        function lane(n) {\r\n            if (n <= 2)\r\n                return 1;\r\n            else if (n >= 4)\r\n                return 0.6;\r\n            else\r\n                return 0.7;\r\n        }\r\n\r\n        function fatigue(k) {\r\n            if (k < 200)\r\n                return k * 0.0221 - 15.97;\r\n            else if (k < 300)\r\n                return k * 0.0164 - 14.83;\r\n            else if (k < 500)\r\n                return k * 0.0038 - 11.05;\r\n            else if (k < 1000)\r\n                return k * 0.00033 - 9.31;\r\n            else\r\n                return k * 0.00071 - 9.69;\r\n        }\r\n    };\r\n    parameterGraph = ()=>{\r\n        const width = this.state.width;\r\n        const height = this.state.height;\r\n        const rows = this.state.rows;\r\n        var dataset =[];\r\n        for (var i=0;i<rows.length;i++){\r\n            var obj={};\r\n            obj.x = rows[i][0];\r\n            obj.y = rows[i][12];\r\n            dataset.push(obj);\r\n        }\r\n        var xScale = d3.scaleLinear()\r\n            .domain([0, d3.max(dataset, function(d){ return d.x; })])\r\n            .range([0, width]);\r\n        var yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(dataset, function(d){ return d.y; })])\r\n            .range([height, 0]);\r\n        var xAxis = d3.axisBottom(xScale)\r\n            .tickSizeInner(-height)\r\n            .tickSizeOuter(0)\r\n            .tickPadding(10);\r\n\r\n        var yAxis = d3.axisLeft(yScale)\r\n            .tickSizeInner(-width)\r\n            .tickSizeOuter(0)\r\n            .tickPadding(10);\r\n\r\n        var line = d3.line()\r\n            .x(function(d) { return xScale(d.x); })\r\n            .y(function(d) { return yScale(d.y); });\r\n\r\n        this.setState({xScale,yScale,xAxis,yAxis,line,dataset});\r\n    }\r\n\r\n    tableCreate = ()=>{\r\n\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (   (this.state.rows.length&&this.state.dataset)?<Grid container alignItems=\"center\" direction={\"column\"} spacing={1}>\r\n            <Grid item xs={11}>\r\n            <svg ref=\"svg\"\r\n            width={this.state.width+this.state.margin.left+this.state.margin.right}\r\n            height={this.state.height+this.state.margin.top+this.state.margin.bottom}>\r\n            <g className=\"content\" transform={\"translate(\" + this.state.margin.left + \",\" + this.state.margin.top + \")\"}>\r\n                <text className=\"xAxisText\" style={{\"textAnchor\":\"middle\",\"textShadow\":\"1px 1px 0 rgba(200, 200, 200, 0.7\"}}\r\n                fontFamily=\"sans-serif\" fontSize=\"16px\" x={this.state.width/2} y ={this.state.height+40}>Age (months)</text>\r\n                <text className=\"YAxisText\"\r\n                      transform={\"translate(\"+(-50)+\",\"+this.state.height/2+\")\"+\" rotate(-90)\"}\r\n                      style={{\"textAnchor\": \"middle\", \"textShadow\": \"1px 1px 0 rgba(200, 200, 200, 0.7\"}}\r\n                      fontFamily=\"sans-serif\" fontSize=\"16px\">Number of Punchouts per Mile\r\n                </text>\r\n                <g className=\"xaxis\" transform={\"translate(0,\" + this.state.height + \")\"}></g>\r\n                <g className=\"yaxis\"></g>\r\n                <path className=\"line\" d={this.state.line(this.state.dataset)}/>\r\n                {this.state.dataset.map(d=><circle className=\"point\" r={4} cx={this.state.xScale(d.x)}\r\n                                        cy={this.state.yScale(d.y)} fill={this.colorGreenRed(d.y)}\r\n                strokeWidth={0.5} stroke={\"#000\"}></circle>)}\r\n            </g>\r\n        </svg></Grid><Grid item xs={11}><Tabledata parameter={this.props.parameter} colorgreenred={this.colorGreenRed} rows={this.state.rows}/></Grid></Grid>:'');\r\n    }\r\n}\r\nexport default withStyles(styles) (Graph);\r\n","import React,{ Component } from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Slider,Typography,Button,Paper,Grid,Stepper,Step,StepLabel,StepContent,TextField,Container} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Graph from './Graph'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\n\r\nconst districts = [\"montgomery\", \"waller\", \"dallas\", \"bowie\", \"cass\", \"tarrant\", \"orange\", \"el paso\", \"hudspeth\", \"wheeler\", \"cooke\", \"wichita\", \"montague\", \"oldham\", \"hopkins\", \"gonzales\", \"hale\", \"lubbock\", \"hill\", \"mclennan\", \"gray-carson\", \"randall\", \"harrison\", \"panola\", \"travis\", \"chambers\", \"jefferson\", \"liberty\", \"hardin\", \"newton\", \"hardin,jefferson\", \"brazos\", \"freestone\", \"walker\", \"denton\", \"ellis\", \"navarro\", \"rockwall\", \"kaufman\", \"collin\", \"dallas,navarro\", \"dallas,tarrant\", \"dallas,rockwall\", \"collin,grayson\", \"erath\", \"tarrant,johnson\", \"harris\", \"galveston\", \"brazoria\", \"fort bend\", \"shelby\", \"houston\", \"angelina\", \"webb\", \"grayson\", \"lamar\", \"bexar\", \"bandera\", \"tom green\", \"edwards\", \"henderson\", \"gregg\", \"smith\", \"van zandt\", \"rusk\", \"bell\", \"wilbarger\", \"clay\", \"fayette\"];\r\nconst counties= [\"Houston\", \"Dallas\", \"Atlanta\", \"Ft Worth\", \"Beaumont\", \"El Paso\", \"Childress\", \"Wichita Falls\", \"Amarillo\", \"Paris\", \"Yoakum\", \"Lubbock\", \"Waco\", \"Abilene\", \"Austin\", \"Bryan\", \"Ft. Worth\", \"Laredo\", \"Lufkin\", \"Odessa\", \"San Antonio\", \"San Angelo\", \"Tayler\", \"Tyler\", \"Waco \"];\r\n\r\n\r\nconst styles = theme=> ({\r\n    root: {\r\n        width:'100%',\r\n        '& .MuiTextField-root': {\r\n            width: '100%',\r\n        },\r\n        '& input': {\r\n            width: '100%',\r\n        },\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    dot:{\r\n        borderBottom:'3px dotted',\r\n        marginBottom:'4px'\r\n    }\r\n});\r\n\r\nclass CRCP extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            activeStep:0,\r\n            stepsLength:3,\r\n            finished: false,\r\n            C18:30,\r\n            C19:10,\r\n            C24:2,\r\n            C25:100,\r\n            F7:14,\r\n            F8:570,\r\n            F16:6,\r\n            F17:400,\r\n            F19:539\r\n        }\r\n    }\r\n    handleNext = () => {\r\n        this.setState({activeStep:this.state.activeStep+1});\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.setState({activeStep:this.state.activeStep-1});\r\n    };\r\n\r\n    handleReset = () => {\r\n        this.setState({activeStep:0});\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n        const getGroupControl=()=>{\r\n            return <div className={classes.actionsContainer}>\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={this.props.toMenu}\r\n                        className={classes.button}\r\n                        startIcon={<HomeIcon/>}\r\n                    >\r\n                        To Main Menu\r\n                    </Button>\r\n                    <Button\r\n                        disabled={this.state.activeStep === 0}\r\n                        onClick={this.handleBack}\r\n                        className={classes.button}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleNext}\r\n                        className={classes.button}\r\n                    >\r\n                        {this.state.activeStep === this.state.stepsLength - 1 ? 'Finish' : 'Next'}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        }\r\n        if ((this.state.activeStep === this.state.stepsLength)&& !this.state.finished)\r\n            this.setState({finished:true})\r\n        return (   <Container maxWidth=\"lg\"> <Paper elevation={3}>\r\n            <Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\r\n                <Step>\r\n                    <StepLabel>Step 1</StepLabel>\r\n                    <StepContent>\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid container item xs={6} spacing={1} justify=\"center\">\r\n                                    <Grid item xs={6} justify=\"flex-start\">\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"deisgnNo\"\r\n                                            label=\"Design No\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Autocomplete\r\n                                            margin=\"dense\"\r\n                                            id=\"district\"\r\n                                            options={districts}\r\n                                            size=\"small\"\r\n                                            style={{marginTop:8,marginBottom:4}}\r\n                                            renderInput={(params) => <TextField dense {...params} label=\"DISTRICT\" variant=\"filled\" />}/>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n    margin=\"dense\"\r\n    id=\"highway\"\r\n                                            label=\"HIGHWAY\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Autocomplete\r\n                                            margin=\"dense\"\r\n                                            id=\"county\"\r\n                                            options={counties}\r\n                                            size=\"small\"\r\n                                            style={{marginTop:8,marginBottom:4}}\r\n                                            renderInput={(params) => <TextField dense {...params} label=\"COUNTY\" variant=\"filled\" />}/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={6} spacing={1}>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n    margin=\"dense\"\r\n    id=\"control\"\r\n                                            label=\"CONTROL\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n    margin=\"dense\"\r\n    id=\"date\"\r\n                                            label=\"DATE\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n    margin=\"dense\"\r\n    id=\"section\"\r\n                                            label=\"SECTION\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n    margin=\"dense\"\r\n    id=\"job\"\r\n                                            label=\"JOB\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1}>\r\n                                <TextField\r\n                                    id=\"comment\"\r\n                                    label=\"COMMENTS\"\r\n                                    multiline\r\n                                    rows={4}\r\n                                    defaultValue=\"\"\r\n                                    variant=\"filled\"\r\n                                />\r\n                            </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                        {getGroupControl()}\r\n                    </StepContent>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel>Step 2</StepLabel>\r\n                    <StepContent>\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Basic design information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} spacing={1} justify=\"center\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Design life (years)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Slider\r\n                                                value={this.state.C18}\r\n                                                onChange={(event, newValue) => this.setState({C18:newValue})}\r\n                                                defaultValue={30}\r\n                                                min={1} max={100}\r\n                                                id=\"C18\"\r\n                                                valueLabelDisplay=\"auto\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Number of punchouts per Mile</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Slider\r\n                                                value={this.state.C19}\r\n                                                onChange={(event, newValue) => this.setState({C19:newValue})}\r\n                                                id=\"C19\"\r\n                                                defaultValue={10}\r\n                                                min={1} max={100}\r\n                                                valueLabelDisplay=\"auto\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Total number of lanes in one direction</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Slider\r\n                                                value={this.state.C24}\r\n                                                onChange={(event, newValue) => this.setState({C24:newValue})}\r\n                                                defaultValue={2}\r\n                                                min={1} max={10}\r\n                                                id=\"C24\"\r\n                                                valueLabelDisplay=\"auto\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Total design traffic in one direction (million ESAL)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Slider\r\n                                                value={this.state.C25}\r\n                                                onChange={(event, newValue) => this.setState({C25:newValue})}\r\n                                                defaultValue={100}\r\n                                                min={10} max={1000}\r\n                                                id=\"C25\"\r\n                                                valueLabelDisplay=\"auto\"\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Structural design criteria</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} spacing={1} justify=\"center\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Acceptable number of punchouts per mile</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input/>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Concrete material information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} spacing={1} justify=\"center\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Thickness of Concrete Layer (in.)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Slider\r\n                                                value={this.state.F7}\r\n                                                onChange={(event, newValue) => this.setState({F7:newValue})}\r\n                                                defaultValue={14}\r\n                                                min={2} max={16}\r\n                                                id=\"F7\"\r\n                                                valueLabelDisplay=\"auto\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Number of punchouts per Mile</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Slider\r\n                                                value={this.state.F8}\r\n                                                onChange={(event, newValue) => this.setState({F8:newValue})}\r\n                                                id=\"F8\"\r\n                                                defaultValue={570}\r\n                                                min={1} max={1000}\r\n                                                valueLabelDisplay=\"auto\"\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                        {getGroupControl()}\r\n                    </StepContent>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel>Step 3</StepLabel>\r\n                    <StepContent>\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Base layer information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} spacing={1} justify=\"center\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Base type</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input/>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Base layer thickness (inches)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Modulus of base layer (ksi)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input/>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Subgrade layer information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} spacing={1} justify=\"center\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Soil classification system</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input/>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Soil classification of subgrade</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input type=\"number\" id=\"16\" value={this.state.F16} onChange={(event, newValue) => this.setState({F16:newValue})}/>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Modulus of Base Layer (ksi)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input type=\"number\" id=\"17\" value={this.state.F17} onChange={(event, newValue) => this.setState({F17:newValue})}/>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Composite K (psi/in.)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <input type=\"number\" id=\"19\" value={this.state.F19} onChange={(event, newValue) => this.setState({F19:newValue})}/>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                        {getGroupControl()}\r\n                    </StepContent>\r\n                </Step>\r\n            </Stepper>\r\n            {this.state.activeStep === this.state.stepsLength && (\r\n                <>\r\n                    <Paper square elevation={0} className={classes.resetContainer}>\r\n                        <Typography>All steps completed - you&apos;re finished</Typography>\r\n                        <Button onClick={this.handleReset} className={classes.button}>\r\n                            Reset\r\n                        </Button>\r\n                    </Paper>\r\n                </>\r\n            )}\r\n            {this.state.finished ?  <Graph\r\n                init = {this.state.activeStep === this.state.stepsLength}\r\n                parameter={{C18:this.state.C18, C19:this.state.C19, C24:this.state.C24,\r\n                C25:this.state.C25, F7:this.state.F7,F8:this.state.F8,F16:this.state.F16,F17:this.state.F17,F19:this.state.F19}}/>:''}\r\n        </Paper></Container>);\r\n    }\r\n}\r\nexport default withStyles(styles) (CRCP);\r\n","import React from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {AppBar,IconButton,Typography,Button,Toolbar,Grid,Slide} from '@material-ui/core';\nimport coverPic from './image/cover.jpg';\nimport CRCP from './component/CRCP'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  titleNav: {\n    flexGrow: 1,\n  },\n  title: {\n    color: 'white'\n  },\n  cover: {\n    width:'100%',\n    position:'fixed',\n    background: `linear-gradient(0deg,rgba(0,0,0,0) 0,#000 100%), url(${coverPic}) no-repeat center center fixed`,\n    backgroundSize: 'cover',\n    height: '100vh',\n    overflow: 'hidden',\n    zIndex: -1\n  },\n}));\n\nfunction App() {\n  const [page, setPage] = React.useState('home');\n  const classes = useStyles();\n  return (\n    <div >\n      <div className={classes.cover}></div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.titleNav}>\n            TxCRCP-ME\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.root}>\n        <Slide direction=\"up\" in={page==='home'} mountOnEnter unmountOnExit>\n          <Grid container spacing={5} alignItems=\"center\" justify=\"center\" direction={\"column\"} style={{height: 'calc(100vh - 64px)',width:'100%'}}>\n            <Grid item>\n              <Typography variant=\"h3\" className={classes.title}>\n                TxDOT Mechanistic-Empirical CRCP Design System\n              </Typography>\n            </Grid>\n            <Grid container item alignItems=\"stretch\" justify=\"center\" direction={\"column\"} spacing={3} style={{width:'fit-content'}}>\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\" style={{width:'100%'}} onClick={()=>setPage('CRCP')}>CRCP Design</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" style={{width:'100%'}}>Slab Support</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" style={{width:'100%'}}>Product Disclaimer</Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Slide>\n        <Slide direction=\"up\" in={page==='CRCP'} mountOnEnter unmountOnExit>\n          <CRCP\n              toMenu={()=>setPage('home')}\n          />\n        </Slide>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}