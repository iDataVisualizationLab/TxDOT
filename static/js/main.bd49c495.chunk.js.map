{"version":3,"sources":["image/cover.jpg","component/tableData.js","component/data/stress.csv","component/Graph.js","image/District.png","image/County.png","image/TotalDesign Traffic.png","image/StructureDesignCriteria.png","image/AcceptableNumberofPunchout.png","image/ConcreteLayer.png","image/soilSystermPic.png","image/subbase.png","component/report.js","component/CRCP.js","App.js","reportWebVitals.js","index.js"],"names":["Tabledata","props","titles","state","visible","r","parameter","DesignLife","AnalysisPunchouts","rows","prevProps","this","minArray","maxArray","j","length","push","i","colorRedBlues","colorScale","d3","domain","range","color","colorgreenred","id","type","disabled","style","textAlign","fontSize","fontWeight","value","parseFloat","toFixed","size","onChange","event","setState","target","checked","for","width","display","border","backgroundColor","map","t","c","paddingRight","paddingTop","paddingBottom","indexOf","Component","Graph","colorGreenRed","tip","d3tip","attr","offset","html","d","y","x","init","recompute","n","data","rowIndexStress","row1","ModulusOfRupture","Math","pow","fatigue","CompositeK","LanesOneDirection","TrafficOneDirection","row2","k","parameterGraph","height","dataset","obj","xScale","yScale","xAxis","tickSizeInner","tickSizeOuter","tickPadding","yAxis","line","tableCreate","margin","top","right","bottom","left","stress","then","data_","refs","svg","select","selectAll","call","classes","Grid","container","alignItems","direction","spacing","item","xs","ref","className","transform","fontFamily","cx","cy","fill","strokeWidth","stroke","withStyles","theme","root","Report","CRCP","BondBreaker","Base","Subbase","NaturalSoil","Paper","justify","toMenu","Button","variant","onClick","button","startIcon","toCRCP","window","print","Typography","header","subHeader","District","County","Highway","CSJ","ProjectScope","StationBegin","StationEnd","PunchoutsPerMile","SoilClassificationSystem","SoilSub","PlasticityIndex","SubbaseType","SubbaseThickness","BaseType","BaseThickness","ModulusBase","ElasticModulue","alignContent","underline","AnalysisSlabThickness","minHeight","layerHolder","flexGrow","padding","marginTop","marginRight","borderBottom","paddingLeft","districts","counties","Object","keys","forEach","key","highway","soilClassSub","styles","actionsContainer","marginBottom","resetContainer","dot","helpHolder","inputWithHelper","pointerEvents","closeButton","position","palette","grey","DialogTitle","children","onClose","other","disableTypography","IconButton","aria-label","errorFunc","Step3","SubbaseThicknessThreshHold","BaseThicknessMin","handleNext","activeStep","handleBack","handleReset","finished","handleOpenHelper","content","helperEl","el","currentTarget","handleCloseHelper","undefined","handleBlurSliderInput","min","max","handleChangeSliderInput","Number","handleChange","handleSoilSub","baseTypeOpt","handleBaseType","handlePlasticityIndex","SubbaseTypeOpt","stepsLength","currentDistricts","currentCounties","getGroupControl","Container","maxWidth","elevation","Stepper","orientation","Step","StepLabel","StepContent","displayPrint","noValidate","autoComplete","sm","md","Autocomplete","options","reason","renderInput","params","TextField","dense","label","onMouseEnter","src","DistrictPic","onMouseLeave","CountyPic","freeSolo","DirectionOfConstruction","Control","Section","Job","text","MenuItem","Date","InputLabelProps","shrink","multiline","defaultValue","lg","Slider","newValue","Hidden","smDown","Input","onBlur","inputProps","xm","TrafficOneDirectionPic","StructureDesignCriteriaPic","AcceptableNumberofPunchoutPic","ConcreteLayerPic","soilSystermPic","subbasePic","error","helperText","square","openAnalytics","Popper","placement","disablePortal","open","anchorEl","modifiers","flip","enabled","preventOverflow","boundariesElement","arrow","zIndex","minWidth","Dialog","fullWidth","DialogContent","useStyles","makeStyles","menuButton","titleNav","title","cover","background","coverPic","backgroundSize","overflow","App","React","useState","page","setPage","setAnalysisPunchouts","AppBar","Toolbar","Slide","in","mountOnEnter","unmountOnExit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd49c495.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cover.43610a00.jpg\";","import React,{ Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\nclass Tabledata  extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible:false\r\n        }\r\n        var r = 12 * this.props.parameter.DesignLife - 1;\r\n        this.props.AnalysisPunchouts(this.props.rows[r][12]);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.rows!==prevProps.rows){\r\n            const rows = this.props.rows;\r\n            var minArray = [];\r\n            var maxArray = [];\r\n            for (var j=0; j<rows[0].length; j++){\r\n                minArray.push(1000000000);\r\n                maxArray.push(0);\r\n            }\r\n            for (var i=0;i<rows.length;i++){\r\n                for (var j=0;j<rows[i].length;j++){\r\n                    if (rows[i][j]>maxArray[j])\r\n                        maxArray[j] = rows[i][j];\r\n                    if (rows[i][j]<minArray[j])\r\n                        minArray[j] = rows[i][j];\r\n                }\r\n            }\r\n            this.colorRedBlues = [];\r\n            for (var j=0; j<rows[0].length; j++){\r\n                var colorScale = d3.scaleLinear()\r\n                    .domain([minArray[j], (minArray[j]+maxArray[j])/2, maxArray[j]])\r\n                    .range([\"#55f\", \"white\", \"#f55\"]);\r\n                this.colorRedBlues.push(colorScale);\r\n            }\r\n            var r = 12 * this.props.parameter.DesignLife - 1;\r\n            this.props.AnalysisPunchouts(this.props.rows[r][12]);\r\n        }\r\n    }\r\n    titles = [\"Age (Month)\",\"Age (Year)\", \"Modulus of Rupture (psi)\",\"Modulus of Elasticity (ksi)\"\r\n        ,\"Concrete Stress (T) (psi)\"\r\n        ,\"Concrete Stress (E) (psi)\"\r\n        ,\"Total Concrete Stress (psi)\"\r\n        ,\"Stress to Strength Ratio (psi/psi)\"\r\n        ,\"Number of Load Repetitions to Failure\"\r\n        ,\"Number of Load Repetitions\"\r\n        ,\"Pavement Damage\"\r\n        ,\"Cumulative Damage\"\r\n        ,\"Number of Punchouts per Mile\"]\r\n    render() {\r\n        var r = 12 * this.props.parameter.DesignLife - 1;\r\n        if (this.colorRedBlues&&this.props.rows[r]) {\r\n            var color = this.props.colorgreenred(this.props.rows[r][12]);\r\n            return (<div>\r\n                <div id=\"div_CRCP_PERFORMANCE\"><b>CRCP PERFORMANCE</b><br/>\r\n                    Number of Punchouts per Mile:<input type=\"TEXT\" disabled style={{\r\n                        \"background-color\": color,\r\n                        textAlign: \"center\",\r\n                        fontSize: 17,\r\n                        fontWeight: \"bold\"\r\n                    }} value={parseFloat(this.props.rows[r][12]).toFixed(2)} size=\"7\"/><br/><br/>\r\n                </div>\r\n                <div id=\"divCheckbox1\"><input type=\"checkbox\" id=\"checkbox1\"\r\n                                              onChange={(event) => this.setState({visible: event.target.checked})}/>\r\n                    <label for=\"checkbox1\"> Analysis Result </label></div>\r\n                <table style={{width: '99%', fontSize: '12px', display: this.state.visible ? 'table' : 'none'}}\r\n                       border=\"1\" id=\"analysisTable\">\r\n                    <tr style={{backgroundColor: \"#888\"}}>\r\n                        {this.titles.map(t => <td>{t}</td>)}\r\n                    </tr>\r\n                    {this.props.rows.map(r => <tr>{r.map((c, j) => <td style={{\r\n                        textAlign: 'right',\r\n                        backgroundColor: (j === 12) ? this.props.colorgreenred(c) : this.colorRedBlues[j](c),\r\n                        paddingRight: '10px',\r\n                        paddingTop: '0px',\r\n                        paddingBottom: '0px'\r\n                    }}>\r\n                        {([1, 2, 3, 12, 8, 9, 5, 6, 7, 10, 11].indexOf(j) !== -1) ? parseFloat(c).toFixed((j == 1 || j == 12) ? 2 : ((j == 2 || j == 3 || j == 8 || j == 9) ? 0 : ((j == 5 || j == 6) ? 1 : ((j == 7) ? 3 : 4)))) : c}\r\n                    </td>)}</tr>)}\r\n                </table>\r\n            </div>)\r\n        }else\r\n            return ''\r\n    }\r\n}\r\n\r\nexport default Tabledata;\r\n","export default __webpack_public_path__ + \"static/media/stress.d2ebc577.csv\";","import React,{ Component } from 'react';\r\nimport './Graph.css';\r\nimport Tabledata from './tableData';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Grid,Typography,Button,Paper,Stepper,Step,StepLabel,StepContent,TextField,Container} from '@material-ui/core';\r\nimport * as d3 from 'd3';\r\nimport { tip as d3tip } from \"d3-v6-tip\";\r\nimport stress from './data/stress.csv'\r\n\r\nconst styles = theme=> ({\r\n    root: {\r\n        width:'100%',\r\n        '& .MuiTextField-root': {\r\n            width: '100%',\r\n        },\r\n        '& input': {\r\n            width: '100%',\r\n        },\r\n    }\r\n});\r\n\r\nclass Graph extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        const margin = {top: 20, right: 80, bottom: 60, left: 120},\r\n            width = 900 - margin.left - margin.right,\r\n            height = 400 - margin.top - margin.bottom;\r\n\r\n        this.state={\r\n            margin,\r\n            width,\r\n            height,\r\n            row1:[],\r\n            rows:[],\r\n            init:true\r\n        }\r\n    }\r\n    colorGreenRed = d3.scaleLinear()\r\n        .domain([0, 25])\r\n        .range([\"#0f0\", \"#f00\"]);\r\n    tip = d3tip()\r\n        .attr('class', 'd3-tip')\r\n        .offset([-10, 0])\r\n        .html((d) =>{\r\n            var color =  this.colorGreenRed(d.y);\r\n            var html = \"#Punchouts per Mile: <span style='color:\"+color+\"; font-weight: bold'>\" + parseFloat(d.y).toFixed(2) + \"</span><br>\";\r\n            html += \"&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; Age (months):  <span style='color:white; font-weight: bold'>\" + d.x + \"</span>\";\r\n            return html;\r\n        });\r\n    componentDidMount() {\r\n        d3.tsv(stress).then(data_=>{\r\n            this.setState({data: data_});\r\n            this.recompute();\r\n            this.tableCreate();\r\n            this.parameterGraph();\r\n        });\r\n    }\r\n    init = true;\r\n    componentDidUpdate(prevProps) {\r\n        const init = ((this.props.init !== prevProps.init)&&this.props.init);\r\n        // console.log('-------------------------',init)\r\n        this.init = init||this.init;\r\n        // console.log('-------------------------this',this.init)\r\n        if ((this.props.parameter !== prevProps.parameter) ||this.init) {\r\n            this.recompute();\r\n            this.parameterGraph();\r\n            if (this.state.data && this.refs.svg && this.state.xAxis && this.state.yAxis) {\r\n                const svg = d3.select(this.refs.svg).select('g.content');\r\n                svg.selectAll(\".xaxis\")\r\n                    .attr(\"transform\", \"translate(0,\" + this.state.height + \")\")\r\n                    .call(this.state.xAxis);\r\n                svg.selectAll(\".yaxis\")\r\n                    .call(this.state.yAxis);\r\n                if (this.init&&this.state.dataset.length){\r\n                //     debugger\r\n                //     svg.selectAll(\".point\")\r\n                //         .data(this.state.dataset).enter()\r\n                //         .append(\"circle\")\r\n                //         .attr(\"class\", \"point\")\r\n                //         .attr(\"r\", 4)\r\n                //         .attr(\"cx\", (d)=>this.state.xScale(d.x))\r\n                //         .attr(\"cy\", (d)=> this.state.yScale(d.y))\r\n                //         .attr(\"fill\", (d)=> this.colorGreenRed(d.y))\r\n                //         .attr(\"stroke-width\", 0.5)\r\n                //         .attr(\"stroke\",\"#000\")\r\n                //         .on('mouseover', this.tip.show)\r\n                //         .on('mouseout', this.tip.hide)\r\n                //     svg.call(this.tip)\r\n                    this.init = false;}\r\n                // }else{\r\n                //     svg.selectAll(\".point\")\r\n                //         .data(this.state.dataset)\r\n                //         .attr(\"cx\", (d)=> this.state.xScale(d.x))\r\n                //         .attr(\"cy\", (d,i)=>this.state.yScale(d.y))\r\n                //         .attr(\"fill\", (d)=> this.colorGreenRed(d.y));\r\n                // }\r\n            }\r\n        }\r\n    }\r\n    recompute = ()=>{\r\n        const data = this.state.data;\r\n        let rowIndexStress = 9;\r\n        let row1 = [];\r\n        const rows = [];\r\ndebugger\r\n        row1.push( 1 );\r\n        row1.push( row1[0]/ 12 );\r\n        row1.push( this.props.parameter.ModulusOfRupture);\r\n        row1.push( 57000 / 7.5 * row1[2] / 1000 );\r\n        row1.push( +data[rowIndexStress-2][\"STR (T)\"] );\r\n        row1.push( data[rowIndexStress-2][\"STR (E)\"] * row1[3] / 5000 )\r\n        row1.push( row1[4] + row1[5] )\r\n        row1.push( row1[6] / row1[2] )\r\n        row1.push( 11800 * Math.pow(row1[7],fatigue(this.props.parameter.CompositeK) ))\r\n        row1.push( lane(this.props.parameter.LanesOneDirection)\r\n            * this.props.parameter.TrafficOneDirection * 1000000 / 12 / this.props.parameter.DesignLife )\r\n        row1.push( row1[9] / row1[8] )\r\n        row1.push( row1[10] )\r\n        row1.push( 18.985 / (1 + 5 * Math.pow(row1[11],-1.1)) )\r\n        rows.push(row1);    // Add to the array\r\n\r\n        //console.log(+document.getElementById(\"DesignLife\").value);\r\n        for (var i=0; i<this.props.parameter.DesignLife;i++){\r\n            //debugger;\r\n            if (i!=0)\r\n                rowIndexStress = 8;\r\n            for (var j=0;j<12; j++){\r\n                if (i==0 && j==0)\r\n                    ;\r\n                    //If counterYear = 1 And counterMonth = 1 Then\r\n                //      'If First Year than Omit Calculation of First Month, Already Done\r\n                else {\r\n                    rowIndexStress = rowIndexStress + 1\r\n                    let row2 = [];\r\n                    row2.push( row1[0] + 1 )\r\n                    row2.push( row2[0]/ 12 );\r\n                    // Cells(rowIndex, 2) = Cells(rowIndex, 1).Value / 12\r\n                    row2.push( this.props.parameter.ModulusOfRupture\r\n                        * Math.pow((30 * row2[0] / (4 + 0.85 * 30 * row2[0])), 0.5) );\r\n                    // Cells(rowIndex, 3) = Sheets(\"Input\").Range(\"F8\").Value * ((30 * Cells(rowIndex, 1).Value / (4 + 0.85 * 30 * Cells(rowIndex, 1).Value))) ^ 0.5\r\n                    row2.push( 57000 / 7.5 * row2[2] / 1000 );\r\n                    // Cells(rowIndex, 4) = 57000 / 7.5 * Cells(rowIndex, 3) / 1000\r\n                    row2.push( +data[rowIndexStress-2][\"STR (T)\"] );\r\n                    // Cells(rowIndex, 5) = Sheets(\"Stress\").Cells(rowIndexStress, 38).Value\r\n                    row2.push( data[rowIndexStress-2][\"STR (E)\"] * row2[3] / 5000 );\r\n                    // Cells(rowIndex, 6) = Sheets(\"Stress\").Cells(rowIndexStress, 39).Value * Cells(rowIndex, 4) / 5000\r\n                    row2.push( row2[4] + row2[5] );\r\n                    // Cells(rowIndex, 7) = Cells(rowIndex, 5).Value + Cells(rowIndex, 6).Value\r\n                    row2.push( row2[6] / row2[2] );\r\n                    // Cells(rowIndex, 8) = Cells(rowIndex, 7).Value / Cells(rowIndex, 3).Value\r\n                    row2.push( 11800 * Math.pow(row2[7],fatigue(this.props.parameter.CompositeK)) );\r\n                    // Cells(rowIndex, 9) = 11800 * Cells(rowIndex, 8).Value ^ fatigue(Sheets(\"Input\").Range(\"CompositeK\").Value)\r\n                    row2.push( row1[9] );\r\n                    // Cells(rowIndex, 10) = Cells(rowIndex - 1, 10).Value\r\n                    row2.push( row2[9] / row2[8] );\r\n                    // Cells(rowIndex, 11) = Cells(rowIndex, 10).Value / Cells(rowIndex, 9).Value\r\n                    row2.push( row1[11] + row2[10] )\r\n                    // Cells(rowIndex, 12) = Cells(rowIndex - 1, 12).Value + Cells(rowIndex, 11).Value\r\n                    row2.push( 18.985 / (1 + 5 * Math.pow(row2[11],-1.1)) )\r\n                    // Cells(rowIndex, 13) = 18.985 / (1 + 5 * Cells(rowIndex, 12).Value ^ -1.1)\r\n                    if (rowIndexStress == 13)\r\n                        rowIndexStress = 1\r\n                    rows.push(row2);\r\n                    row1=row2;\r\n                }\r\n            }\r\n        }\r\n        this.setState({row1,rows,rowIndexStress})\r\n        function lane(n) {\r\n            if (n <= 2)\r\n                return 1;\r\n            else if (n >= 4)\r\n                return 0.6;\r\n            else\r\n                return 0.7;\r\n        }\r\n\r\n        function fatigue(k) {\r\n            if (k < 200)\r\n                return k * 0.0221 - 15.97;\r\n            else if (k < 300)\r\n                return k * 0.0164 - 14.83;\r\n            else if (k < 500)\r\n                return k * 0.0038 - 11.05;\r\n            else if (k < 1000)\r\n                return k * 0.00033 - 9.31;\r\n            else\r\n                return k * 0.00071 - 9.69;\r\n        }\r\n    };\r\n    parameterGraph = ()=>{\r\n        const width = this.state.width;\r\n        const height = this.state.height;\r\n        const rows = this.state.rows;\r\n        var dataset =[];\r\n        for (var i=0;i<rows.length;i++){\r\n            var obj={};\r\n            obj.x = rows[i][0];\r\n            obj.y = rows[i][12];\r\n            dataset.push(obj);\r\n        }\r\n        var xScale = d3.scaleLinear()\r\n            .domain([0, d3.max(dataset, function(d){ return d.x; })])\r\n            .range([0, width]);\r\n        var yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(dataset, function(d){ return d.y; })])\r\n            .range([height, 0]);\r\n        var xAxis = d3.axisBottom(xScale)\r\n            .tickSizeInner(-height)\r\n            .tickSizeOuter(0)\r\n            .tickPadding(10);\r\n\r\n        var yAxis = d3.axisLeft(yScale)\r\n            .tickSizeInner(-width)\r\n            .tickSizeOuter(0)\r\n            .tickPadding(10);\r\n\r\n        var line = d3.line()\r\n            .x(function(d) { return xScale(d.x); })\r\n            .y(function(d) { return yScale(d.y); });\r\n\r\n        this.setState({xScale,yScale,xAxis,yAxis,line,dataset});\r\n    }\r\n\r\n    tableCreate = ()=>{\r\n\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (   (this.state.rows.length&&this.state.dataset)?<Grid container alignItems=\"center\" direction={\"column\"} spacing={1}>\r\n            <Grid item xs={11}>\r\n            <svg ref=\"svg\"\r\n            width={this.state.width+this.state.margin.left+this.state.margin.right}\r\n            height={this.state.height+this.state.margin.top+this.state.margin.bottom}>\r\n            <g className=\"content\" transform={\"translate(\" + this.state.margin.left + \",\" + this.state.margin.top + \")\"}>\r\n                <text className=\"xAxisText\" style={{\"textAnchor\":\"middle\",\"textShadow\":\"1px 1px 0 rgba(200, 200, 200, 0.7\"}}\r\n                fontFamily=\"sans-serif\" fontSize=\"16px\" x={this.state.width/2} y ={this.state.height+40}>Age (months)</text>\r\n                <text className=\"YAxisText\"\r\n                      transform={\"translate(\"+(-50)+\",\"+this.state.height/2+\")\"+\" rotate(-90)\"}\r\n                      style={{\"textAnchor\": \"middle\", \"textShadow\": \"1px 1px 0 rgba(200, 200, 200, 0.7\"}}\r\n                      fontFamily=\"sans-serif\" fontSize=\"16px\">Number of Punchouts per Mile\r\n                </text>\r\n                <g className=\"xaxis\" transform={\"translate(0,\" + this.state.height + \")\"}></g>\r\n                <g className=\"yaxis\"></g>\r\n                <path className=\"line\" d={this.state.line(this.state.dataset)}/>\r\n                {this.state.dataset.map(d=><circle className=\"point\" r={4} cx={this.state.xScale(d.x)}\r\n                                        cy={this.state.yScale(d.y)} fill={this.colorGreenRed(d.y)}\r\n                strokeWidth={0.5} stroke={\"#000\"}></circle>)}\r\n            </g>\r\n        </svg></Grid><Grid item xs={11}><Tabledata AnalysisPunchouts={this.props.AnalysisPunchouts} parameter={this.props.parameter} colorgreenred={this.colorGreenRed} rows={this.state.rows}/></Grid></Grid>:'');\r\n    }\r\n}\r\nexport default withStyles(styles) (Graph);\r\n","export default __webpack_public_path__ + \"static/media/District.634c801c.png\";","export default __webpack_public_path__ + \"static/media/County.e9bed656.png\";","export default __webpack_public_path__ + \"static/media/TotalDesign Traffic.948031ff.png\";","export default __webpack_public_path__ + \"static/media/StructureDesignCriteria.4f123ed0.png\";","export default __webpack_public_path__ + \"static/media/AcceptableNumberofPunchout.f191431d.png\";","export default __webpack_public_path__ + \"static/media/ConcreteLayer.45d36da4.png\";","export default __webpack_public_path__ + \"static/media/soilSystermPic.c6e7e75d.png\";","export default __webpack_public_path__ + \"static/media/subbase.a3bc3c69.png\";","import React, {Component} from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        padding: theme.spacing(2)\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    underline: {\r\n        borderBottom: '1px solid black'\r\n    },\r\n    subHeader: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    layerHolder:{\r\n        '& div:first-child':{\r\n            paddingLeft: 10\r\n        }\r\n    }\r\n});\r\n\r\nclass Report extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            CRCP: 13,\r\n            BondBreaker: 1,\r\n            Base: 6,\r\n            Subbase: 12,\r\n            NaturalSoil: 6,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return <Paper>\r\n            <Grid container alignItems={\"start\"} justify={\"center\"}>\r\n                {this.props.toMenu ? <Grid item xs={12}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        onClick={this.props.toMenu}\r\n                        className={classes.button}\r\n                        startIcon={<HomeIcon/>}\r\n                    >\r\n                        To Main Menu\r\n                    </Button>\r\n                    <Button\r\n                        onClick={this.props.toCRCP}\r\n                        className={classes.button}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        startIcon={<PrintIcon/>}\r\n                        onClick={() => window.print()}\r\n                    >\r\n                        Print\r\n                    </Button>\r\n                </Grid> : ''}\r\n                <Grid container item xs={11} justify={\"start\"} className={[\"section-to-print\", classes.root]}>\r\n\r\n                    <Grid item xs={6} container justify=\"flex-start\"\r\n                          alignItems=\"flex-start\"\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h5'} className={classes.header}>INPUT DATA</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}>A. Project\r\n                                Identification</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            District\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.District}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            County\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.County}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Highway\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.Highway}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            CSJ\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.CSJ}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Project Scope\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ProjectScope}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Station (Begin)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.StationBegin}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Station (End)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.StationEnd}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> B. Design Parameters &\r\n                                Traffic</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Design Life (year)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.DesignLife}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Number of Punchouts per Mile\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.PunchoutsPerMile}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Total Number of Lanes in One Direction\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.LanesOneDirection}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Total Design Traffic in One Direction (million ESALs)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.TrafficOneDirection}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> C. Subgrade and Subbase Layer\r\n                                Information</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Soil Classification System\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SoilClassificationSystem}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Soil Classification of Subgrade\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SoilSub}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Plasticity Index (PI)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.PlasticityIndex}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Subbase Type\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SubbaseType}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Subbase Thickness (in.)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SubbaseThickness}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}>D. Base Layer\r\n                                Information</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Base Type\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.BaseType}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Base Thickness (in.)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.BaseThickness}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Modulus of Base Layer (ksi)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ModulusBase}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Composite K (psi/in.)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.CompositeK}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> E. Concrete Material\r\n                                Properties</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            28-Day Modulus of Rupture (psi)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ModulusOfRupture}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Elastic Modulus (million psi)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ElasticModulue}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={6} container justify=\"flex-start\"\r\n                          direction=\"row\"\r\n                          alignContent=\"flex-start\"\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h5'} className={classes.header}>INPUT DATA</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> F. Design Slab Thickness &\r\n                                Performance</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.underline}>\r\n                            Design Slab Thickness\r\n                        </Grid>\r\n                        <Grid item xs={4} className={classes.underline}>\r\n                            {this.props.AnalysisSlabThickness}\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.underline}>\r\n                            Number of Punchouts per Mile\r\n                        </Grid>\r\n                        <Grid item xs={4} className={classes.underline}>\r\n                            {this.props.AnalysisPunchouts ? this.props.AnalysisPunchouts.toFixed(2) : ''}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> G. Layer Information</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} container justify=\"center\" direction=\"column\" style={{minHeight: 500}}>\r\n                            <Grid className={classes.layerHolder} container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.state.CRCP, backgroundColor: '#F2F2F2'}}>\r\n                                <Grid xs item>CRCP</Grid>\r\n                                <Grid xs item>Thickness</Grid>\r\n                                <Grid xs item>{this.state.CRCP}''</Grid>\r\n                            </Grid>\r\n                           {this.props.data.BaseType==='CTB'?<Grid className={classes.layerHolder} container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.state.BondBreaker, backgroundColor: '#404040', color:'white'}}>\r\n                                <Grid xs item>Bond Breaker</Grid>\r\n                                <Grid xs item>Thickness</Grid>\r\n                                <Grid xs item>≥{this.state.BondBreaker}''</Grid>\r\n                            </Grid>:''}\r\n                            <Grid container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.props.data.BaseThickness, backgroundColor: '#D9D9D9'}}>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item>Base</Grid>\r\n                                    <Grid xs item>Type</Grid>\r\n                                    <Grid xs item>{this.props.data.BaseType}</Grid>\r\n                                </Grid>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item></Grid>\r\n                                    <Grid xs item>Thickness</Grid>\r\n                                    <Grid xs item>{this.props.data.BaseThickness}''</Grid>\r\n                                </Grid>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item></Grid>\r\n                                    <Grid xs item>Item 276</Grid>\r\n                                    <Grid xs item>Class L</Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.props.data.SubbaseThickness, backgroundColor: '#F2F2F2'}}>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item>Subbase</Grid>\r\n                                    <Grid xs item>Type</Grid>\r\n                                    <Grid xs item>{this.props.data.SubbaseType}</Grid>\r\n                                </Grid>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item></Grid>\r\n                                    <Grid xs item>Thickness</Grid>\r\n                                    <Grid xs item>{this.props.data.SubbaseThickness}''</Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.state.NaturalSoil, backgroundColor: '#FFC000'}}>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item>Natural Soil</Grid>\r\n                                    <Grid xs item>Type</Grid>\r\n                                    <Grid xs item>{this.props.data.SoilSub}</Grid>\r\n                                </Grid>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item></Grid>\r\n                                    <Grid xs item>PI</Grid>\r\n                                    <Grid xs item>{this.props.data.PlasticityIndex}</Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} container>\r\n                            <ul>\r\n                                <li>\"The minimum thickness for CRCP is 7 in., and the maximum thickness is 13 in.</li>\r\n                                <li>Use 13 in. for slab thicknesses greater than 13 in.</li>\r\n                                 <li>Districts should use 13-in. slab as a design slab thickness. Districts wanting to use thicker pavements should submit design greater than 13-in. to the district engineer for approval along with their justification for doing so.</li>\r\n                            </ul>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Report)\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Slider,\r\n    Typography,\r\n    Button,\r\n    Paper,\r\n    Grid,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    StepContent,\r\n    TextField,\r\n    Container,\r\n    Input,\r\n    Hidden\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Graph from './Graph'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport Image from 'material-ui-image';\r\nimport DistrictPic from '../././image/District.png';\r\nimport CountyPic from '../././image/County.png';\r\nimport TrafficOneDirectionPic from '../././image/TotalDesign Traffic.png';\r\nimport StructureDesignCriteriaPic from '../././image/StructureDesignCriteria.png';\r\nimport AcceptableNumberofPunchoutPic from '../././image/AcceptableNumberofPunchout.png';\r\nimport ConcreteLayerPic from '../././image/ConcreteLayer.png';\r\nimport soilSystermPic from '../././image/soilSystermPic.png';\r\nimport subbasePic from '../././image/subbase.png';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Report from \"./report\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nconst districts = {\r\n    \"ABILENE\": [\"BORDEN\", \"CALLAHAN\", \"FISHER\", \"HASKELL\", \"HOWARD\", \"JONES\", \"KENT\", \"MITCHELL\", \"NOLAN\", \"SCURRY\", \"SHACKELFORD\", \"STONEWALL\", \"TAYLOR\"],\r\n    \"AMARILLO\": [\"ARMSTRONG\", \"CARSON\", \"DALLAM\", \"DEAF SMITH\", \"GRAY\", \"HANSFORD\", \"HARTLEY\", \"HEMPHILL\", \"HUTCHINSON\", \"LIPSCOMB\", \"MOORE\", \"OCHILTREE\", \"OLDHAM\", \"POTTER\", \"RANDALL\", \"ROBERTS\", \"SHERMAN\"],\r\n    \"ATLANTA\": [\"BOWIE\", \"CAMP\", \"CASS\", \"HARRISON\", \"MARION\", \"MORRIS\", \"PANOLA\", \"TITUS\", \"UPSHUR\"],\r\n    \"AUSTIN\": [\"BASTROP\", \"BLANCO\", \"BURNET\", \"CALDWELL\", \"GILLESPIE\", \"HAYS\", \"LEE\", \"LLANO\", \"MASON\", \"TRAVIS\", \"WILLIAMSON\"],\r\n    \"BEAUMONT\": [\"CHAMBERS\", \"HARDIN\", \"JASPER\", \"JEFFERSON\", \"LIBERTY\", \"NEWTON\", \"ORANGE\", \"TYLER\"],\r\n    \"BRYAN\": [\"BRAZOS\", \"BURLESON\", \"FREESTONE\", \"GRIMES\", \"LEON\", \"MADISON\", \"MILAM\", \"ROBERTSON\", \"WALKER\", \"WASHINGTON\"],\r\n    \"BROWNWOOD\": [\"BROWN\", \"COLEMAN\", \"COMANCHE\", \"EASTLAND\", \"LAMPASAS\", \"MCCULLOCH\", \"MILLS\", \"SAN SABA\", \"STEPHENS\", \"BRISCOE\", \"CHILDRESS\", \"COLLINGSWORTH\", \"COTTLE\", \"DICKENS\", \"DONLEY\", \"FOARD\", \"HALL\", \"HARDEMAN\", \"KING\", \"KNOX\", \"MOTLEY\", \"WHEELER\"],\r\n    \"CORPUS CHRISTI\": [\"ARANSAS\", \"BEE\", \"GOLIAD\", \"JIM WELLS\", \"KARNES\", \"KLEBERG\", \"LIVE OAK\", \"NUECES\", \"REFUGIO\", \"SAN PATRICIO\"],\r\n    \"DALLAS\": [\"COLLIN\", \"DALLAS\", \"DENTON\", \"ELLIS\", \"KAUFMAN\", \"NAVARRO\", \"ROCKWALL\"],\r\n    \"EL PASO\": [\"BREWSTER\", \"CULBERSON\", \"EL PASO\", \"HUDSPETH\", \"JEFF DAVIS\", \"PRESIDIO\"],\r\n    \"FORT WORTH\": [\"ERATH\", \"HOOD\", \"JACK\", \"JOHNSON\", \"PALO PINTO\", \"PARKER\", \"SOMERVELL\", \"TARRANT\", \"WISE\"],\r\n    \"HOUSTON\": [\"BRAZORIA\", \"FORT BEND\", \"GALVESTON\", \"HARRIS\", \"MONTGOMERY\", \"WALLER\"],\r\n    \"LUBBOCK\": [\"BAILEY\", \"CASTRO\", \"COCHRAN\", \"CROSBY\", \"DAWSON\", \"FLOYD\", \"GAINES\", \"GARZA\", \"HALE\", \"HOCKLEY\", \"LAMB\", \"LUBBOCK\", \"LYNN\", \"PARMER\", \"SWISHER\", \"TERRY\", \"YOAKUM\"],\r\n    \"LUFKIN\": [\"ANGELINA\", \"HOUSTON\", \"NACOGDOCHES\", \"POLK\", \"SABINE\", \"SAN AUGUSTINE\", \"SAN JACINTO\", \"SHELBY\", \"TRINITY\"],\r\n    \"LAREDO\": [\"DIMMITT\", \"DUVAL\", \"KINNEY\", \"LA SALLE\", \"MAVERICK\", \"VAL VERDE\", \"WEBB\", \"ZAVALA\"],\r\n    \"ODESA\": [\"ANDREWS\", \"CRANE\", \"ECTOR\", \"LOVING\", \"MARTIN\", \"MIDLAND\", \"PECOS\", \"REEVES\", \"TERRELL\", \"UPTON\", \"WARD\", \"WINKLER\"],\r\n    \"PARIS\": [\"DELTA\", \"FANNIN\", \"FRANKLIN\", \"GRAYSON\", \"HOPKINS\", \"HUNT\", \"LAMAR\", \"RAINS\", \"RED RIVER\"],\r\n    \"PHARR\": [\"BROOKS\", \"CAMERON\", \"HIDALGO\", \"JIM HOGG\", \"KENEDY\", \"STARR\", \"WILLACY\", \"ZAPATA\"],\r\n    \"SAN ANTONIO\": [\"ATASCOSA\", \"BANDERA\", \"BEXAR\", \"COMAL\", \"FRIO\", \"GUADALUPE\", \"KENDALL\", \"KERR\", \"MCMULLEN\", \"MEDINA\", \"UVALDE\", \"WILSON\"],\r\n    \"SAN ANGELO\": [\"COKE\", \"CONCHO\", \"CROCKETT\", \"EDWARDS\", \"GLASSCOCK\", \"IRION\", \"KIMBLE\", \"MENARD\", \"REAGAN\", \"REAL\", \"RUNNELS\", \"SCHLEICHER\", \"STERLING\", \"SUTTON\", \"TOM GREEN\"],\r\n    \"TYLER\": [\"ANDERSON\", \"CHEROKEE\", \"GREGG\", \"HENDERSON\", \"RUSK\", \"SMITH\", \"VAN ZANDT\", \"WOOD\"],\r\n    \"WACO\": [\"BELL\", \"BOSQUE\", \"CORYELL\", \"FALLS\", \"HAMILTON\", \"HILL\", \"LIMESTONE\", \"MCLENNAN\"],\r\n    \"WICHITA FALLS\": [\"ARCHER\", \"BAYLOR\", \"CLAY\", \"COOKE\", \"MONTAGUE\", \"THROCKMORTON\", \"WICHITA\", \"WILBARGER\", \"YOUNG\"],\r\n    \"YOKUM\": [\"AUSTIN\", \"CALHOUN\", \"COLORADO\", \"DEWITT\", \"FAYETTE\", \"GONZALES\", \"JACKSON\", \"LAVACA\", \"MATAGORDA\", \"VICTORIA\", \"WHARTON\"]\r\n};\r\nconst counties = {};\r\nObject.keys(districts).forEach(key => {\r\n    districts[key].forEach(c => counties[c] ? counties[c].push(key) : counties[c] = [key])\r\n});\r\nconst highway = [\"IH 45\", \"US 290\", \"IH 30\", \"US 59\", \"IH 35W\", \"IH 820\", \"IH 10\", \"IH 40\", \"IH 35\", \"US 287\", \"US 81\", \"IH 27\", \"SL 289\", \"SH 226\", \"SH 36\", \"US 83B\", \"VA\", \"FM 3129\", \"IH 20\", \"US 71\", \"US 79\", \"US 47\", \"US 67\", \"BU90-Y\", \"CS\", \"FM 1960\", \"FM 364\", \"FM 365\", \"SH 347\", \"SH 105\", \"SH 12\", \"SH 124\", \"SH 146\", \"SH 326\", \"SH 61\", \"SH 73\", \"SH 87\", \"SS 380\", \"US 90\", \"US 69\", \"US 96\", \"BS6-R\", \"SH 21\", \"BW 8\", \"US 83\", \"BS 121H\", \"FM 1171\", \"FM 1382\", \"FM 2499\", \"FM 709\", \"FM 740\", \"IH 35E\", \"IH4 5\", \"IH 635\", \"LP 12\", \"LP 354\", \"MH\", \"SH 289\", \"SH 31\", \"SH 66\", \"SH 78\", \"SH 114\", \"SH 121\", \"SH 161\", \"SH 180\", \"SH 183\", \"SH 310\", \"SH 34\", \"SH 342\", \"SH 356\", \"SL 12\", \"SL 288\", \"SP 244\", \"SP 348\", \"SP 366\", \"SPUR 354\", \"US 175\", \"US 380\", \"US 75\", \"US 77\", \"US 377\", \"US 80\", \"US 54\", \"BU 287P\", \"FM 157\", \"IH 820 \", \"SH 199\", \"SH 26\", \"SH 360\", \"FM 1764\", \"FM 523\", \"FM 1092\", \"FM 1488\", \"FM 518\", \"IH 610\", \"SH 288\", \"SH 332\", \"SH 225\", \"SH 242\", \"SH 249\", \"SH 35\", \"US 90A\", \"IH27\", \"SH 7\", \"FM 1472\", \"LP 20\", \"ODA 181-1\", \"ODA 181-2\", \"ODA 250-1\", \"ODA 250-2\", \"US 82\", \"SH 6\", \"FM 85\", \"LP 281\", \"LP 323\", \"SH 19\", \"SH 198\", \"SH 334\", \"US 259\", \"US 281\", \"FM 1695\", \"FM 3476\", \"FM 933\", \"IH 36\", \"LP 363\", \"SH 195\", \"US 84\", \"BU 287J\", \"IH 44\", \"SH 240\", \"SP 1027 \", \"US 287 \", \"US 55\", \"US 70\", \"SH 71\"];\r\n// const baseType = [\"CTB\", \"HMA Base\"];\r\nconst soilClassSub = [\"GW\",\"GP\",\"GM\",\"GC\",\"SW\",\"SP\",\"SM\",\"SC\",\"ML\",\"CL\",\"OL\",\"MH\",\"CH\",\"OH\",\"Pt\"];\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        '& .MuiTextField-root': {\r\n            width: '100%',\r\n        },\r\n        '& input': {\r\n            width: '100%',\r\n        },\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    dot: {\r\n        borderBottom: '2px dotted',\r\n        marginBottom: '4px'\r\n    },\r\n    helpHolder: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    inputWithHelper: {\r\n        '& label': {\r\n            pointerEvents: 'all'\r\n        }\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" size=\"small\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nclass CRCP extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeStep: 0,\r\n            stepsLength: 3,\r\n            finished: false,\r\n            DesignLife: 30,\r\n            PunchoutsPerMile: 10,\r\n            LanesOneDirection: 2,\r\n            TrafficOneDirection: 100,\r\n            ModulusOfRupture: 570,\r\n            ElasticModulue: 5,\r\n            SoilClassificationSystem:'USCS',\r\n            SoilSub:\"CH\",\r\n            PlasticityIndex:8,\r\n            SubbaseType:\"LTS\",\r\n            SubbaseThickness:12,\r\n            BaseType:'',\r\n            BaseThickness: 6,\r\n            BaseThicknessMin: 6,\r\n            ModulusBase : 400,\r\n            CompositeK: 539,\r\n            District: null,\r\n            County: null,\r\n            Highway: null,\r\n            ProjectScope: null,\r\n            StationBegin: null,\r\n            StationEnd: null,\r\n            currentDistricts: Object.keys(districts),\r\n            currentCounties: Object.keys(counties),\r\n            SubbaseThicknessThreshHold:-1,\r\n            SubbaseTypeOpt:['Cement treated subgrade',\r\n                'Lime treated subgrade',\r\n                'Lime-cement treated subgrade',\r\n                'Lime-fly ash treated subgrade',\r\n                'Fly ash treated subgrade',\r\n                'N/A'\r\n            ],\r\n            baseTypeOpt:[\"CTB\", \"HMA Base\"]\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.handlePlasticityIndex(this.state.PlasticityIndex);\r\n    }\r\n\r\n    errorFunc={\r\n        Step3:{\r\n            'SubbaseThickness': ()=>this.state.SubbaseThickness<this.state.SubbaseThicknessThreshHold?`Must greater than ${this.state.SubbaseThicknessThreshHold}`:(this.state.SubbaseThickness===''?'Required':null),\r\n            'BaseThickness': ()=>(this.state.BaseThickness<this.state.BaseThicknessMin)?`≥ ${this.state.BaseThicknessMin}`:(this.state.BaseThickness===''?'Required':null)\r\n        }\r\n    };\r\n\r\n    handleNext = () => {\r\n        this.setState({activeStep: this.state.activeStep + 1});\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.setState({activeStep: this.state.activeStep - 1});\r\n    };\r\n\r\n    handleReset = () => {\r\n        this.setState({activeStep: 0, finished:false});\r\n    };\r\n\r\n    handleOpenHelper = (content) => (event) => {\r\n        this.setState({helperEl: {el: event.currentTarget, content}})\r\n    };\r\n\r\n    handleCloseHelper = () => {\r\n        this.setState({helperEl: undefined})\r\n    };\r\n\r\n    handleBlurSliderInput = (key, min, max) => {\r\n        const value = this.state[key];\r\n        const obj = {};\r\n        if (value < min) {\r\n            obj[key] = min;\r\n            this.setState(obj);\r\n        } else if (value > max) {\r\n            obj[key] = max;\r\n            this.setState(obj);\r\n        }\r\n    }\r\n    handleChangeSliderInput = (event, key) => {\r\n        const obj = {};\r\n        obj[key] = event.target.value === '' ? '' : Number(event.target.value);\r\n        this.setState(obj);\r\n    }\r\n    handleChange = (key, value) => {\r\n        const obj = {};\r\n        obj[key] = value;\r\n        this.setState(obj);\r\n    };\r\n    handleSoilSub = (value)=>{\r\n        let baseTypeOpt = [\"CTB\", \"HMA Base\"];\r\n        let BaseType = this.state.BaseType;\r\n        if (this.state.PlasticityIndex>=15){\r\n            if ([\"ML\", \"CL\", \"OL\", \"MH\", \"CH\", \"OH\"].indexOf(value)!==-1)\r\n             {   baseTypeOpt = [\"CTB\"];\r\n                 BaseType = \"CTB\";\r\n             }\r\n        }\r\n        this.setState({SoilSub:value,baseTypeOpt,BaseType});\r\n    };\r\n    handleBaseType = (value) => {\r\n        let BaseThicknessMin = 4;\r\n        let BaseThickness = this.state.BaseThickness;\r\n        if (value==='CTB'){\r\n            BaseThicknessMin = 6;\r\n        }\r\n        if (BaseThickness<BaseThicknessMin)\r\n            BaseThickness = BaseThicknessMin;\r\n        this.setState({BaseType:value,BaseThicknessMin,BaseThickness});\r\n    }\r\n    handlePlasticityIndex = (value)=>{\r\n        let SubbaseTypeOpt = [];\r\n        let SubbaseThicknessThreshHold = -1;\r\n        if (value<15){\r\n            SubbaseTypeOpt = ['Cement treated subgrade','Lime-fly ash treated subgrade','N/A'];\r\n        }else if (value<35){\r\n            SubbaseTypeOpt = ['Cement treated subgrade',\r\n                'Lime treated subgrade',\r\n                'Lime-cement treated subgrade',\r\n                'Lime-fly ash treated subgrade',\r\n                'Fly ash treated subgrade','N/A'];\r\n        }else{\r\n            SubbaseTypeOpt = ['Lime treated subgrade',\r\n                'Lime-cement treated subgrade',\r\n                'Lime-fly ash treated subgrade','N/A'];\r\n            SubbaseThicknessThreshHold = 8;\r\n        }\r\n        this.setState({PlasticityIndex:value,SubbaseTypeOpt,SubbaseThicknessThreshHold});\r\n        this.handleBaseType(this.state.BaseType);\r\n    };\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        const getGroupControl = () => {\r\n            return <div className={classes.actionsContainer}>\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={this.props.toMenu}\r\n                        className={classes.button}\r\n                        startIcon={<HomeIcon/>}\r\n                    >\r\n                        To Main Menu\r\n                    </Button>\r\n                    <Button\r\n                        disabled={this.state.activeStep === 0}\r\n                        onClick={this.handleBack}\r\n                        className={classes.button}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleNext}\r\n                        className={classes.button}\r\n                    >\r\n                        {this.state.activeStep === this.state.stepsLength - 1 ? 'Finish' : 'Next'}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        }\r\n        if ((this.state.activeStep === this.state.stepsLength) && !this.state.finished)\r\n            this.setState({finished: true})\r\n        return (<Container maxWidth=\"lg\"> <Paper elevation={3}>\r\n            <Grid container>\r\n            <Grid item xs={this.state.finished?2:12}>\r\n            <Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\r\n                <Step>\r\n                    <StepLabel>Step 1</StepLabel>\r\n                    <StepContent displayPrint=\"block\">\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid container item xs={12} spacing={1} justify=\"center\">\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <Autocomplete\r\n                                            margin=\"dense\"\r\n                                            id=\"district\"\r\n                                            value={this.state.District}\r\n                                            options={this.state.currentDistricts}\r\n                                            size=\"small\"\r\n                                            style={{marginTop: 8, marginBottom: 4}}\r\n                                            onChange={(event, value, reason) => {\r\n                                                if (value == null)\r\n                                                    this.setState({\r\n                                                        District: value,\r\n                                                        County: null,\r\n                                                        currentCounties: Object.keys(counties)\r\n                                                    });\r\n                                                else\r\n                                                    this.setState({\r\n                                                        District: value,\r\n                                                        County: null,\r\n                                                        currentCounties: districts[value]\r\n                                                    });\r\n                                            }}\r\n                                            renderInput={(params) => <TextField dense {...params} variant=\"filled\"\r\n                                                                                className={classes.inputWithHelper}\r\n                                                                                label={<>DISTRICT<IconButton\r\n                                                                                    aria-label=\"info\"\r\n                                                                                    className={classes.margin}\r\n                                                                                    size=\"small\">\r\n                                                                                    <InfoIcon fontSize=\"small\"\r\n                                                                                              onMouseEnter={this.handleOpenHelper({src: DistrictPic})}\r\n                                                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                                                    /></IconButton></>}\r\n                                            />}/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <Autocomplete\r\n                                            margin=\"dense\"\r\n                                            id=\"county\"\r\n                                            value={this.state.County}\r\n                                            options={this.state.currentCounties}\r\n                                            onChange={(event, value) => {\r\n                                                if (value)\r\n                                                    this.setState({\r\n                                                        County: value,\r\n                                                        District: counties[value].length === 1 ? counties[value][0] : null\r\n                                                    });\r\n                                                else\r\n                                                    this.setState({County: value})\r\n                                            }}\r\n                                            size=\"small\"\r\n                                            style={{marginTop: 8, marginBottom: 4}}\r\n                                            renderInput={(params) => <TextField dense {...params}\r\n                                                                                className={classes.inputWithHelper}\r\n                                                                                label={<>COUNTY<IconButton\r\n                                                                                    aria-label=\"info\"\r\n                                                                                    className={classes.margin}\r\n                                                                                    size=\"small\">\r\n                                                                                    <InfoIcon fontSize=\"small\"\r\n                                                                                              onMouseEnter={this.handleOpenHelper({src: CountyPic})}\r\n                                                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                                                    /></IconButton></>}\r\n                                                                                variant=\"filled\"/>}/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <Autocomplete\r\n                                            margin=\"dense\"\r\n                                            id=\"highway\"\r\n                                            options={highway}\r\n                                            value={this.state.Highway}\r\n                                            onChange={(event, value) => this.handleChange('Highway', value)}\r\n                                            size=\"small\"\r\n                                            freeSolo\r\n                                            style={{marginTop: 8, marginBottom: 4}}\r\n                                            renderInput={(params) => <TextField dense {...params} label=\"HIGHWAY\"\r\n                                                                                variant=\"filled\"/>}/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"DirectionOfConstruction\"\r\n                                            label=\"DIRECTION OF CONSTRUCTION\"\r\n                                            value={this.state.DirectionOfConstruction}\r\n                                            onChange={(event) => this.handleChange('DirectionOfConstruction', event.target.value)}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"control\"\r\n                                            label=\"CONTROL\"\r\n                                            value={this.state.Control}\r\n                                            onChange={(event) => this.handleChange('Control', event.target.value)}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"section\"\r\n                                            label=\"SECTION\"\r\n                                            value={this.state.Section}\r\n                                            onChange={(event) => this.handleChange('Section', event.target.value)}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"job\"\r\n                                            label=\"JOB\"\r\n                                            value={this.state.Job}\r\n                                            onChange={(event) => this.handleChange('Job', event.target.value)}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"ProjectScope\"\r\n                                            className={classes.inputWithHelper}\r\n                                            label={<>Project Scope <IconButton aria-label=\"info\"\r\n                                                                               className={classes.margin} size=\"small\">\r\n                                                <InfoIcon fontSize=\"small\"\r\n                                                          onMouseEnter={this.handleOpenHelper({text: \"Will be provided later.\"})}\r\n                                                          onMouseLeave={this.handleCloseHelper}\r\n                                                />\r\n                                            </IconButton></>}\r\n                                            select\r\n                                            value={this.state.ProjectScope}\r\n                                            onChange={(event) => this.handleChange('ProjectScope', event.target.value)}\r\n                                            variant=\"filled\">\r\n                                            <MenuItem value=\"WIDENING\">WIDENING</MenuItem>\r\n                                            <MenuItem value=\"REHABILITATION\">REHABILITATION</MenuItem>\r\n                                            <MenuItem value=\"NEW CONSTRUCTION\">NEW CONSTRUCTION</MenuItem>\r\n                                        </TextField>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"StationBegin\"\r\n                                            label=\"STATION (BEGIN)\"\r\n                                            value={this.state.StationBegin}\r\n                                            onChange={(event) => this.handleChange('StationBegin', event.target.value)}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"StationEnd\"\r\n                                            label=\"STATION (END)\"\r\n                                            value={this.state.StationEnd}\r\n                                            onChange={(event) => this.handleChange('StationEnd', event.target.value)}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"date\"\r\n                                            type=\"date\"\r\n                                            label=\"DATE\"\r\n                                            value={this.state.Date}\r\n                                            onChange={(event) => this.handleChange('Date', event.target.value)}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1}>\r\n                                    <TextField\r\n                                        id=\"comment\"\r\n                                        label=\"COMMENTS\"\r\n                                        multiline\r\n                                        onChange={(event) => this.handleChange('Comment', event.target.value)}\r\n                                        rows={4}\r\n                                        defaultValue=\"\"\r\n                                        variant=\"filled\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                        {getGroupControl()}\r\n                    </StepContent>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel>Step 2</StepLabel>\r\n                    <StepContent displayPrint=\"block\">\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Basic design information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Design life (years)</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={3} sm={4} md={3}>\r\n                                            <Slider\r\n                                                value={this.state.DesignLife}\r\n                                                onChange={(event, newValue) => this.setState({DesignLife: newValue})}\r\n                                                defaultValue={30}\r\n                                                min={1} max={100}\r\n                                                id=\"DesignLife\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={1}>\r\n                                                <Input\r\n                                                    value={this.state.DesignLife}\r\n                                                    onChange={(event) => this.handleChangeSliderInput(event, 'DesignLife')}\r\n                                                    onBlur={() => this.handleBlurSliderInput('DesignLife', 1, 100)}\r\n                                                    id=\"DesignLife\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    inputProps={{\r\n                                                        min: 1,\r\n                                                        max: 100,\r\n                                                        type: 'number',\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Total number of lanes in one direction</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={3} xm={4} md={3}>\r\n                                            <Slider\r\n                                                value={this.state.LanesOneDirection}\r\n                                                onChange={(event, newValue) => this.setState({LanesOneDirection: newValue})}\r\n                                                defaultValue={2}\r\n                                                min={1} max={10}\r\n                                                id=\"LanesOneDirection\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={1}>\r\n                                                <Input\r\n                                                    value={this.state.LanesOneDirection}\r\n                                                    onChange={(event) => this.handleChangeSliderInput(event, 'LanesOneDirection')}\r\n                                                    onBlur={() => this.handleBlurSliderInput('LanesOneDirection', 1, 10)}\r\n                                                    id=\"LanesOneDirection\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    inputProps={{\r\n                                                        min: 1,\r\n                                                        max: 10,\r\n                                                        type: 'number',\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Total design traffic in one direction (million ESAL)</span>\r\n                                                <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onMouseEnter={this.handleOpenHelper({src: TrafficOneDirectionPic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={3} xm={4} md={3}>\r\n                                            <Slider\r\n                                                value={this.state.TrafficOneDirection}\r\n                                                onChange={(event, newValue) => this.setState({TrafficOneDirection: newValue})}\r\n                                                defaultValue={100}\r\n                                                min={10} max={1000}\r\n                                                id=\"TrafficOneDirection\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={1}>\r\n                                                <Input\r\n                                                    value={this.state.TrafficOneDirection}\r\n                                                    onChange={(event) => this.handleChangeSliderInput(event, 'TrafficOneDirection')}\r\n                                                    onBlur={() => this.handleBlurSliderInput('TrafficOneDirection', 10, 1000)}\r\n                                                    id=\"TrafficOneDirection\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    inputProps={{\r\n                                                        min: 10,\r\n                                                        max: 1000,\r\n                                                        type: 'number',\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} container justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Structural design criteria</Typography>\r\n                                        <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                            <InfoIcon fontSize=\"small\"\r\n                                                      onMouseEnter={this.handleOpenHelper({src: StructureDesignCriteriaPic})}\r\n                                                      onMouseLeave={this.handleCloseHelper}\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Acceptable number of punchouts per mile</span>\r\n                                                <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onMouseEnter={this.handleOpenHelper({src: AcceptableNumberofPunchoutPic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={3} xm={4} md={3}>\r\n                                            <Slider\r\n                                                value={this.state.PunchoutsPerMile}\r\n                                                onChange={(event, newValue) => this.setState({PunchoutsPerMile: newValue})}\r\n                                                defaultValue={10}\r\n                                                min={1} max={100}\r\n                                                id=\"PunchoutsPerMile\"\r\n                                                disabled\r\n                                            />\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={1}>\r\n                                                <Input\r\n                                                    value={this.state.PunchoutsPerMile}\r\n                                                    onChange={(event) => this.handleChangeSliderInput(event, 'PunchoutsPerMile')}\r\n                                                    onBlur={() => this.handleBlurSliderInput('PunchoutsPerMile', 1, 100)}\r\n                                                    id=\"PunchoutsPerMile\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    inputProps={{\r\n                                                        min: 1,\r\n                                                        max: 100,\r\n                                                        type: 'number',\r\n                                                    }}\r\n                                                    disabled\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} container justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Concrete Layer/Material information</Typography>\r\n                                        <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                            <InfoIcon fontSize=\"small\"\r\n                                                      onMouseEnter={this.handleOpenHelper({src: ConcreteLayerPic})}\r\n                                                      onMouseLeave={this.handleCloseHelper}\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>28-Day Modulus of Rupture (psi)</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={3} sm={4} md={3}>\r\n                                                <Slider\r\n                                                    value={this.state.ModulusOfRupture}\r\n                                                    onChange={(event, newValue) => this.setState({ModulusOfRupture: newValue})}\r\n                                                    id=\"ModulusOfRupture\"\r\n                                                    defaultValue={570}\r\n                                                    min={1} max={1000}\r\n                                                    disabled\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                        <Grid item xs={1}>\r\n                                            <Input\r\n                                                value={this.state.ModulusOfRupture}\r\n                                                onChange={(event) => this.handleChangeSliderInput(event, 'ModulusOfRupture')}\r\n                                                onBlur={() => this.handleBlurSliderInput('ModulusOfRupture', 1, 1000)}\r\n                                                id=\"ModulusOfRupture\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                inputProps={{\r\n                                                    min: 1,\r\n                                                    max: 1000,\r\n                                                    type: 'number',\r\n                                                }}\r\n                                                disabled\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Concrete Elasticity of Modulus (million psi)</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={3} sm={4} md={3}>\r\n                                                <Slider\r\n                                                    value={this.state.ElasticModulue}\r\n                                                    onChange={(event, newValue) => this.setState({ElasticModulue: newValue})}\r\n                                                    id=\"ElasticModulue\"\r\n                                                    defaultValue={570}\r\n                                                    min={1} max={1000}\r\n                                                    disabled\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                        <Grid item xs={1}>\r\n                                            <Input\r\n                                                value={this.state.ElasticModulue}\r\n                                                onChange={(event) => this.handleChangeSliderInput(event, 'ElasticModulue')}\r\n                                                onBlur={() => this.handleBlurSliderInput('ElasticModulue', 1, 1000)}\r\n                                                id=\"ModulusOfRupture\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                inputProps={{\r\n                                                    min: 1,\r\n                                                    max: 1000,\r\n                                                    type: 'number',\r\n                                                }}\r\n                                                disabled\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                        {getGroupControl()}\r\n                    </StepContent>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel>Step 3</StepLabel>\r\n                    <StepContent displayPrint=\"block\">\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Subgrade and Subbase Information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Soil classification system</span>\r\n                                                <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onMouseEnter={this.handleOpenHelper({src: soilSystermPic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Input\r\n                                                value={this.state.SoilClassificationSystem}\r\n                                                onChange={(event, newValue) => this.setState({SoilClassificationSystem: newValue})}\r\n                                                id=\"SoilClassificationSystem\"\r\n                                                disabled\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Soil classification of subgrade</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Autocomplete\r\n                                                margin=\"dense\"\r\n                                                id=\"SoilSub\"\r\n                                                options={soilClassSub}\r\n                                                size=\"small\"\r\n                                                onChange={(event, value) => this.handleSoilSub(value)}\r\n                                                renderInput={(params) => <TextField dense {...params} label=\"\"/>}/>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Plasticity Index (PI)</span>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <TextField type=\"number\" id=\"PlasticityIndex\" value={this.state.PlasticityIndex} onChange={(event)=>this.handlePlasticityIndex(event.target.value)}/>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span> Subbase Type</span>\r\n                                                <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onMouseEnter={this.handleOpenHelper({src: subbasePic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <TextField\r\n                                                margin=\"dense\"\r\n                                                id=\"SubbaseType\"\r\n                                                select\r\n                                                value={this.state.SubbaseType}\r\n                                                size=\"small\"\r\n                                                onChange={(event)=>this.handleChange('SubbaseType',event.target.value)}\r\n                                                >\r\n                                                {this.state.SubbaseTypeOpt.map(d=><MenuItem value={d} key={d}>{d}</MenuItem>)}\r\n                                            </TextField>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Subbase Layer Thickness (in.)</span>\r\n                                                <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onMouseEnter={this.handleOpenHelper({src: subbasePic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <TextField\r\n                                                error={this.errorFunc.Step3.SubbaseThickness()}\r\n                                                helperText={this.errorFunc.Step3.SubbaseThickness()}\r\n                                                type=\"number\" id=\"SubbaseThickness\" value={this.state.SubbaseThickness}\r\n                                                onChange={(event) => ((event.target.value>0)||(event.target.value===''))?this.handleChange(\"SubbaseThickness\",event.target.value):''}\r\n                                                inputProps={{min:0}}\r\n                                            />\r\n                                        </Grid>\r\n                                        {/*<Grid item xs={8} justify=\"flex-start\">*/}\r\n                                        {/*    <Grid container xs={12} justify=\"flex-start\">*/}\r\n                                        {/*        <span>Composite K (psi/in.)</span>*/}\r\n                                        {/*        <span className={classes.dot} style={{flexGrow:1}}/>*/}\r\n                                        {/*    </Grid>*/}\r\n                                        {/*</Grid>*/}\r\n                                        {/*<Grid item xs={4}>*/}\r\n                                        {/*    <input type=\"number\" id=\"19\" value={this.state.CompositeK} onChange={(event, newValue) => this.setState({CompositeK:newValue})}/>*/}\r\n                                        {/*</Grid>*/}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Base layer information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Base type</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <TextField\r\n                                                select\r\n                                                margin=\"dense\"\r\n                                                id=\"BaseType\"\r\n                                                size=\"small\"\r\n                                                value={this.state.BaseType}\r\n                                                onChange={(event)=>{this.handleBaseType(event.target.value)}}\r\n                                            >\r\n                                                {this.state.baseTypeOpt.map(d=><MenuItem value={d} key={d}>{d}</MenuItem>)}\r\n                                            </TextField>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Base layer thickness (inches)</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                            <Grid item xs={4}>\r\n                                                <TextField\r\n                                                    error={this.errorFunc.Step3.BaseThickness()}\r\n                                                    helperText={this.errorFunc.Step3.BaseThickness()}\r\n                                                    value={this.state.BaseThickness}\r\n                                                    onChange={(event) => this.handleChange('BaseThickness',event.target.value)}\r\n                                                    id=\"BaseThickness\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    inputProps={{\r\n                                                        min: this.state.BaseThicknessMin,\r\n                                                        type: 'number',\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Modulus of base layer (ksi)</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <TextField type=\"number\" id=\"ModulusBase \" value={this.state.ModulusBase }\r\n                                                       disabled\r\n                                                   onChange={(event) => this.setState({ModulusBase : event.target.value})}/>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Composite k-Value</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <TextField type=\"number\" id=\"CompositeK \" value={this.state.CompositeK }\r\n                                                       disabled\r\n                                                   onChange={(event) => this.setState({CompositeK : event.target.value})}/>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                        {getGroupControl()}\r\n                    </StepContent>\r\n                </Step>\r\n            </Stepper>\r\n            {this.state.activeStep === this.state.stepsLength && (\r\n                <>\r\n                    <Paper square elevation={0} className={classes.resetContainer}>\r\n                        <Button onClick={this.handleReset} className={classes.button}\r\n                                size=\"small\"\r\n                                startIcon={<RefreshIcon/>}\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            className={classes.button}\r\n                            startIcon={<PrintIcon/>}\r\n                            // onClick={()=>this.props.print(this.state)}\r\n                            onClick={()=>window.print()}\r\n                        >\r\n                            Print\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            className={classes.button}\r\n                            // startIcon={<PrintIcon/>}\r\n                            // onClick={()=>this.props.print(this.state)}\r\n                            onClick={()=>this.setState({openAnalytics:true})}\r\n                        >\r\n                            ANALYSIS RESULT\r\n                        </Button>\r\n                        <Button\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            onClick={this.props.toMenu}\r\n                            className={classes.button}\r\n                            startIcon={<HomeIcon/>}\r\n                        >\r\n                            To Main Menu\r\n                        </Button>\r\n                    </Paper>\r\n                </>\r\n            )}\r\n            </Grid>\r\n                {this.state.finished ?<Grid xs={10} item>\r\n                    <Report\r\n                        data={this.state}\r\n                        AnalysisPunchouts={this.props.AnalysisPunchouts()}\r\n                    />\r\n                </Grid>:''}\r\n            </Grid>\r\n        </Paper>\r\n            {this.state.helperEl ?\r\n                <Popper\r\n                    placement=\"right\"\r\n                    disablePortal={false}\r\n                    open={true} anchorEl={this.state.helperEl.el}\r\n                    modifiers={{\r\n                        flip: {\r\n                            enabled: true,\r\n                        },\r\n                        preventOverflow: {\r\n                            enabled: true,\r\n                            boundariesElement: 'window',\r\n                        },\r\n                        arrow: {\r\n                            enabled: true,\r\n                        },\r\n                    }}\r\n                    style={{zIndex: 4}}\r\n                >\r\n                    <Paper className={classes.helpHolder}>\r\n                        {this.state.helperEl.content.src ?\r\n                            <Image\r\n                                src={this.state.helperEl.content.src}\r\n                                style={{minWidth: 600, height: 'auto'}}\r\n                            /> :\r\n                            this.state.helperEl.content.text\r\n                        }\r\n                    </Paper>\r\n                </Popper> : ''\r\n            }\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth={\"lg\"}\r\n                open={this.state.openAnalytics}\r\n                onClose={()=>this.setState({openAnalytics:false})}>\r\n                <DialogTitle id=\"responsive-dialog-title\" onClose={()=>this.setState({openAnalytics:false})}>Analysis</DialogTitle>\r\n                <DialogContent>\r\n                {this.state.finished ? <Graph\r\n                    AnalysisPunchouts={this.props.AnalysisPunchouts}\r\n                    init={this.state.activeStep === this.state.stepsLength}\r\n                    parameter={{...this.state}}/> : ''}\r\n                </DialogContent>\r\n            </Dialog>\r\n        </Container>);\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CRCP);\r\n","import React from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {AppBar,IconButton,Typography,Button,Toolbar,Grid,Slide} from '@material-ui/core';\nimport coverPic from './image/cover.jpg';\nimport CRCP from './component/CRCP'\nimport Report from \"./component/report\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  titleNav: {\n    flexGrow: 1,\n  },\n  title: {\n    color: 'white'\n  },\n  cover: {\n    width:'100%',\n    position:'fixed',\n    background: `linear-gradient(0deg,rgba(0,0,0,0) 0,#000 100%), url(${coverPic}) no-repeat center center fixed`,\n    backgroundSize: 'cover',\n    height: '100vh',\n    overflow: 'hidden',\n    zIndex: -1\n  },\n}));\n\nfunction App() {\n  const [page, setPage] = React.useState('home');\n  const [reportData, setReportData] = React.useState({});\n  const [AnalysisPunchouts, setAnalysisPunchouts] = React.useState(0);\n  const classes = useStyles();\n  const AnalysisPunchoutsFunc = (d)=>d===undefined?AnalysisPunchouts:setAnalysisPunchouts(d);\n  return (\n    <div >\n      <div className={classes.cover}></div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.titleNav}>\n            TxCRCP-ME\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.root}>\n        <Slide direction=\"up\" in={page==='home'} mountOnEnter unmountOnExit>\n          <Grid container spacing={5} alignItems=\"center\" justify=\"center\" direction={\"column\"} style={{height: 'calc(100vh - 64px)',width:'100%'}}>\n            <Grid item>\n              <Typography variant=\"h3\" className={classes.title}>\n                TxDOT Mechanistic-Empirical CRCP Design System\n              </Typography>\n            </Grid>\n            <Grid container item alignItems=\"stretch\" justify=\"center\" direction={\"column\"} spacing={3} style={{width:'fit-content'}}>\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\" style={{width:'100%'}} onClick={()=>setPage('CRCP')}>CRCP Design</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" style={{width:'100%'}}>Slab Support</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" style={{width:'100%'}}>Product Disclaimer</Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Slide>\n        <Slide direction=\"up\" in={page==='CRCP'} mountOnEnter unmountOnExit>\n          <CRCP\n              toMenu={()=>setPage('home')}\n              // print={(d)=>{setReportData(d);setPage('Print')}}\n              AnalysisPunchouts={AnalysisPunchoutsFunc}\n          />\n        </Slide>\n        {/*<Slide direction=\"up\" in={page==='Print'} mountOnEnter unmountOnExit>*/}\n        {/*  <Report*/}\n        {/*      data={reportData}*/}\n        {/*      toMenu={()=>setPage('home')}*/}\n        {/*      toCRCP={()=>setPage('CRCP')}*/}\n        {/*      AnalysisPunchouts={AnalysisPunchoutsFunc()}*/}\n        {/*  />*/}\n        {/*</Slide>*/}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}