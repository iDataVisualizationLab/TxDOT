{"version":3,"sources":["image/cover.jpg","component/tableData.js","component/Graph.js","image/District.png","image/TotalDesign Traffic.png","image/County.png","image/StructureDesignCriteria.png","image/AcceptableNumberofPunchout.png","image/soilSystermPic.png","image/ConcreteLayer.png","image/subbase.png","image/BasetypePic.png","component/report.js","component/data/sTable.csv","component/data/kTable.csv","component/data/temperature.csv","component/County.js","component/CRCP.js","App.js","reportWebVitals.js","index.js"],"names":["Tabledata","props","titles","state","visible","handleInput","prevProps","this","rows","minArray","maxArray","j","length","push","i","colorRedBlues","colorScale","d3","domain","range","r","parameter","DesignLife","color","colorgreenred","id","type","disabled","style","textAlign","fontSize","fontWeight","value","parseFloat","toFixed","size","onChange","event","setState","target","checked","for","width","display","border","backgroundColor","map","t","c","paddingRight","paddingTop","paddingBottom","indexOf","Component","Graph","colorGreenRed","tip","d3tip","attr","offset","html","d","y","x","init","parameterGraph","height","dataset","obj","xScale","yScale","xAxis","tickSizeInner","tickSizeOuter","tickPadding","yAxis","line","tableCreate","margin","top","right","bottom","left","refs","svg","select","selectAll","call","classes","Grid","container","alignItems","direction","spacing","item","xs","ref","className","transform","fontFamily","cx","cy","fill","strokeWidth","stroke","AnalysisPunchouts","withStyles","theme","root","Report","CRCP","BondBreaker","Base","Subbase","NaturalSoil","Paper","justify","toMenu","Button","variant","onClick","button","startIcon","toCRCP","window","print","Typography","header","subHeader","data","District","County","Highway","Control","Section","Job","join","ProjectScope","StationBegin","StationEnd","PunchoutsPerMile","LanesOneDirection","TrafficOneDirection","SoilClassificationSystem","SoilSub","PlasticityIndex","SubbaseType","SubbaseThickness","BaseType","BaseThickness","ModulusBase","ModulusOfRupture","ElasticModulue","alignContent","underline","AnalysisSlabThickness","minHeight","layerHolder","flexGrow","padding","marginTop","marginRight","borderBottom","palette","secondary","light","paddingLeft","svgRef","React","createRef","zoom","k","map_width","map_height","projection","geoMercator","center","translate","scale","geographies","Name","undefined","highlighto","topojson","county","objects","features","forEach","path","geoPath","centroid","highlight","current","scaleExtent","on","viewBox","properties","NAME","onMouseOver","pointerEvents","onMouseOut","selected","dy","position","textAnchor","opacity","strokeOpacity","lineHeight","textShadow","textTransform","letterSpacing","shapeRendering","districts","districtCode","counties","Object","keys","key","highway","soilClassSub","styles","actionsContainer","marginBottom","resetContainer","dot","helpHolder","inputWithHelper","closeButton","grey","zIndex","capitalize","DialogTitle","children","onClose","other","disableTypography","IconButton","aria-label","activeStep","stepsLength","finished","BaseThicknessMin","BaseThicknessMax","CompositeK","currentDistricts","currentCounties","SubbaseThicknessThreshHold","SubbaseTypeOpt","baseTypeOpt","ksTable","Map","ssTable","temperature","computeStress","SlabThickness","input","H","Input","K","Math","floor","ceil","B3","mapd2","lastd2","index","DT","STR_T","STR_E","s","B2","A2","C2","D2","E2","data3","data4","Q2","Q3","R2","R3","data5","W2","W4","X2","X4","filter","ti","AveragetTemperature","getSTR_T","getSTR_E","recompute","__ret","analysis","rowIndexStress","row1","min","warningFunc","Step3","errorFunc","handleNext","handleBack","handleModify","handleReset","initFunc","onLoadInput","self","reader","FileReader","addEventListener","JSON","parse","result","currentState","stringify","e","alert","files","readAsText","onSaveInput","filename","Date","toISOString","replace","saveData","jsonse","blob","Blob","url","URL","createObjectURL","downloadLink","document","createElement","body","appendChild","navigator","msSaveOrOpenBlob","href","download","click","removeChild","handleOpenHelper","content","freeze","helperEl","el","currentTarget","handleCloseHelper","source","handleBlurSliderInput","max","handleChangeSliderInput","Number","handleChange","handleSoilSub","handleBaseType","handlePlasticityIndex","calculateCompositeK","get","getSubgradeValue","round","getModulusBase","prevState","snapshot","printRequest","isBackdropOpen","kTable","then","_data","set","sTable","slabthickness","n","pow","fatigue","row2","getGroupControl","Container","maxWidth","elevation","Stepper","orientation","Step","StepLabel","StepContent","displayPrint","component","accept","hidden","noValidate","autoComplete","sm","md","Autocomplete","options","reason","renderInput","params","TextField","dense","required","error","label","src","DistrictPic","onMouseEnter","onMouseLeave","freeSolo","autoSelect","text","MenuItem","InputLabelProps","shrink","multiline","defaultValue","lg","onBlur","inputProps","TrafficOneDirectionPic","StructureDesignCriteriaPic","AcceptableNumberofPunchoutPic","soilSystermPic","newValue","subbasePic","helperText","BasetypePic","square","matchMedia","addListener","mql","matches","onafterprint","openAnalytics","Popper","placement","disablePortal","open","anchorEl","modifiers","flip","enabled","preventOverflow","boundariesElement","arrow","Card","defaultScale","defaultPositionX","defaultPositionY","Backdrop","sx","Dialog","fullWidth","DialogContent","useStyles","makeStyles","menuButton","titleNav","title","cover","background","coverPic","backgroundSize","overflow","App","useState","page","setPage","setAnalysisPunchouts","setAnalysisSlabThickness","AppBar","Toolbar","Slide","in","mountOnEnter","unmountOnExit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.285df267.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cover.43610a00.jpg\";","import React,{ Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\nclass Tabledata  extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible:false\r\n        }\r\n        this.handleInput();\r\n        // var r = 12 * this.props.parameter.DesignLife - 1;\r\n        // this.props.AnalysisPunchouts(this.props.rows[r][12]);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.rows!==prevProps.rows){\r\n            this.handleInput();\r\n            // var r = 12 * this.props.parameter.DesignLife - 1;\r\n            // this.props.AnalysisPunchouts(this.props.rows[r][12]);\r\n        }\r\n    }\r\n\r\n    handleInput() {\r\n        const rows = this.props.rows;\r\n        var minArray = [];\r\n        var maxArray = [];\r\n        for (var j = 0; j < rows[0].length; j++) {\r\n            minArray.push(1000000000);\r\n            maxArray.push(0);\r\n        }\r\n        for (var i = 0; i < rows.length; i++) {\r\n            for (var j = 0; j < rows[i].length; j++) {\r\n                if (rows[i][j] > maxArray[j])\r\n                    maxArray[j] = rows[i][j];\r\n                if (rows[i][j] < minArray[j])\r\n                    minArray[j] = rows[i][j];\r\n            }\r\n        }\r\n        this.colorRedBlues = [];\r\n        for (var j = 0; j < rows[0].length; j++) {\r\n            var colorScale = d3.scaleLinear()\r\n                .domain([minArray[j], (minArray[j] + maxArray[j]) / 2, maxArray[j]])\r\n                .range([\"#55f\", \"white\", \"#f55\"]);\r\n            this.colorRedBlues.push(colorScale);\r\n        }\r\n    }\r\n\r\n    titles = [\"Age (Month)\",\"Age (Year)\", \"Modulus of Rupture (psi)\",\"Modulus of Elasticity (ksi)\"\r\n        ,\"Concrete Stress (T) (psi)\"\r\n        ,\"Concrete Stress (E) (psi)\"\r\n        ,\"Total Concrete Stress (psi)\"\r\n        ,\"Stress to Strength Ratio (psi/psi)\"\r\n        ,\"Number of Load Repetitions to Failure\"\r\n        ,\"Number of Load Repetitions\"\r\n        ,\"Pavement Damage\"\r\n        ,\"Cumulative Damage\"\r\n        ,\"Number of Punchouts per Mile\"]\r\n    render() {\r\n        debugger\r\n        var r = 12 * this.props.parameter.DesignLife - 1;\r\n        if (this.colorRedBlues&&this.props.rows[r]) {\r\n            var color = this.props.colorgreenred(this.props.rows[r][12]);\r\n            return (<div>\r\n                <div id=\"div_CRCP_PERFORMANCE\"><b>CRCP PERFORMANCE</b><br/>\r\n                    Number of Punchouts per Mile:<input type=\"TEXT\" disabled style={{\r\n                        \"background-color\": color,\r\n                        textAlign: \"center\",\r\n                        fontSize: 17,\r\n                        fontWeight: \"bold\"\r\n                    }} value={parseFloat(this.props.rows[r][12]).toFixed(2)} size=\"7\"/><br/><br/>\r\n                </div>\r\n                <div id=\"divCheckbox1\"><input type=\"checkbox\" id=\"checkbox1\"\r\n                                              onChange={(event) => this.setState({visible: event.target.checked})}/>\r\n                    <label for=\"checkbox1\"> Analysis Result </label></div>\r\n                <table style={{width: '99%', fontSize: '12px', display: this.state.visible ? 'table' : 'none'}}\r\n                       border=\"1\" id=\"analysisTable\">\r\n                    <tr style={{backgroundColor: \"#888\"}}>\r\n                        {this.titles.map(t => <td>{t}</td>)}\r\n                    </tr>\r\n                    {this.props.rows.map(r => <tr>{r.map((c, j) => <td style={{\r\n                        textAlign: 'right',\r\n                        backgroundColor: (j === 12) ? this.props.colorgreenred(c) : this.colorRedBlues[j](c),\r\n                        paddingRight: '10px',\r\n                        paddingTop: '0px',\r\n                        paddingBottom: '0px'\r\n                    }}>\r\n                        {([1, 2, 3, 12, 8, 9, 5, 6, 7, 10, 11].indexOf(j) !== -1) ? parseFloat(c).toFixed((j == 1 || j == 12) ? 2 : ((j == 2 || j == 3 || j == 8 || j == 9) ? 0 : ((j == 5 || j == 6) ? 1 : ((j == 7) ? 3 : 4)))) : c}\r\n                    </td>)}</tr>)}\r\n                </table>\r\n            </div>)\r\n        }else\r\n            return ''\r\n    }\r\n}\r\n\r\nexport default Tabledata;\r\n","import React, {Component} from 'react';\r\nimport './Graph.css';\r\nimport Tabledata from './tableData';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Button,\r\n    Paper,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    StepContent,\r\n    TextField,\r\n    Container\r\n} from '@material-ui/core';\r\nimport * as d3 from 'd3';\r\nimport {tip as d3tip} from \"d3-v6-tip\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        '& .MuiTextField-root': {\r\n            width: '100%',\r\n        },\r\n        '& input': {\r\n            width: '100%',\r\n        },\r\n    }\r\n});\r\n\r\nclass Graph extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const margin = {top: 20, right: 80, bottom: 60, left: 120},\r\n            width = 900 - margin.left - margin.right,\r\n            height = 400 - margin.top - margin.bottom;\r\n\r\n        this.state = {\r\n            margin,\r\n            width,\r\n            height,\r\n            // row1:[],\r\n            // rows:[],\r\n            init: true\r\n        }\r\n    }\r\n\r\n    colorGreenRed = d3.scaleLinear()\r\n        .domain([0, 25])\r\n        .range([\"#0f0\", \"#f00\"]);\r\n    tip = d3tip()\r\n        .attr('class', 'd3-tip')\r\n        .offset([-10, 0])\r\n        .html((d) => {\r\n            var color = this.colorGreenRed(d.y);\r\n            var html = \"#Punchouts per Mile: <span style='color:\" + color + \"; font-weight: bold'>\" + parseFloat(d.y).toFixed(2) + \"</span><br>\";\r\n            html += \"&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; Age (months):  <span style='color:white; font-weight: bold'>\" + d.x + \"</span>\";\r\n            return html;\r\n        });\r\n\r\n    componentDidMount() {\r\n        this.tableCreate();\r\n        this.parameterGraph();\r\n    }\r\n\r\n    init = true;\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const init = ((this.props.init !== prevProps.init) && this.props.init);\r\n        // console.log('-------------------------',init)\r\n        this.init = init || this.init;\r\n        // console.log('-------------------------this',this.init)\r\n        if ((this.props.parameter !== prevProps.parameter) || this.init) {\r\n            this.parameterGraph();\r\n            if (this.refs.svg && this.state.xAxis && this.state.yAxis) {\r\n                const svg = d3.select(this.refs.svg).select('g.content');\r\n                svg.selectAll(\".xaxis\")\r\n                    .attr(\"transform\", \"translate(0,\" + this.state.height + \")\")\r\n                    .call(this.state.xAxis);\r\n                svg.selectAll(\".yaxis\")\r\n                    .call(this.state.yAxis);\r\n                if (this.init && this.state.dataset.length) {\r\n                    //     debugger\r\n                    //     svg.selectAll(\".point\")\r\n                    //         .data(this.state.dataset).enter()\r\n                    //         .append(\"circle\")\r\n                    //         .attr(\"class\", \"point\")\r\n                    //         .attr(\"r\", 4)\r\n                    //         .attr(\"cx\", (d)=>this.state.xScale(d.x))\r\n                    //         .attr(\"cy\", (d)=> this.state.yScale(d.y))\r\n                    //         .attr(\"fill\", (d)=> this.colorGreenRed(d.y))\r\n                    //         .attr(\"stroke-width\", 0.5)\r\n                    //         .attr(\"stroke\",\"#000\")\r\n                    //         .on('mouseover', this.tip.show)\r\n                    //         .on('mouseout', this.tip.hide)\r\n                    //     svg.call(this.tip)\r\n                    this.init = false;\r\n                }\r\n                // }else{\r\n                //     svg.selectAll(\".point\")\r\n                //         .data(this.state.dataset)\r\n                //         .attr(\"cx\", (d)=> this.state.xScale(d.x))\r\n                //         .attr(\"cy\", (d,i)=>this.state.yScale(d.y))\r\n                //         .attr(\"fill\", (d)=> this.colorGreenRed(d.y));\r\n                // }\r\n            }\r\n        }\r\n    }\r\n\r\n    parameterGraph = () => {\r\n        const width = this.state.width;\r\n        const height = this.state.height;\r\n        const rows = this.props.rows;\r\n        var dataset = [];\r\n        for (var i = 0; i < rows.length; i++) {\r\n            var obj = {};\r\n            obj.x = rows[i][0];\r\n            obj.y = rows[i][12];\r\n            dataset.push(obj);\r\n        }\r\n        var xScale = d3.scaleLinear()\r\n            .domain([0, d3.max(dataset, function (d) {\r\n                return d.x;\r\n            })])\r\n            .range([0, width]);\r\n        var yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(dataset, function (d) {\r\n                return d.y;\r\n            })])\r\n            .range([height, 0]);\r\n        var xAxis = d3.axisBottom(xScale)\r\n            .tickSizeInner(-height)\r\n            .tickSizeOuter(0)\r\n            .tickPadding(10);\r\n\r\n        var yAxis = d3.axisLeft(yScale)\r\n            .tickSizeInner(-width)\r\n            .tickSizeOuter(0)\r\n            .tickPadding(10);\r\n\r\n        var line = d3.line()\r\n            .x(function (d) {\r\n                return xScale(d.x);\r\n            })\r\n            .y(function (d) {\r\n                return yScale(d.y);\r\n            });\r\n\r\n        this.setState({xScale, yScale, xAxis, yAxis, line, dataset});\r\n    }\r\n\r\n    tableCreate = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return ((this.props.rows.length && this.state.dataset) ?\r\n            <Grid container alignItems=\"center\" direction={\"column\"} spacing={1}>\r\n                <Grid item xs={11}>\r\n                    <svg ref=\"svg\"\r\n                         width={this.state.width + this.state.margin.left + this.state.margin.right}\r\n                         height={this.state.height + this.state.margin.top + this.state.margin.bottom}>\r\n                        <g className=\"content\"\r\n                           transform={\"translate(\" + this.state.margin.left + \",\" + this.state.margin.top + \")\"}>\r\n                            <text className=\"xAxisText\"\r\n                                  style={{\"textAnchor\": \"middle\", \"textShadow\": \"1px 1px 0 rgba(200, 200, 200, 0.7\"}}\r\n                                  fontFamily=\"sans-serif\" fontSize=\"16px\" x={this.state.width / 2}\r\n                                  y={this.state.height + 40}>Age (months)\r\n                            </text>\r\n                            <text className=\"YAxisText\"\r\n                                  transform={\"translate(\" + (-50) + \",\" + this.state.height / 2 + \")\" + \" rotate(-90)\"}\r\n                                  style={{\"textAnchor\": \"middle\", \"textShadow\": \"1px 1px 0 rgba(200, 200, 200, 0.7\"}}\r\n                                  fontFamily=\"sans-serif\" fontSize=\"16px\">Number of Punchouts per Mile\r\n                            </text>\r\n                            <g className=\"xaxis\" transform={\"translate(0,\" + this.state.height + \")\"}></g>\r\n                            <g className=\"yaxis\"></g>\r\n                            <path className=\"line\" d={this.state.line(this.state.dataset)}/>\r\n                            {this.state.dataset.map(d => <circle className=\"point\" r={4} cx={this.state.xScale(d.x)}\r\n                                                                 cy={this.state.yScale(d.y)}\r\n                                                                 fill={this.colorGreenRed(d.y)}\r\n                                                                 strokeWidth={0.5} stroke={\"#000\"}></circle>)}\r\n                        </g>\r\n                    </svg>\r\n                </Grid><Grid item xs={11}><Tabledata AnalysisPunchouts={this.props.AnalysisPunchouts}\r\n                                                     parameter={this.props.parameter} colorgreenred={this.colorGreenRed}\r\n                                                     rows={this.props.rows}/></Grid></Grid> : '');\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Graph);\r\n","export default __webpack_public_path__ + \"static/media/District.634c801c.png\";","export default __webpack_public_path__ + \"static/media/TotalDesign Traffic.948031ff.png\";","export default __webpack_public_path__ + \"static/media/County.e9bed656.png\";","export default __webpack_public_path__ + \"static/media/StructureDesignCriteria.4f123ed0.png\";","export default __webpack_public_path__ + \"static/media/AcceptableNumberofPunchout.f191431d.png\";","export default __webpack_public_path__ + \"static/media/soilSystermPic.c6e7e75d.png\";","export default __webpack_public_path__ + \"static/media/ConcreteLayer.45d36da4.png\";","export default __webpack_public_path__ + \"static/media/subbase.a3bc3c69.png\";","export default __webpack_public_path__ + \"static/media/BasetypePic.61fd6d33.png\";","import React, {Component} from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        padding: theme.spacing(2)\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    underline: {\r\n        borderBottom: '1px solid black'\r\n    },\r\n    subHeader: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    header:{\r\n        backgroundColor: theme.palette.secondary.light\r\n    },\r\n    layerHolder:{\r\n        '& div:first-child':{\r\n            paddingLeft: 10\r\n        }\r\n    }\r\n});\r\n\r\nclass Report extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            CRCP: 13,\r\n            BondBreaker: 1,\r\n            Base: 6,\r\n            Subbase: 12,\r\n            NaturalSoil: 6,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return <Paper>\r\n            <Grid container alignItems={\"start\"} justify={\"center\"}>\r\n                {this.props.toMenu ? <Grid item xs={12}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        onClick={this.props.toMenu}\r\n                        className={classes.button}\r\n                        startIcon={<HomeIcon/>}\r\n                    >\r\n                        To Main Menu\r\n                    </Button>\r\n                    <Button\r\n                        onClick={this.props.toCRCP}\r\n                        className={classes.button}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        startIcon={<PrintIcon/>}\r\n                        onClick={() => window.print()}\r\n                    >\r\n                        Print\r\n                    </Button>\r\n                </Grid> : ''}\r\n                <Grid container item xs={12} justify={\"start\"} spacing={1} className={[\"section-to-print\", classes.root]}>\r\n\r\n                    <Grid item xs={6} container justify=\"flex-start\"\r\n                          alignItems=\"flex-start\"\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h5'} className={classes.header}>INPUT DATA</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}>A. Project\r\n                                Identification</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            District\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.District}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            County\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.County}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Highway\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.Highway}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            CSJ\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {[this.props.data.Control??'',this.props.data.Section??'',this.props.data.Job??''].join(' ')}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Project Scope\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ProjectScope}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Station (Begin)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.StationBegin}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Station (End)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.StationEnd}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> B. Design Parameters &\r\n                                Traffic</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Design Life (year)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.DesignLife}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Number of Punchouts per Mile\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.PunchoutsPerMile}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Total Number of Lanes in One Direction\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.LanesOneDirection}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Total Design Traffic in One Direction (million ESALs)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.TrafficOneDirection}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> C. Subgrade and Treatment Information</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Soil Classification System\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SoilClassificationSystem}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Soil Classification of Subgrade\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SoilSub}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Plasticity Index (PI)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.PlasticityIndex}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Subbase Type\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SubbaseType}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Subbase Thickness (in.)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SubbaseThickness}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}>D. Base Layer\r\n                                Information</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Base Type\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.BaseType}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Base Thickness (in.)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.BaseThickness}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Modulus of Base Layer (ksi)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ModulusBase}\r\n                        </Grid>\r\n                        {/*<Grid item xs={8}>*/}\r\n                        {/*    Composite K (psi/in.)*/}\r\n                        {/*</Grid>*/}\r\n                        {/*<Grid item xs={4}>*/}\r\n                        {/*    {this.props.data.CompositeK}*/}\r\n                        {/*</Grid>*/}\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> E. Concrete Material\r\n                                Properties</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            28-Day Modulus of Rupture (psi)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ModulusOfRupture}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Elastic Modulus (million psi)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ElasticModulue}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={6} container justify=\"flex-start\"\r\n                          direction=\"row\"\r\n                          alignContent=\"flex-start\"\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h5'} className={classes.header}>ANALYSIS RESULT</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> F. Design Slab Thickness & Performance</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.underline}>\r\n                            Design Slab Thickness\r\n                        </Grid>\r\n                        <Grid item xs={4} className={classes.underline} style={{color:(this.props.AnalysisSlabThickness>13)?'red':null}}>\r\n                            {this.props.AnalysisSlabThickness}\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.underline}>\r\n                            Number of Punchouts per Mile\r\n                        </Grid>\r\n                        <Grid item xs={4} className={classes.underline} style={{color:(this.props.AnalysisPunchouts>this.props.data.PunchoutsPerMile)?'red':null}}>\r\n                            {this.props.AnalysisPunchouts ? this.props.AnalysisPunchouts.toFixed(2) : ''}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> G. Layer Information</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} container justify=\"center\" direction=\"column\" style={{minHeight: 500}}>\r\n                            <Grid className={classes.layerHolder} container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.state.CRCP, backgroundColor: '#F2F2F2'}}>\r\n                                <Grid xs item>CRCP</Grid>\r\n                                <Grid xs item>Thickness</Grid>\r\n                                {/*<Grid xs item>{this.state.CRCP}''</Grid>*/}\r\n                                <Grid xs item>{this.props.AnalysisSlabThickness}''</Grid>\r\n                            </Grid>\r\n                           {this.props.data.BaseType==='CTB'?<Grid className={classes.layerHolder} container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.state.BondBreaker, backgroundColor: '#404040', color:'white'}}>\r\n                                <Grid xs item>Bond Breaker</Grid>\r\n                                <Grid xs item>Thickness</Grid>\r\n                                <Grid xs item>≥{this.state.BondBreaker}''</Grid>\r\n                            </Grid>:''}\r\n                            <Grid container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.props.data.BaseThickness, backgroundColor: this.props.data.BaseType==='HMA'?'#b5b5b5':'#D9D9D9'}}>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item>Base</Grid>\r\n                                    <Grid xs item>Type</Grid>\r\n                                    <Grid xs item>{this.props.data.BaseType}</Grid>\r\n                                </Grid>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item></Grid>\r\n                                    <Grid xs item>Thickness</Grid>\r\n                                    <Grid xs item>{this.props.data.BaseThickness}''</Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.props.data.SubbaseThickness, backgroundColor: '#F2F2F2'}}>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item>Subbase</Grid>\r\n                                    <Grid xs item>Type</Grid>\r\n                                    <Grid xs item>{this.props.data.SubbaseType}</Grid>\r\n                                </Grid>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item></Grid>\r\n                                    <Grid xs item>Thickness</Grid>\r\n                                    <Grid xs item>{this.props.data.SubbaseThickness}''</Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.state.NaturalSoil, backgroundColor: '#FFC000'}}>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item>Natural Soil</Grid>\r\n                                    <Grid xs item>Type</Grid>\r\n                                    <Grid xs item>{this.props.data.SoilSub}</Grid>\r\n                                </Grid>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item></Grid>\r\n                                    <Grid xs item>PI</Grid>\r\n                                    <Grid xs item>{this.props.data.PlasticityIndex}</Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} container>\r\n                            <ul>\r\n                                <li>The minimum thickness for CRCP is 7 in., and the maximum thickness is 13 in.</li>\r\n                                <li>When the design slab thickness from this program is greater than 13-in, use 13-in slab. If a thickness greater than 13-in is desired, a request with justifications needs to be submitted to the District Engineer for approval.</li>\r\n                            </ul>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Report)\r\n","export default __webpack_public_path__ + \"static/media/sTable.b3ebdd77.csv\";","export default __webpack_public_path__ + \"static/media/kTable.82431430.csv\";","export default __webpack_public_path__ + \"static/media/temperature.320761a0.csv\";","import React, {Component} from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport { geoMercator, geoPath } from \"d3-geo\";\r\nimport * as topojson from \"topojson-client\";\r\nimport * as d3 from \"d3\";\r\nimport county from \"./data/texas-counties\"\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        position:'relative',\r\n        '& .label text': {\r\n          fontSize:4,\r\n            textAnchor: 'middle'\r\n        },\r\n        '& .tooltip': {\r\n          position: 'absolute',\r\n          display:'none',\r\n            pointerEvents:'none',\r\n            transform:'translate(3px,3px)'\r\n        },\r\n        '& .bold': {\r\n            fontWeight: 'bold',\r\n        },\r\n\r\n        '& .raster': {\r\n            fill: 'none',\r\n            opacity: 1\r\n        },\r\n\r\n        '& .neutral-county': {\r\n            fill: '#FFF',\r\n            opacity: 0.4\r\n        },\r\n        '& .highlighted-county': {\r\n            fill: '#C00',\r\n            opacity: 0.6\r\n        },\r\n\r\n        '& .neutral-county, .highlighted-county': {\r\n            stroke: '#6E6E6E',\r\n            strokeOpacity: 0.6,\r\n            strokeWidth: '0.7px'\r\n        },\r\n        '& .counties': {\r\n            fill: 'none',\r\n            stroke: '#6E6E6E',\r\n            strokeOpacity: 0.4,\r\n            strokeWidth: '0.5px'\r\n        },\r\n        '& .state-border': {\r\n            fill: 'none',\r\n            stroke: '#6E6E6E',\r\n            strokeOpacity: 0.7,\r\n            strokeWidth: '1px'\r\n        },\r\n        '& .city-marker': {\r\n            fill: 'none',\r\n            opacity: 0.6,\r\n            strokeWidth: '2px',\r\n            stroke: '#000'\r\n        },\r\n        '& .capital-marker': {\r\n            fill: 'goldenrod',\r\n            opacity: 1,\r\n            strokeWidth: '3px',\r\n            stroke: '#000',\r\n            strokeOpacity: 0.6\r\n        },\r\n\r\n        '& .text-note': {\r\n            fontSize: '15px',\r\n            fontWeight: 500,\r\n            color: '#000',\r\n            opacity: 0.6,\r\n            lineHeight: '18px',\r\n            margin: 0,\r\n            textShadow: '1px  1px 0 white, 1px -1px 0 white, -1px  1px 0 white, -1px -1px 0 white'\r\n        },\r\n\r\n        '& .city-label': {\r\n            textAnchor: 'middle',\r\n            margin: 0,\r\n            fontSize: '15px',\r\n            lineHeight: '14px',\r\n            fontWeight: 500,\r\n            textAlign: 'right',\r\n            opacity: 0.6,\r\n            color: '#000',\r\n            textShadow: '1px  1px 0 white, 1px -1px 0 white, -1px  1px 0 white, -1px -1px 0 white'\r\n        },\r\n\r\n        '& .legend': {\r\n            fontSize: '15px',\r\n            lineHeight: '24px',\r\n            fontWeight: 500,\r\n            color: '#333'\r\n        },\r\n\r\n        '& .label-line': {\r\n            stroke: '#000',\r\n            strokeWidth: '1.5px',\r\n            strokeOpacity: 1,\r\n            opacity: 0.8,\r\n            fill: 'none'\r\n        },\r\n\r\n        '& .state-label': {\r\n            fontWeight: 500,\r\n            textTransform: 'uppercase',\r\n            textAnchor: 'middle',\r\n            opacity: 0.3,\r\n            color: '#000',\r\n            fontSize: '24px',\r\n            lineHeight: '28px',\r\n            letterSpacing: '0.6em'\r\n        },\r\n\r\n        '& .distance-scale': {\r\n            fontSize: '11px',\r\n            lineHeight: '11px',\r\n            position: 'absolute',\r\n            fontWeight: 500,\r\n            textTransform: 'uppercase',\r\n            color: '#000'\r\n        },\r\n\r\n        '& .distance-scale-line': {\r\n            stroke: '#000',\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            opacity: 1,\r\n            fill: '#000',\r\n            shapeRendering: 'crispEdges'\r\n        }\r\n\r\n    }\r\n});\r\n\r\nclass County extends Component {\r\n    svgRef = React.createRef();\r\n    zoom = {k:1,x:0,y:0};\r\n    map_width=600;\r\n    map_height=450;\r\n\r\n    projection = geoMercator()\r\n        .center([ -99.43,31.47 ])\r\n        .translate([ this.map_width/2, this.map_height/2 ])\r\n        .scale([ 2000 ]);\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            geographies: [],\r\n            Name:undefined,\r\n            highlighto:{}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const geographies = topojson.feature(county, county.objects['texas-counties']).features;\r\n        geographies.forEach(d=>{\r\n            d.path = geoPath().projection(this.projection)(d);\r\n            d.centroid = geoPath().projection(this.projection).centroid(d);\r\n        });\r\n        const highlighto = {};\r\n        this.props.highlight.forEach(d=>highlighto[d]=1);\r\n        this.setState({geographies,highlighto});\r\n        if (this.svgRef){\r\n            let svg = d3.select(this.svgRef.current);\r\n                // .select('g.content')\r\n            svg.call(d3.zoom().scaleExtent([1, 10]).on('zoom',(event)=>{\r\n                svg.select('g.content').attr('transform', event.transform);\r\n                this.zoom = event.transform\r\n                }))\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.highlight!==this.props.highlight){\r\n            const highlighto = {};\r\n            this.props.highlight.forEach(d=>highlighto[d]=1);\r\n            this.setState({highlight:this.props.highlight,highlighto})\r\n        }\r\n        if(prevProps.target!==this.props.target){\r\n            this.setState({target:(this.props.target??'')})\r\n        }\r\n    }\r\n    render(){\r\n        const {classes} = this.props;\r\n        const {target,highlighto} = this.state;\r\n        const {geographies} = this.state;\r\n        const {map_width,map_height,projection} = this;\r\n        return <div className={classes.root}>\r\n            <svg width={ map_width } height={ map_height } viewBox={`0 0 ${map_width} ${map_height}`} ref={this.svgRef}>\r\n                <g className=\"content\">\r\n                    <g className=\"countries\">\r\n                        {\r\n                            geographies.map((d,i) => (\r\n                                <path\r\n                                    key={ `path-${ i }` }\r\n                                    d={ d.path }\r\n                                    className=\"country\"\r\n                                    // fill={ `rgba(38,50,56,${ 1 / geographies.length * i})` }\r\n                                    fill={(d.properties.NAME===target) ?'#17dd75':(highlighto[d.properties.NAME]?(this.state.Name===d.properties.NAME?'#3adddd':'steelBlue'):`rgba(38,50,56,1)` )}\r\n                                    stroke=\"#FFFFFF\"\r\n                                    strokeWidth={ 0.5 }\r\n                                    onMouseOver={(event)=>{this.setState({Name:d.properties.NAME,x:(d3.pointer(event)[0]-this.zoom.x)/this.zoom.k,y:(d3.pointer(event)[1]/this.zoom.y)/this.zoom.k});}}\r\n                                    style={{pointerEvents:highlighto[d.properties.NAME]?'all':'none'}}\r\n                                    onMouseOut={()=>{this.setState({Name:undefined})}}\r\n                                    onClick={()=>{this.props.selected(d.properties.NAME)}}\r\n                                />\r\n                            ))\r\n                        }\r\n                        {/*{*/}\r\n                        {/*    <path*/}\r\n                        {/*        key={'hovered'}*/}\r\n                        {/*        d={ geoPath().projection(projection)(d) }*/}\r\n                        {/*        className=\"country\"*/}\r\n                        {/*        // fill={ `rgba(38,50,56,${ 1 / geographies.length * i})` }*/}\r\n                        {/*        fill={(d.properties.NAME===target) ?'#17dd75':(highlighto[d.properties.NAME]?(this.state.Name===d.properties.NAME?'#3adddd':'steelBlue'):`rgba(38,50,56,1)` )}*/}\r\n                        {/*        stroke=\"#FFFFFF\"*/}\r\n                        {/*        strokeWidth={ 0.5 }*/}\r\n                        {/*        onMouseEnter={(event)=>{this.setState({Name:d.properties.NAME,x:(d3.pointer(event)[0]-this.zoom.x)/this.zoom.k,y:(d3.pointer(event)[1]/this.zoom.y)/this.zoom.k});}}*/}\r\n                        {/*        onMouseOut={()=>{this.setState({Name:undefined})}}*/}\r\n                        {/*        onClick={()=>{this.props.selected(d.properties.NAME)}}*/}\r\n                        {/*        style={{pointerEvents:'none'}}*/}\r\n                        {/*    />*/}\r\n                        {/*}*/}\r\n                    </g>\r\n                    <g className=\"label\">\r\n                        {\r\n                            geographies.map((d, i) => (\r\n                                <text\r\n                                    key={`path-${i}`}\r\n                                    // fill={ `rgba(38,50,56,${ 1 / geographies.length * i})` }\r\n                                    x={d.centroid[0]}\r\n                                    y={d.centroid[1]}\r\n                                    fill={(d.properties.NAME === target) ? 'black' : (highlighto[d.properties.NAME] ? (this.state.Name === d.properties.NAME ? 'black' : 'black') : `gray`)}\r\n                                    style={{pointerEvents: 'none'}}\r\n                                >\r\n                                    {d.properties.NAME}\r\n                                </text>\r\n                            ))\r\n                        }\r\n                    </g>\r\n                </g>\r\n                <g id={'legend'} transform={`translate(${map_width-165},${map_height-80})`} style={{fontSize:14}}>\r\n                    <g transform={`translate(${10},${-17})`}>\r\n                        <text x={-40} y={0} dy={10} fill={'#8a8a8a'}>Click on map to select County</text>\r\n                    </g>\r\n                    <g transform={`translate(${10},${13})`}>\r\n                        <rect width={10} height={10} fill={'rgba(38,50,56,1)'}/>\r\n                        <text x={15} y={0} dy={10}> Not selectable</text>\r\n                    </g>\r\n                    <g transform={`translate(${10},${33})`}>\r\n                        <rect width={10} height={10} fill={'steelBlue'}/>\r\n                        <text x={15} y={0} dy={10}> Selectable</text>\r\n                    </g>\r\n                    {/*<g transform={`translate(${10},${53})`}>*/}\r\n                    {/*    <rect width={10} height={10} fill={'#3adddd'}/>*/}\r\n                    {/*    <text x={15} y={0} dy={10}> Highlighted</text>*/}\r\n                    {/*</g>*/}\r\n                    <g transform={`translate(${10},${53})`}>\r\n                        <rect width={10} height={10} fill={'#17dd75'}/>\r\n                        <text x={15} y={0} dy={10}> Selected</text>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n            {/*<Card className=\"tooltip\" style={{display:this.state.Name?'block':'none',left:this.state.x,top:this.state.y}}>*/}\r\n            <div className=\"tooltip bold\" style={{display:this.state.Name?'block':'none',left:10,top:10, fontSize:20, padding:5,backgroundColor:'rgba(255,255,255,0.49)'}}>\r\n                {this.state.Name}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(County);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Slider,\r\n    Typography,\r\n    Button,\r\n    Paper,\r\n    Grid,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    StepContent,\r\n    TextField,\r\n    Container,\r\n    Input,\r\n    Hidden\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Graph from './Graph'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport Image from 'material-ui-image';\r\nimport DistrictPic from '../././image/District.png';\r\nimport CountyPic from '../././image/County.png';\r\nimport TrafficOneDirectionPic from '../././image/TotalDesign Traffic.png';\r\nimport StructureDesignCriteriaPic from '../././image/StructureDesignCriteria.png';\r\nimport AcceptableNumberofPunchoutPic from '../././image/AcceptableNumberofPunchout.png';\r\nimport ConcreteLayerPic from '../././image/ConcreteLayer.png';\r\nimport soilSystermPic from '../././image/soilSystermPic.png';\r\nimport subbasePic from '../././image/subbase.png';\r\nimport BasetypePic from '../././image/BasetypePic.png';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Report from \"./report\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport * as d3 from \"d3\";\r\nimport {TransformWrapper, TransformComponent} from \"react-zoom-pan-pinch\";\r\nimport sTable from \"./data/sTable.csv\";\r\n// import stress from \"./data/stress.csv\";\r\nimport kTable from \"./data/kTable.csv\";\r\nimport temperature from \"./data/temperature.csv\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Divider from \"@material-ui/core/Divider/Divider\";\r\nimport County from \"./County\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\n\r\n// const districts = {\r\n//     \"ABILENE\": [\"BORDEN\", \"CALLAHAN\", \"FISHER\", \"HASKELL\", \"HOWARD\", \"JONES\", \"KENT\", \"MITCHELL\", \"NOLAN\", \"SCURRY\", \"SHACKELFORD\", \"STONEWALL\", \"TAYLOR\"],\r\n//     \"AMARILLO\": [\"ARMSTRONG\", \"CARSON\", \"DALLAM\", \"DEAF SMITH\", \"GRAY\", \"HANSFORD\", \"HARTLEY\", \"HEMPHILL\", \"HUTCHINSON\", \"LIPSCOMB\", \"MOORE\", \"OCHILTREE\", \"OLDHAM\", \"POTTER\", \"RANDALL\", \"ROBERTS\", \"SHERMAN\"],\r\n//     \"ATLANTA\": [\"BOWIE\", \"CAMP\", \"CASS\", \"HARRISON\", \"MARION\", \"MORRIS\", \"PANOLA\", \"TITUS\", \"UPSHUR\"],\r\n//     \"AUSTIN\": [\"BASTROP\", \"BLANCO\", \"BURNET\", \"CALDWELL\", \"GILLESPIE\", \"HAYS\", \"LEE\", \"LLANO\", \"MASON\", \"TRAVIS\", \"WILLIAMSON\"],\r\n//     \"BEAUMONT\": [\"CHAMBERS\", \"HARDIN\", \"JASPER\", \"JEFFERSON\", \"LIBERTY\", \"NEWTON\", \"ORANGE\", \"TYLER\"],\r\n//     \"BROWNWOOD\": [\"BROWN\", \"COLEMAN\", \"COMANCHE\", \"EASTLAND\", \"LAMPASAS\", \"MCCULLOCH\", \"MILLS\", \"SAN SABA\", \"STEPHENS\", \"BRISCOE\", \"CHILDRESS\", \"COLLINGSWORTH\", \"COTTLE\", \"DICKENS\", \"DONLEY\", \"FOARD\", \"HALL\", \"HARDEMAN\", \"KING\", \"KNOX\", \"MOTLEY\", \"WHEELER\"],\r\n//     \"BRYAN\": [\"BRAZOS\", \"BURLESON\", \"FREESTONE\", \"GRIMES\", \"LEON\", \"MADISON\", \"MILAM\", \"ROBERTSON\", \"WALKER\", \"WASHINGTON\"],\r\n//     \"CORPUS CHRISTI\": [\"ARANSAS\", \"BEE\", \"GOLIAD\", \"JIM WELLS\", \"KARNES\", \"KLEBERG\", \"LIVE OAK\", \"NUECES\", \"REFUGIO\", \"SAN PATRICIO\"],\r\n//     \"DALLAS\": [\"COLLIN\", \"DALLAS\", \"DENTON\", \"ELLIS\", \"KAUFMAN\", \"NAVARRO\", \"ROCKWALL\"],\r\n//     \"EL PASO\": [\"BREWSTER\", \"CULBERSON\", \"EL PASO\", \"HUDSPETH\", \"JEFF DAVIS\", \"PRESIDIO\"],\r\n//     \"FORT WORTH\": [\"ERATH\", \"HOOD\", \"JACK\", \"JOHNSON\", \"PALO PINTO\", \"PARKER\", \"SOMERVELL\", \"TARRANT\", \"WISE\"],\r\n//     \"HOUSTON\": [\"BRAZORIA\", \"FORT BEND\", \"GALVESTON\", \"HARRIS\", \"MONTGOMERY\", \"WALLER\"],\r\n//     \"LAREDO\": [\"DIMMITT\", \"DUVAL\", \"KINNEY\", \"LA SALLE\", \"MAVERICK\", \"VAL VERDE\", \"WEBB\", \"ZAVALA\"],\r\n//     \"LUBBOCK\": [\"BAILEY\", \"CASTRO\", \"COCHRAN\", \"CROSBY\", \"DAWSON\", \"FLOYD\", \"GAINES\", \"GARZA\", \"HALE\", \"HOCKLEY\", \"LAMB\", \"LUBBOCK\", \"LYNN\", \"PARMER\", \"SWISHER\", \"TERRY\", \"YOAKUM\"],\r\n//     \"LUFKIN\": [\"ANGELINA\", \"HOUSTON\", \"NACOGDOCHES\", \"POLK\", \"SABINE\", \"SAN AUGUSTINE\", \"SAN JACINTO\", \"SHELBY\", \"TRINITY\"],\r\n//     \"ODESA\": [\"ANDREWS\", \"CRANE\", \"ECTOR\", \"LOVING\", \"MARTIN\", \"MIDLAND\", \"PECOS\", \"REEVES\", \"TERRELL\", \"UPTON\", \"WARD\", \"WINKLER\"],\r\n//     \"PARIS\": [\"DELTA\", \"FANNIN\", \"FRANKLIN\", \"GRAYSON\", \"HOPKINS\", \"HUNT\", \"LAMAR\", \"RAINS\", \"RED RIVER\"],\r\n//     \"PHARR\": [\"BROOKS\", \"CAMERON\", \"HIDALGO\", \"JIM HOGG\", \"KENEDY\", \"STARR\", \"WILLACY\", \"ZAPATA\"],\r\n//     \"SAN ANGELO\": [\"COKE\", \"CONCHO\", \"CROCKETT\", \"EDWARDS\", \"GLASSCOCK\", \"IRION\", \"KIMBLE\", \"MENARD\", \"REAGAN\", \"REAL\", \"RUNNELS\", \"SCHLEICHER\", \"STERLING\", \"SUTTON\", \"TOM GREEN\"],\r\n//     \"SAN ANTONIO\": [\"ATASCOSA\", \"BANDERA\", \"BEXAR\", \"COMAL\", \"FRIO\", \"GUADALUPE\", \"KENDALL\", \"KERR\", \"MCMULLEN\", \"MEDINA\", \"UVALDE\", \"WILSON\"],\r\n//     \"TYLER\": [\"ANDERSON\", \"CHEROKEE\", \"GREGG\", \"HENDERSON\", \"RUSK\", \"SMITH\", \"VAN ZANDT\", \"WOOD\"],\r\n//     \"WACO\": [\"BELL\", \"BOSQUE\", \"CORYELL\", \"FALLS\", \"HAMILTON\", \"HILL\", \"LIMESTONE\", \"MCLENNAN\"],\r\n//     \"WICHITA FALLS\": [\"ARCHER\", \"BAYLOR\", \"CLAY\", \"COOKE\", \"MONTAGUE\", \"THROCKMORTON\", \"WICHITA\", \"WILBARGER\", \"YOUNG\"],\r\n//     \"YOKUM\": [\"AUSTIN\", \"CALHOUN\", \"COLORADO\", \"DEWITT\", \"FAYETTE\", \"GONZALES\", \"JACKSON\", \"LAVACA\", \"MATAGORDA\", \"VICTORIA\", \"WHARTON\"]\r\n// };\r\nconst districts = {\r\n    \"Abilene\": [\"Borden\", \"Callahan\", \"Fisher\", \"Haskell\", \"Howard\", \"Jones\", \"Kent\", \"Mitchell\", \"Nolan\", \"Scurry\", \"Shackelford\", \"Stonewall\", \"Taylor\"],\r\n    \"Amarillo\": [\"Armstrong\", \"Carson\", \"Dallam\", \"Deaf Smith\", \"Gray\", \"Hansford\", \"Hartley\", \"Hemphill\", \"Hutchinson\", \"Lipscomb\", \"Moore\", \"Ochiltree\", \"Oldham\", \"Potter\", \"Randall\", \"Roberts\", \"Sherman\"],\r\n    \"Atlanta\": [\"Bowie\", \"Camp\", \"Cass\", \"Harrison\", \"Marion\", \"Morris\", \"Panola\", \"Titus\", \"Upshur\"],\r\n    \"Austin\": [\"Bastrop\", \"Blanco\", \"Burnet\", \"Caldwell\", \"Gillespie\", \"Hays\", \"Lee\", \"Llano\", \"Mason\", \"Travis\", \"Williamson\"],\r\n    \"Beaumont\": [\"Chambers\", \"Hardin\", \"Jasper\", \"Jefferson\", \"Liberty\", \"Newton\", \"Orange\", \"Tyler\"],\r\n    \"Brownwood\": [\"Brown\", \"Coleman\", \"Comanche\", \"Eastland\", \"Lampasas\", \"McCulloch\", \"Mills\", \"San Saba\", \"Stephens\"],\r\n    \"Bryan\": [\"Brazos\", \"Burleson\", \"Freestone\", \"Grimes\", \"Leon\", \"Madison\", \"Milam\", \"Robertson\", \"Walker\", \"Washington\"],\r\n    \"Childress\": [\"Briscoe\", \"Childress\", \"Collingsworth\", \"Cottle\", \"Dickens\", \"Donley\", \"Foard\", \"Hardeman\", \"Hall\", \"King\", \"Knox\", \"Motley\", \"Wheeler\"],\r\n    \"Corpus Christi\": [\"Aransas\", \"Bee\", \"Goliad\", \"Jim Wells\", \"Karnes\", \"Kleberg\", \"Live Oak\", \"Nueces\", \"Refugio\", \"San Patricio\"],\r\n    \"Dallas\": [\"Collin\", \"Dallas\", \"Denton\", \"Ellis\", \"Kaufman\", \"Navarro\", \"Rockwall\"],\r\n    \"El Paso\": [\"Brewster\", \"Culberson\", \"El Paso\", \"Hudspeth\", \"Jeff Davis\", \"Presidio\"],\r\n    \"Fort Worth\": [\"Erath\", \"Hood\", \"Jack\", \"Johnson\", \"Palo Pinto\", \"Parker\", \"Somervell\", \"Tarrant\", \"Wise\"],\r\n    \"Houston\": [\"Brazoria\", \"Fort Bend\", \"Galveston\", \"Harris\", \"Montgomery\", \"Waller\"],\r\n    \"Laredo\": [\"Dimmitt\", \"Duval\", \"Kinney\", \"La Salle\", \"Maverick\", \"Val Verde\", \"Webb\", \"Zavala\"],\r\n    \"Lubbock\": [\"Bailey\", \"Castro\", \"Cochran\", \"Crosby\", \"Dawson\", \"Floyd\", \"Gaines\", \"Garza\", \"Hale\", \"Hockley\", \"Lamb\", \"Lubbock\", \"Lynn\", \"Parmer\", \"Swisher\", \"Terry\", \"Yoakum\"],\r\n    \"Lufkin\": [\"Angelina\", \"Houston\", \"Nacogdoches\", \"Polk\", \"Sabine\", \"San Augustine\", \"San Jacinto\", \"Shelby\", \"Trinity\"],\r\n    \"Odesa\": [\"Andrews\", \"Crane\", \"Ector\", \"Loving\", \"Martin\", \"Midland\", \"Pecos\", \"Reeves\", \"Terrell\", \"Upton\", \"Ward\", \"Winkler\"],\r\n    \"Paris\": [\"Delta\", \"Fannin\", \"Franklin\", \"Grayson\", \"Hopkins\", \"Hunt\", \"Lamar\", \"Rains\", \"Red River\"],\r\n    \"Pharr\": [\"Brooks\", \"Cameron\", \"Hidalgo\", \"Jim Hogg\", \"Kenedy\", \"Starr\", \"Willacy\", \"Zapata\"],\r\n    \"San Angelo\": [\"Coke\", \"Concho\", \"Crockett\", \"Edwards\", \"Glasscock\", \"Irion\", \"Kimble\", \"Menard\", \"Reagan\", \"Real\", \"Runnels\", \"Schleicher\", \"Sterling\", \"Sutton\", \"Tom Green\"],\r\n    \"San Antonio\": [\"Atascosa\", \"Bandera\", \"Bexar\", \"Comal\", \"Frio\", \"Guadalupe\", \"Kendall\", \"Kerr\", \"McMullen\", \"Medina\", \"Uvalde\", \"Wilson\"],\r\n    \"Tyler\": [\"Anderson\", \"Cherokee\", \"Gregg\", \"Henderson\", \"Rusk\", \"Smith\", \"Van Zandt\", \"Wood\"],\r\n    \"Waco\": [\"Bell\", \"Bosque\", \"Coryell\", \"Falls\", \"Hamilton\", \"Hill\", \"Limestone\", \"McLennan\"],\r\n    \"Wichita Falls\": [\"Archer\", \"Baylor\", \"Clay\", \"Cooke\", \"Montague\", \"Throckmorton\", \"Wichita\", \"Wilbarger\", \"Young\"],\r\n    \"Yokum\": [\"Austin\", \"Calhoun\", \"Colorado\", \"DeWitt\", \"Fayette\", \"Gonzales\", \"Jackson\", \"Lavaca\", \"Matagorda\", \"Victoria\", \"Wharton\"]\r\n};\r\nconst districtCode = {\r\n    \"Abilene\": \"ABL\",\r\n    \"Amarillo\": \"AMA\",\r\n    \"Atlanta\": \"ATL\",\r\n    \"Austin\": \"AUS\",\r\n    \"Beaumont\": \"BMT\",\r\n    \"Bryan\": \"BRY\",\r\n    \"Brownwood\": \"BWD\",\r\n    \"Corpus christi\": \"CRP\",\r\n    \"Childress\": \"CHS\",\r\n    \"Dallas\": \"DAL\",\r\n    \"El paso\": \"ELP\",\r\n    \"Fort worth\": \"FTW\",\r\n    \"Houston\": \"HOU\",\r\n    \"Lubbock\": \"LBB\",\r\n    \"Lufkin\": \"LFK\",\r\n    \"Laredo\": \"LRD\",\r\n    \"Odesa\": \"ODA\",\r\n    \"Paris\": \"PAR\",\r\n    \"Pharr\": \"PHR\",\r\n    \"San antonio\": \"SAT\",\r\n    \"San angelo\": \"SJT\",\r\n    \"Tyler\": \"TYL\",\r\n    \"Waco\": \"WAC\",\r\n    \"Wichita falls\": \"WFS\",\r\n    \"Yokum\": \"YKM\"\r\n};\r\nconst counties = {};\r\nObject.keys(districts).forEach(key => {\r\n    districts[key].forEach(c => counties[c] ? counties[c].push(key) : counties[c] = [key])\r\n});\r\nconst highway = [\"IH 45\", \"US 290\", \"IH 30\", \"US 59\", \"IH 35W\", \"IH 820\", \"IH 10\", \"IH 40\", \"IH 35\", \"US 287\", \"US 81\", \"IH 27\", \"SL 289\", \"SH 226\", \"SH 36\", \"US 83B\", \"VA\", \"FM 3129\", \"IH 20\", \"US 71\", \"US 79\", \"US 47\", \"US 67\", \"BU90-Y\", \"CS\", \"FM 1960\", \"FM 364\", \"FM 365\", \"SH 347\", \"SH 105\", \"SH 12\", \"SH 124\", \"SH 146\", \"SH 326\", \"SH 61\", \"SH 73\", \"SH 87\", \"SS 380\", \"US 90\", \"US 69\", \"US 96\", \"BS6-R\", \"SH 21\", \"BW 8\", \"US 83\", \"BS 121H\", \"FM 1171\", \"FM 1382\", \"FM 2499\", \"FM 709\", \"FM 740\", \"IH 35E\", \"IH4 5\", \"IH 635\", \"LP 12\", \"LP 354\", \"MH\", \"SH 289\", \"SH 31\", \"SH 66\", \"SH 78\", \"SH 114\", \"SH 121\", \"SH 161\", \"SH 180\", \"SH 183\", \"SH 310\", \"SH 34\", \"SH 342\", \"SH 356\", \"SL 12\", \"SL 288\", \"SP 244\", \"SP 348\", \"SP 366\", \"SPUR 354\", \"US 175\", \"US 380\", \"US 75\", \"US 77\", \"US 377\", \"US 80\", \"US 54\", \"BU 287P\", \"FM 157\", \"IH 820 \", \"SH 199\", \"SH 26\", \"SH 360\", \"FM 1764\", \"FM 523\", \"FM 1092\", \"FM 1488\", \"FM 518\", \"IH 610\", \"SH 288\", \"SH 332\", \"SH 225\", \"SH 242\", \"SH 249\", \"SH 35\", \"US 90A\", \"IH27\", \"SH 7\", \"FM 1472\", \"LP 20\", \"ODA 181-1\", \"ODA 181-2\", \"ODA 250-1\", \"ODA 250-2\", \"US 82\", \"SH 6\", \"FM 85\", \"LP 281\", \"LP 323\", \"SH 19\", \"SH 198\", \"SH 334\", \"US 259\", \"US 281\", \"FM 1695\", \"FM 3476\", \"FM 933\", \"IH 36\", \"LP 363\", \"SH 195\", \"US 84\", \"BU 287J\", \"IH 44\", \"SH 240\", \"SP 1027 \", \"US 287 \", \"US 55\", \"US 70\", \"SH 71\"];\r\n// const baseType = [\"CTB\", \"HMA Base\"];\r\nconst soilClassSub = [\"GW\", \"GP\", \"GM\", \"GC\", \"SW\", \"SP\", \"SM\", \"SC\", \"ML\", \"CL\", \"OL\", \"MH\", \"CH\", \"OH\", \"Pt\"];\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        '& .MuiTextField-root': {\r\n            width: '100%',\r\n        },\r\n        '& input': {\r\n            width: '100%',\r\n        },\r\n        '& input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button': {\r\n            opacity: 1\r\n        }\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n        paddingTop: theme.spacing(8)\r\n    },\r\n    dot: {\r\n        borderBottom: '2px dotted',\r\n        marginBottom: '4px'\r\n    },\r\n    helpHolder: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    inputWithHelper: {\r\n        '& label': {\r\n            pointerEvents: 'all'\r\n        }\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n        zIndex: 2\r\n    },\r\n    capitalize: {\r\n        textTransform: 'capitalize'\r\n    }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const {children, classes, onClose, ...other} = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" size=\"small\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\nconst init = {\r\n    activeStep: 0,\r\n    stepsLength: 3,\r\n    finished: false,\r\n    DesignLife: 30,\r\n    PunchoutsPerMile: 10,\r\n    LanesOneDirection: 2,\r\n    TrafficOneDirection: 100,\r\n    ModulusOfRupture: 570,\r\n    ElasticModulue: 5,\r\n    SoilClassificationSystem: 'USCS',\r\n    SoilSub: \"CH\",\r\n    PlasticityIndex: 8,\r\n    SubbaseType: \"LTS\",\r\n    SubbaseThickness: 12,\r\n    BaseType: '',\r\n    BaseThickness: 6,\r\n    BaseThicknessMin: 2,\r\n    BaseThicknessMax: 6,\r\n    ModulusBase: 400,\r\n    CompositeK: 539,\r\n    District: null,\r\n    County: null,\r\n    Highway: null,\r\n    ProjectScope: null,\r\n    StationBegin: null,\r\n    StationEnd: null,\r\n    currentDistricts: Object.keys(districts),\r\n    currentCounties: Object.keys(counties),\r\n    SubbaseThicknessThreshHold: -1,\r\n    SubbaseTypeOpt: ['Lime treated subgrade',\r\n        'Cement treated subgrade',\r\n        'Select fill',\r\n        'No treatment'\r\n    ],\r\n    baseTypeOpt: [\"CTB\", \"HMA\"],\r\n    ksTable: new Map(),\r\n    ssTable: [],\r\n    temperature: [],\r\n}\r\n\r\nclass CRCP extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {...init};\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if ((prevState.ModulusBase !== this.state.ModulusBase) || (prevState.SoilSub !== this.state.SoilSub) || (prevState.BaseThickness !== this.state.BaseThickness)) {\r\n            this.calculateCompositeK();\r\n        }\r\n        if(this.state.printRequest&& this.state.isBackdropOpen){\r\n            window.print();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initFunc();\r\n    }\r\n\r\n    initFunc() {\r\n        d3.csv(kTable).then(_data => {\r\n            let ksTable = new Map();\r\n            _data.forEach(r => {\r\n                ksTable.set('' + r['Subgrade K-Value (psi/in.)'] + ' ' + r['Base Thickness (in.)'] + ' ' + r['Modulus of Base Layer (ksi)'], +r['Composite K (psi/in.)']);\r\n            });\r\n            this.setState({ksTable})\r\n        })\r\n        d3.csv(sTable).then(_data => {\r\n            this.setState({ssTable: _data})\r\n        })\r\n        d3.csv(temperature).then(_data => {\r\n            this.setState({temperature: _data})\r\n        })\r\n        this.handlePlasticityIndex(this.state.PlasticityIndex);\r\n    }\r\n\r\n    computeStress = (SlabThickness) => { // F7\r\n        let input = {\r\n            H: {Input: SlabThickness, \"L Bound\": 0, \"U Bound\": 0},\r\n            K: {Input: this.state.CompositeK, \"L Bound\": 0, \"U Bound\": 0}\r\n        }\r\n        input.H[\"L Bound\"] = (input.H.Input >= 15.5) ? 15.5 : ((input.H.Input < 6.5) ? 6 : Math.floor(input.H.Input * 2) / 2);\r\n        input.H[\"U Bound\"] = (input.H.Input >= 15.5) ? 16 : ((input.H.Input < 6.5) ? 6.5 : Math.ceil(input.H.Input * 2 + 1) / 2);\r\n        const B3 = input.K.Input;\r\n        input.K[\"L Bound\"] = (B3 < 100 ? 50 : (B3 < 300 ? 100 : (B3 < 500 ? 300 : (B3 < 700 ? 500 : (B3 < 1000 ? 700 : (B3 < 1300 ? 1000 : (B3 >= 1300 ? 1300 : 0)))))));\r\n        input.K[\"U Bound\"] = (B3 < 100 ? 100 : (B3 < 300 ? 300 : (B3 < 500 ? 500 : (B3 < 700 ? 700 : (B3 < 1000 ? 1000 : (B3 < 1300 ? 1300 : (B3 >= 1300 ? 1600 : 0)))))));\r\n        const mapd2 = {};\r\n        let lastd2 = {index: 1, DT: 0, H: 0, K: 0, STR_T: 0, STR_E: 0};\r\n        this.state.ssTable.forEach(s => {\r\n            const B2 = +s[\"Thickness of Concrete Layer (in.)\"];\r\n            const A2 = +s[\"Temperature Change (F)\"];\r\n            const C2 = +s[\"Composite K (psi/in.)\"];\r\n            const D2 = +s[\"Concrete Stress (T) (psi)\"];\r\n            const E2 = +s[\"Concrete Stress (E) (psi)\"];\r\n\r\n            const DT = ((B2 - input.H[\"L Bound\"]) * (B2 - input.H[\"U Bound\"])) === 0 ? ((C2 - input.K[\"L Bound\"]) * (C2 - input.K[\"U Bound\"]) === 0 ? A2 : 0) : 0;\r\n            const H = ((B2 - input.H[\"L Bound\"]) * (B2 - input.H[\"U Bound\"])) === 0 ? ((C2 - input.K[\"L Bound\"]) * (C2 - input.K[\"U Bound\"]) === 0 ? B2 : 0) : 0;\r\n            const K = ((B2 - input.H[\"L Bound\"]) * (B2 - input.H[\"U Bound\"])) === 0 ? ((C2 - input.K[\"L Bound\"]) * (C2 - input.K[\"U Bound\"]) === 0 ? C2 : 0) : 0;\r\n            const STR_T = ((B2 - input.H[\"L Bound\"]) * (B2 - input.H[\"U Bound\"])) === 0 ? ((C2 - input.K[\"L Bound\"]) * (C2 - input.K[\"U Bound\"]) === 0 ? D2 : 0) : 0;\r\n            const STR_E = ((B2 - input.H[\"L Bound\"]) * (B2 - input.H[\"U Bound\"])) === 0 ? ((C2 - input.K[\"L Bound\"]) * (C2 - input.K[\"U Bound\"]) === 0 ? E2 : 0) : 0;\r\n            const index = DT === 0 ? (lastd2.DT === 0 ? lastd2.index : lastd2.index + 1) : (lastd2.DT === 0 ? lastd2.index : lastd2.index + 1);\r\n            mapd2[index] = {index, DT, H, K, STR_T, STR_E};\r\n            lastd2 = {index, DT, H, K, STR_T, STR_E};\r\n        });\r\n        debugger\r\n        const data3 = [];\r\n        for (let i = 1; i < 25; i++) {\r\n            const index = Math.floor((i - 1) / 4) * 4 + 1;\r\n            const DT = mapd2[index].DT;\r\n            const H = mapd2[Math.floor((i - 1) / 2) * 2 + 1].H;\r\n            if (!mapd2[i])\r\n                debugger\r\n            const {K, STR_T, STR_E} = mapd2[i];\r\n            data3.push({DT, H, K, STR_T, STR_E})\r\n        }\r\n        const data4 = [];\r\n        for (let i = 0; i < 12; i++) {\r\n            const Q2 = data3[i * 2].STR_T;\r\n            const Q3 = data3[i * 2 + 1].STR_T;\r\n            const R2 = data3[i * 2].STR_E;\r\n            const R3 = data3[i * 2 + 1].STR_E;\r\n            const STR_T = ((Q3 - Q2) * input.K.Input + (Q2 * input.K['U Bound'] - Q3 * input.K['L Bound'])) / (input.K['U Bound'] - input.K['L Bound']);\r\n            const STR_E = ((R3 - R2) * input.K.Input + (R2 * input.K['U Bound'] - R3 * input.K['L Bound'])) / (input.K['U Bound'] - input.K['L Bound']);\r\n            data4.push({STR_T, STR_E})\r\n        }\r\n        const data5 = [];\r\n        for (let i = 0; i < 6; i++) {\r\n            const W2 = data4[i * 2].STR_T;\r\n            const W4 = data4[i * 2 + 1].STR_T;\r\n            const X2 = data4[i * 2].STR_E;\r\n            const X4 = data4[i * 2 + 1].STR_E;\r\n            const STR_T = ((W4 - W2) * input.H.Input + (W2 * input.H['U Bound'] - W4 * input.H['L Bound'])) / (input.H['U Bound'] - input.H['L Bound']);\r\n            const STR_E = ((X4 - X2) * input.H.Input + (X2 * input.H['U Bound'] - X4 * input.H['L Bound'])) / (input.H['U Bound'] - input.H['L Bound']);\r\n            data5.push({STR_T, STR_E})\r\n        }\r\n        const districtemp = this.state.temperature.filter(d => d.District === districtCode[this.state.District]);\r\n        const stress = districtemp.map((t, ti) => {\r\n            const AveragetTemperature = +t['Average Temperature (F)'];\r\n            const DT = 120 - AveragetTemperature;\r\n            const H = input.H.Input;\r\n            const K = input.K.Input;\r\n            const STR_T = getSTR_T(DT);\r\n            const STR_E = getSTR_E(DT);\r\n            if (ti === 3)\r\n                debugger\r\n            return {\r\n                'District': this.state.District, 'Month': ti + 1, 'Average Temperature': AveragetTemperature,\r\n                DT, H, K, 'STR (T)': STR_T, 'STR (E)': STR_E\r\n            }\r\n        });\r\n\r\n        function getSTR_T(DT) {\r\n            if (DT >= 95)\r\n                return (data5[5].STR_T - data5[4].STR_T) / (data3[20].DT - data3[16].DT) * (DT - data3[20].DT) + data5[5].STR_T;\r\n            if ((DT >= 65) && (DT < 95))\r\n                return (data5[5].STR_T - data5[4].STR_T) / (data3[20].DT - data3[16].DT) * (DT - data3[16].DT) + data5[4].STR_T;\r\n            if ((DT >= 35) && (DT < 65))\r\n                return (data5[4].STR_T - data5[3].STR_T) / (data3[16].DT - data3[12].DT) * (DT - data3[12].DT) + data5[3].STR_T;\r\n            if ((DT >= 5) && (DT < 35))\r\n                return (data5[3].STR_T - data5[2].STR_T) / (data3[12].DT - data3[8].DT) * (DT - data3[8].DT) + data5[2].STR_T;\r\n            if ((DT >= -25) && (DT < 5))\r\n                return (data5[2].STR_T - data5[1].STR_T) / (data3[8].DT - data3[4].DT) * (DT - data3[4].DT) + data5[1].STR_T;\r\n            if ((DT >= -55) && (DT < -25))\r\n                return (data5[1].STR_T - data5[0].STR_T) / (data3[4].DT - data3[0].DT) * (DT - data3[0].DT) + data5[0].STR_T;\r\n            return (data5[1].STR_T - data5[0].STR_T) / (data3[4].DT - data3[0].DT) * (DT - data3[0].DT) + data5[0].STR_T;\r\n        }\r\n\r\n        function getSTR_E(DT) {\r\n            if (DT >= 95)\r\n                return (data5[5].STR_E - data5[4].STR_E) / (data3[20].DT - data3[16].DT) * (DT - data3[20].DT) + data5[5].STR_E;\r\n            if ((DT >= 65) && (DT < 95))\r\n                return (data5[5].STR_E - data5[4].STR_E) / (data3[20].DT - data3[16].DT) * (DT - data3[16].DT) + data5[4].STR_E;\r\n            if ((DT >= 35) && (DT < 65))\r\n                return (data5[4].STR_E - data5[3].STR_E) / (data3[16].DT - data3[12].DT) * (DT - data3[12].DT) + data5[3].STR_E;\r\n            if ((DT >= 5) && (DT < 35))\r\n                return (data5[3].STR_E - data5[2].STR_E) / (data3[12].DT - data3[8].DT) * (DT - data3[8].DT) + data5[2].STR_E;\r\n            if ((DT >= -25) && (DT < 5))\r\n                return (data5[2].STR_E - data5[1].STR_E) / (data3[8].DT - data3[4].DT) * (DT - data3[4].DT) + data5[1].STR_E;\r\n            if ((DT >= -55) && (DT < -25))\r\n                return (data5[1].STR_E - data5[0].STR_E) / (data3[4].DT - data3[0].DT) * (DT - data3[0].DT) + data5[0].STR_E;\r\n            return (data5[1].STR_E - data5[0].STR_E) / (data3[4].DT - data3[0].DT) * (DT - data3[0].DT) + data5[0].STR_E;\r\n        }\r\n\r\n        // for (let i = 0;i<12;i++) {\r\n        //     const item = {'District'\t'Month'\t'Average' 'Temperature'\tDT\tH\tK\tSTR (T)\tSTR (E)}\r\n        // }\r\n        // this.setState({data: stress});\r\n        return stress;\r\n    }\r\n    recompute = () => {\r\n        let __ret = {};\r\n        let i = 7;\r\n        for (i = 7; i < 16; i++) {\r\n            __ret = this.analysis(i);\r\n            if (__ret.rows[__ret.r][12] <= this.state.PunchoutsPerMile)\r\n                break;\r\n        }\r\n        let rowIndexStress = __ret.rowIndexStress;\r\n        let row1 = __ret.row1;\r\n        const rows = __ret.rows;\r\n        var r = __ret.r;\r\n        this.props.AnalysisPunchouts(rows[r][12]);\r\n        // this.props.AnalysisSlabThickness(Math.min(13,i));\r\n        this.props.AnalysisSlabThickness(Math.min(i, 15));\r\n        this.setState({row1, rows, rowIndexStress})\r\n    };\r\n\r\n    analysis(slabthickness) {\r\n        const data = this.computeStress(slabthickness);\r\n        let rowIndexStress = 8;\r\n        let row1 = [];\r\n        const rows = [];\r\n        row1.push(1);\r\n        row1.push(row1[0] / 12);\r\n        row1.push(this.state.ModulusOfRupture);\r\n        row1.push(57000 / 7.5 * row1[2] / 1000);\r\n        row1.push(+data[rowIndexStress - 2][\"STR (T)\"]);\r\n        row1.push(data[rowIndexStress - 2][\"STR (E)\"] * row1[3] / 5000)\r\n        row1.push(row1[4] + row1[5])\r\n        row1.push(row1[6] / row1[2])\r\n        row1.push(11800 * Math.pow(row1[7], fatigue(this.state.CompositeK)))\r\n        row1.push(lane(this.state.LanesOneDirection)\r\n            * this.state.TrafficOneDirection * 1000000 / 12 / this.state.DesignLife)\r\n        row1.push(row1[9] / row1[8])\r\n        row1.push(row1[10])\r\n        row1.push(18.985 / (1 + 5 * Math.pow(row1[11], -1.1)))\r\n        rows.push(row1);    // Add to the array\r\n\r\n        //console.log(+document.getElementById(\"DesignLife\").value);\r\n        for (var i = 1; i <= this.state.DesignLife; i++) {\r\n            //debugger;\r\n            if (i !== 1)\r\n                rowIndexStress = 7;\r\n            for (var j = 0; j < 12; j++) {\r\n                if (i == 1 && j == 0)\r\n                    ;\r\n                    //If counterYear = 1 And counterMonth = 1 Then\r\n                //      'If First Year than Omit Calculation of First Month, Already Done\r\n                else {\r\n                    rowIndexStress = rowIndexStress + 1\r\n                    let row2 = [];\r\n                    row2.push(row1[0] + 1)\r\n                    row2.push(row2[0] / 12);\r\n                    // Cells(rowIndex, 2) = Cells(rowIndex, 1).Value / 12\r\n                    row2.push(this.state.ModulusOfRupture\r\n                        * Math.pow((30 * row2[0] / (4 + 0.85 * 30 * row2[0])), 0.5));\r\n                    // Cells(rowIndex, 3) = Sheets(\"Input\").Range(\"F8\").Value * ((30 * Cells(rowIndex, 1).Value / (4 + 0.85 * 30 * Cells(rowIndex, 1).Value))) ^ 0.5\r\n                    row2.push(57000 / 7.5 * row2[2] / 1000);\r\n                    // Cells(rowIndex, 4) = 57000 / 7.5 * Cells(rowIndex, 3) / 1000\r\n                    row2.push(+data[rowIndexStress - 2][\"STR (T)\"]);\r\n                    // Cells(rowIndex, 5) = Sheets(\"Stress\").Cells(rowIndexStress, 38).Value\r\n                    row2.push(data[rowIndexStress - 2][\"STR (E)\"] * row2[3] / 5000);\r\n                    // Cells(rowIndex, 6) = Sheets(\"Stress\").Cells(rowIndexStress, 39).Value * Cells(rowIndex, 4) / 5000\r\n                    row2.push(row2[4] + row2[5]);\r\n                    // Cells(rowIndex, 7) = Cells(rowIndex, 5).Value + Cells(rowIndex, 6).Value\r\n                    row2.push(row2[6] / row2[2]);\r\n                    // Cells(rowIndex, 8) = Cells(rowIndex, 7).Value / Cells(rowIndex, 3).Value\r\n                    row2.push(11800 * Math.pow(row2[7], fatigue(this.state.CompositeK)));\r\n                    // Cells(rowIndex, 9) = 11800 * Cells(rowIndex, 8).Value ^ fatigue(Sheets(\"Input\").Range(\"CompositeK\").Value)\r\n                    row2.push(row1[9]);\r\n                    // Cells(rowIndex, 10) = Cells(rowIndex - 1, 10).Value\r\n                    row2.push(row2[9] / row2[8]);\r\n                    // Cells(rowIndex, 11) = Cells(rowIndex, 10).Value / Cells(rowIndex, 9).Value\r\n                    row2.push(row1[11] + row2[10])\r\n                    // Cells(rowIndex, 12) = Cells(rowIndex - 1, 12).Value + Cells(rowIndex, 11).Value\r\n                    row2.push(18.985 / (1 + 5 * Math.pow(row2[11], -1.1)))\r\n                    // Cells(rowIndex, 13) = 18.985 / (1 + 5 * Cells(rowIndex, 12).Value ^ -1.1)\r\n                    if (rowIndexStress == 13)\r\n                        rowIndexStress = 1\r\n                    rows.push(row2);\r\n                    row1 = row2;\r\n                }\r\n            }\r\n        }\r\n        var r = 12 * this.state.DesignLife - 1;\r\n        return {rowIndexStress, row1, rows, r};\r\n\r\n        function lane(n) {\r\n            if (n <= 2)\r\n                return 1;\r\n            else if (n >= 4)\r\n                return 0.6;\r\n            else\r\n                return 0.7;\r\n        }\r\n\r\n        function fatigue(k) {\r\n            if (k < 200)\r\n                return k * 0.0221 - 15.97;\r\n            else if (k < 300)\r\n                return k * 0.0164 - 14.83;\r\n            else if (k < 500)\r\n                return k * 0.0038 - 11.05;\r\n            else if (k < 1000)\r\n                return k * 0.00033 - 9.31;\r\n            else\r\n                return k * 0.00071 - 9.69;\r\n        }\r\n    }\r\n\r\n    warningFunc = {\r\n        Step3: {\r\n            'SubbaseThickness': () => this.state.SubbaseThickness < this.state.SubbaseThicknessThreshHold ? `Should greater than ${this.state.SubbaseThicknessThreshHold}` : null,\r\n        }\r\n    };\r\n\r\n    errorFunc = {\r\n        Step3: {\r\n            // 'SubbaseThickness': () => this.state.SubbaseThickness < this.state.SubbaseThicknessThreshHold ? `Must greater than ${this.state.SubbaseThicknessThreshHold}` : (this.state.SubbaseThickness === '' ? 'Required' : null),\r\n            'SubbaseThickness': () => (this.state.SubbaseThickness === '' ? 'Required' : null),\r\n            'BaseThickness': () => (this.state.BaseThickness < this.state.BaseThicknessMin) ? `≥ ${this.state.BaseThicknessMin}` : (this.state.BaseThickness === '' ? 'Required' : null)\r\n        }\r\n    };\r\n\r\n    handleNext = () => {\r\n        this.setState({activeStep: this.state.activeStep + 1});\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.setState({activeStep: this.state.activeStep - 1});\r\n    };\r\n\r\n    handleModify = () => {\r\n        this.setState({activeStep: 0, finished: false});\r\n    };\r\n\r\n    handleReset = () => {\r\n        this.setState({...init});\r\n        this.initFunc();\r\n    };\r\n    onLoadInput = (event) => {\r\n        const self = this;\r\n        var reader = new FileReader();\r\n        reader.addEventListener(\"load\", parseFile, false);\r\n        if (event.target.files[0]) {\r\n            debugger\r\n            reader.readAsText(event.target.files[0]);\r\n        }\r\n\r\n        function parseFile() {\r\n            let loaded = false;\r\n            var data = JSON.parse(reader.result);\r\n            loaded = true;\r\n            const currentState = JSON.stringify(self.state);\r\n            try {\r\n                self.setState(data);\r\n                event.target.value = ''\r\n            } catch (e) {\r\n                window.alert(\"Can't read file. Please check format!\")\r\n                if (loaded)\r\n                    self.setState(JSON.parse(currentState))\r\n                event.target.value = ''\r\n            }\r\n        }\r\n    }\r\n    onSaveInput = () => {\r\n        let filename = `txDoT_${this.state.District}_${new Date().toISOString().replace('.', '|')}`;\r\n        let saveDataKey = ['DesignLife', 'PunchoutsPerMile', 'LanesOneDirection', 'TrafficOneDirection', 'ModulusOfRupture',\r\n            'ElasticModulue', 'SoilClassificationSystem', 'SoilSub', 'PlasticityIndex', 'SubbaseType',\r\n            'SubbaseThickness', 'BaseType', 'BaseThickness', 'BaseThicknessMin', 'ModulusBase',\r\n            'CompositeK', 'District', 'County', 'Highway', 'ProjectScope', 'StationBegin', 'StationEnd',\r\n            'currentDistricts', 'currentCounties', 'SubbaseThicknessThreshHold', 'SubbaseTypeOpt', 'baseTypeOpt'];\r\n        const saveData = {};\r\n        saveDataKey.forEach(k => saveData[k] = this.state[k]);\r\n        const jsonse = JSON.stringify(saveData);\r\n        let blob = new Blob([jsonse], {type: \"application/json\"});\r\n\r\n        // Specify link url\r\n        let url = URL.createObjectURL(blob);\r\n        // Specify file name\r\n        filename = filename ? filename + '.json' : 'txDot.json';\r\n\r\n        // Create download link element\r\n        let downloadLink = document.createElement(\"a\");\r\n\r\n        document.body.appendChild(downloadLink);\r\n\r\n        if (navigator.msSaveOrOpenBlob) {\r\n            navigator.msSaveOrOpenBlob(blob, filename);\r\n        } else {\r\n            // Create a link to the file\r\n            downloadLink.href = url;\r\n\r\n            // Setting the file name\r\n            downloadLink.download = filename;\r\n\r\n            //triggering the function\r\n            downloadLink.click();\r\n        }\r\n\r\n        document.body.removeChild(downloadLink);\r\n    }\r\n\r\n    handleOpenHelper = (content, freeze) => (event) => {\r\n        if (this.state.helperEl) {\r\n            if (this.state.helperEl.el === event.currentTarget && freeze && this.state.helperEl.freeze) // same target\r\n                this.handleCloseHelper(event);\r\n            else {\r\n                if (freeze || this.state.helperEl.el !== event.currentTarget && freeze)\r\n                    this.setState({helperEl: {el: event.currentTarget, content, freeze}})\r\n            }\r\n        } else {\r\n            this.setState({helperEl: {el: event.currentTarget, content, freeze}})\r\n        }\r\n    };\r\n\r\n    handleCloseHelper = (source) => {\r\n        if (source.type !== 'mouseleave' || source.type === 'mouseleave' && this.state.helperEl && (!this.state.helperEl.freeze))\r\n            this.setState({helperEl: undefined})\r\n    };\r\n\r\n    handleBlurSliderInput = (key, min, max) => {\r\n        const value = this.state[key];\r\n        const obj = {};\r\n        if (value < min) {\r\n            obj[key] = min;\r\n            this.setState(obj);\r\n        } else if (value > max) {\r\n            obj[key] = max;\r\n            this.setState(obj);\r\n        }\r\n    }\r\n    handleChangeSliderInput = (event, key) => {\r\n        const obj = {};\r\n        obj[key] = event.target.value === '' ? '' : Number(event.target.value);\r\n        this.setState(obj);\r\n    }\r\n    handleChange = (key, value) => {\r\n        const obj = {};\r\n        obj[key] = value;\r\n        this.setState(obj);\r\n    };\r\n    handleSoilSub = (value) => {\r\n        let baseTypeOpt = [\"CTB\", \"HMA\"];\r\n        let BaseType = this.state.BaseType;\r\n        if (this.state.PlasticityIndex >= 15) {\r\n            if ([\"ML\", \"CL\", \"OL\", \"MH\", \"CH\", \"OH\"].indexOf(value) !== -1) {\r\n                baseTypeOpt = [\"CTB\"];\r\n                BaseType = \"CTB\";\r\n            }\r\n        }\r\n        this.setState({SoilSub: value, baseTypeOpt, BaseType});\r\n    };\r\n    handleBaseType = (value) => {\r\n        let BaseThicknessMin = 4;\r\n        let BaseThicknessMax = 6;\r\n        let BaseThickness = this.state.BaseThickness;\r\n        let ModulusBase = 400;\r\n        if (value === 'CTB') {\r\n            BaseThicknessMin = 6;\r\n            ModulusBase = 500;\r\n        }\r\n        if(value === 'HMA'){\r\n            BaseThicknessMax = 4;\r\n        }\r\n        if (BaseThickness < BaseThicknessMin)\r\n            BaseThickness = BaseThicknessMin;\r\n        if (BaseThickness > BaseThicknessMax)\r\n            BaseThickness = BaseThicknessMax;\r\n        this.setState({BaseType: value, BaseThicknessMin, BaseThickness, ModulusBase});\r\n    }\r\n    handlePlasticityIndex = (value) => {\r\n        let SubbaseTypeOpt = [];\r\n        let SubbaseThicknessThreshHold = -1;\r\n        if (value < 15) {\r\n            SubbaseTypeOpt = ['Cement treated subgrade', 'Select fill', 'No treatment'];\r\n        } else if (value < 35) {\r\n            SubbaseTypeOpt = ['Lime treated subgrade','Cement treated subgrade',\r\n                'Select fill', 'No treatment'];\r\n        } else {\r\n            SubbaseTypeOpt = ['Lime treated subgrade',\r\n                'Select fill', 'No treatment'];\r\n            SubbaseThicknessThreshHold = 8;\r\n        }\r\n        this.setState({PlasticityIndex: value, SubbaseTypeOpt, SubbaseThicknessThreshHold});\r\n        this.handleBaseType(this.state.BaseType);\r\n    };\r\n    calculateCompositeK = () => {\r\n        const {ModulusBase, SoilSub, BaseThickness, ksTable} = this.state;\r\n        debugger\r\n        this.setState({CompositeK: ksTable.get('' + getSubgradeValue(SoilSub) + ' ' + Math.round(BaseThickness) + ' ' + getModulusBase(ModulusBase))});\r\n\r\n        function getSubgradeValue(SoilSub) {\r\n            switch (SoilSub) {\r\n                case \"A-1-a\":\r\n                case \"A-2-4\":\r\n                case \"A-2-5\":\r\n                case \"GW\":\r\n                case \"GP\":\r\n                case \"GM\":\r\n                case \"SM\":\r\n                    return 300;\r\n                case \"A-1-b\":\r\n                case \"SW\":\r\n                    return 200;\r\n                case \"A-3\":\r\n                case \"A-2-6\":\r\n                case \"A-2-7\":\r\n                case \"SP\":\r\n                case \"GC\":\r\n                case \"SC\":\r\n                    return 150;\r\n                case \"A-7-6\":\r\n                case \"CH\":\r\n                case \"OH\":\r\n                    return 50;\r\n                case \"A-4\":\r\n                case \"A-5\":\r\n                case \"A-7-5\":\r\n                case \"ML\":\r\n                case \"OL\":\r\n                case \"MH\":\r\n                case \"CL\":\r\n                    return 25;\r\n            }\r\n        }\r\n\r\n        function getModulusBase(ModulusBase) {\r\n            if (ModulusBase <= 100)\r\n                return Math.round(ModulusBase / 10) * 10;\r\n            else if ((ModulusBase > 100) && (ModulusBase < 1000) && ((ModulusBase % 50) < 25))\r\n                return ModulusBase - (ModulusBase % 50)\r\n            else if ((ModulusBase > 100) && (ModulusBase < 1000) && ((ModulusBase % 50) >= 25))\r\n                return ModulusBase + 50 - (ModulusBase % 50)\r\n            else if (ModulusBase >= 1000)\r\n                return Math.round(ModulusBase / 100) * 100;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        const {isBackdropOpen} = this.state;\r\n        const getGroupControl = () => {\r\n            return <div className={classes.actionsContainer}>\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={this.props.toMenu}\r\n                        className={classes.button}\r\n                        startIcon={<HomeIcon/>}\r\n                    >\r\n                        To Main Menu\r\n                    </Button>\r\n                    <Button\r\n                        disabled={this.state.activeStep === 0}\r\n                        onClick={this.handleBack}\r\n                        className={classes.button}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                    <Button\r\n                        disabled={!this.state.District || this.errorFunc.Step3.BaseThickness() || this.errorFunc.Step3.SubbaseThickness()}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleNext}\r\n                        className={classes.button}\r\n                    >\r\n                        {this.state.activeStep === this.state.stepsLength - 1 ? 'Finish' : 'Next'}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        }\r\n        if ((this.state.activeStep === this.state.stepsLength) && !this.state.finished) {\r\n            this.setState({finished: true});\r\n            this.recompute();\r\n        }\r\n        return (<Container maxWidth=\"lg\"> <Paper elevation={3}>\r\n            <Grid container>\r\n                <Grid item style={{maxWidth: this.state.finished ? '220px' : '100%'}}>\r\n                    <Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\r\n                        <Step>\r\n                            <StepLabel>Step 1</StepLabel>\r\n                            <StepContent displayPrint=\"block\">\r\n                                <Grid container spacing={4} justify=\"center\">\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            className={classes.button}\r\n                                            startIcon={<PublishIcon/>}\r\n                                            component=\"label\"\r\n                                        >\r\n                                            Load data input\r\n                                            <input\r\n                                                accept=\"application/JSON\"\r\n                                                type=\"file\"\r\n                                                hidden\r\n                                                onChange={this.onLoadInput}\r\n                                            />\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} container>\r\n                                        <Grid item style={{flexGrow: 1}}><Divider variant=\"middle\"/></Grid>\r\n                                        <Grid item style={{transform: 'translateY(-50%)'}}>Or</Grid>\r\n                                        <Grid item style={{flexGrow: 1}}><Divider variant=\"middle\"/></Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                                    <Grid container spacing={4}>\r\n                                        <Grid container item xs={12} spacing={1} justify=\"center\">\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <Autocomplete\r\n                                                    margin=\"dense\"\r\n                                                    id=\"district\"\r\n                                                    value={this.state.District}\r\n                                                    options={this.state.currentDistricts}\r\n                                                    size=\"small\"\r\n                                                    style={{marginTop: 8, marginBottom: 4}}\r\n                                                    onChange={(event, value, reason) => {\r\n                                                        if (value == null)\r\n                                                            this.setState({\r\n                                                                District: value,\r\n                                                                County: null,\r\n                                                                currentCounties: Object.keys(counties)\r\n                                                            });\r\n                                                        else\r\n                                                            this.setState({\r\n                                                                District: value,\r\n                                                                County: null,\r\n                                                                currentCounties: districts[value]\r\n                                                            });\r\n                                                    }}\r\n                                                    renderInput={(params) => <TextField dense {...params}\r\n                                                                                        variant=\"filled\"\r\n                                                                                        className={classes.inputWithHelper}\r\n                                                                                        required\r\n                                                                                        error={!this.state.District}\r\n                                                                                        label={<>DISTRICT<IconButton\r\n                                                                                            aria-label=\"info\"\r\n                                                                                            className={classes.margin}\r\n                                                                                            size=\"small\">\r\n                                                                                            <InfoIcon fontSize=\"small\"\r\n                                                                                                      onClick={this.handleOpenHelper({src: DistrictPic}, true)}\r\n                                                                                                      onMouseEnter={this.handleOpenHelper({src: DistrictPic})}\r\n                                                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                                                            /></IconButton></>}\r\n                                                    />}/>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <Autocomplete\r\n                                                    margin=\"dense\"\r\n                                                    id=\"county\"\r\n                                                    value={this.state.County}\r\n                                                    options={this.state.currentCounties}\r\n                                                    onChange={(event, value) => {\r\n                                                        if (value)\r\n                                                            this.setState({\r\n                                                                County: value,\r\n                                                                District: counties[value].length === 1 ? counties[value][0] : null\r\n                                                            });\r\n                                                        else\r\n                                                            this.setState({County: value})\r\n                                                    }}\r\n                                                    size=\"small\"\r\n                                                    style={{marginTop: 8, marginBottom: 4}}\r\n                                                    renderInput={(params) => <TextField dense {...params}\r\n                                                                                        className={classes.inputWithHelper}\r\n                                                                                        label={<>COUNTY<IconButton\r\n                                                                                            aria-label=\"info\"\r\n                                                                                            className={classes.margin}\r\n                                                                                            size=\"small\">\r\n                                                                                            <InfoIcon fontSize=\"small\"\r\n                                                                                                      onClick={this.handleOpenHelper({map: 'county'}, true)}\r\n                                                                                                      onMouseEnter={this.handleOpenHelper({map: 'county'})}\r\n                                                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                                                            /></IconButton></>}\r\n                                                                                        variant=\"filled\"/>}/>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <Autocomplete\r\n                                                    margin=\"dense\"\r\n                                                    id=\"highway\"\r\n                                                    options={highway}\r\n                                                    value={this.state.Highway}\r\n                                                    onChange={(event, value) => this.handleChange('Highway', value)}\r\n                                                    size=\"small\"\r\n                                                    freeSolo\r\n                                                    autoSelect={true}\r\n                                                    style={{marginTop: 8, marginBottom: 4}}\r\n                                                    renderInput={(params) => <TextField dense {...params}\r\n                                                                                        label=\"HIGHWAY\"\r\n                                                                                        variant=\"filled\"/>}/>\r\n                                            </Grid>\r\n                                            {/*<Grid item xs={12} sm={6} md={3}>*/}\r\n                                            {/*    <TextField*/}\r\n                                            {/*        margin=\"dense\"*/}\r\n                                            {/*        id=\"DirectionOfConstruction\"*/}\r\n                                            {/*        label=\"DIRECTION OF CONSTRUCTION\"*/}\r\n                                            {/*        value={this.state.DirectionOfConstruction}*/}\r\n                                            {/*        onChange={(event) => this.handleChange('DirectionOfConstruction', event.target.value)}*/}\r\n                                            {/*        variant=\"filled\"/>*/}\r\n                                            {/*</Grid>*/}\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"control\"\r\n                                                    label=\"CONTROL\"\r\n                                                    value={this.state.Control}\r\n                                                    onChange={(event) => this.handleChange('Control', event.target.value)}\r\n                                                    variant=\"filled\"/>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"section\"\r\n                                                    label=\"SECTION\"\r\n                                                    value={this.state.Section}\r\n                                                    onChange={(event) => this.handleChange('Section', event.target.value)}\r\n                                                    variant=\"filled\"/>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"job\"\r\n                                                    label=\"JOB\"\r\n                                                    value={this.state.Job}\r\n                                                    onChange={(event) => this.handleChange('Job', event.target.value)}\r\n                                                    variant=\"filled\"/>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"ProjectScope\"\r\n                                                    className={classes.inputWithHelper}\r\n                                                    label={<>Project Scope <IconButton aria-label=\"info\"\r\n                                                                                       className={classes.margin}\r\n                                                                                       size=\"small\">\r\n                                                        <InfoIcon fontSize=\"small\"\r\n                                                                  onClick={this.handleOpenHelper({text: \"Will be provided later.\"}, true)}\r\n                                                                  onMouseEnter={this.handleOpenHelper({text: \"Will be provided later.\"})}\r\n                                                                  onMouseLeave={this.handleCloseHelper}\r\n                                                        />\r\n                                                    </IconButton></>}\r\n                                                    select\r\n                                                    value={this.state.ProjectScope}\r\n                                                    onChange={(event) => this.handleChange('ProjectScope', event.target.value)}\r\n                                                    variant=\"filled\">\r\n                                                    <MenuItem value=\"NEW CONSTRUCTION\">New Construction</MenuItem>\r\n                                                    <MenuItem value=\"REHABILITATION\">Rehabilitation</MenuItem>\r\n                                                    <MenuItem value=\"WIDENING\">Widening</MenuItem>\r\n                                                </TextField>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"StationBegin\"\r\n                                                    label=\"STATION (BEGIN)\"\r\n                                                    value={this.state.StationBegin}\r\n                                                    onChange={(event) => this.handleChange('StationBegin', event.target.value)}\r\n                                                    variant=\"filled\"/>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"StationEnd\"\r\n                                                    label=\"STATION (END)\"\r\n                                                    value={this.state.StationEnd}\r\n                                                    onChange={(event) => this.handleChange('StationEnd', event.target.value)}\r\n                                                    variant=\"filled\"/>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={3}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"date\"\r\n                                                    type=\"date\"\r\n                                                    label=\"DATE\"\r\n                                                    value={this.state.Date}\r\n                                                    onChange={(event) => this.handleChange('Date', event.target.value)}\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    variant=\"filled\"/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} spacing={1}>\r\n                                            <TextField\r\n                                                id=\"comment\"\r\n                                                label=\"COMMENTS\"\r\n                                                multiline\r\n                                                onChange={(event) => this.handleChange('Comment', event.target.value)}\r\n                                                rows={4}\r\n                                                defaultValue=\"\"\r\n                                                variant=\"filled\"\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </form>\r\n                                {getGroupControl()}\r\n                            </StepContent>\r\n                        </Step>\r\n                        <Step>\r\n                            <StepLabel>Step 2</StepLabel>\r\n                            <StepContent displayPrint=\"block\">\r\n                                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                                    <Grid container spacing={4}>\r\n                                        <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                            <Grid item xs={12} justify=\"flex-start\">\r\n                                                <Typography variant={'h6'}>Basic Design Information</Typography>\r\n                                            </Grid>\r\n                                            <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                                  alignItems=\"flex-end\">\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Design life (years)</span>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        type={'number'}\r\n                                                        value={this.state.DesignLife}\r\n                                                        onChange={(event) => this.handleChangeSliderInput(event, 'DesignLife')}\r\n                                                        onBlur={() => this.handleBlurSliderInput('DesignLife', 1, 50)}\r\n                                                        id=\"DesignLife\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            min: 1,\r\n                                                            max: 50,\r\n                                                            type: 'number',\r\n                                                        }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Total number of lanes in one direction</span>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        type={'number'}\r\n                                                        value={this.state.LanesOneDirection}\r\n                                                        onChange={(event) => this.handleChangeSliderInput(event, 'LanesOneDirection')}\r\n                                                        onBlur={() => this.handleBlurSliderInput('LanesOneDirection', 1, 10)}\r\n                                                        id=\"LanesOneDirection\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            min: 1,\r\n                                                            max: 10,\r\n                                                            type: 'number',\r\n                                                        }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Total design traffic in one direction (million ESAL)</span>\r\n                                                        <IconButton aria-label=\"info\" className={classes.margin}\r\n                                                                    size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onClick={this.handleOpenHelper({src: TrafficOneDirectionPic}, true)}\r\n                                                                      onMouseEnter={this.handleOpenHelper({src: TrafficOneDirectionPic})}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        type={\"number\"}\r\n                                                        value={this.state.TrafficOneDirection}\r\n                                                        onChange={(event) => this.handleChangeSliderInput(event, 'TrafficOneDirection')}\r\n                                                        onBlur={() => this.handleBlurSliderInput('TrafficOneDirection', 10, 500)}\r\n                                                        id=\"TrafficOneDirection\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            min: 1,\r\n                                                            max: 500,\r\n                                                            type: 'number',\r\n                                                        }}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                            <Grid item xs={12} container justify=\"flex-start\">\r\n                                                <Typography variant={'h6'}>Structural Design Criteria</Typography>\r\n                                                <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onClick={this.handleOpenHelper({src: StructureDesignCriteriaPic}, true)}\r\n                                                              onMouseEnter={this.handleOpenHelper({src: StructureDesignCriteriaPic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                            </Grid>\r\n                                            <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                                  alignItems=\"flex-end\">\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Acceptable punchout per mile</span>\r\n                                                        <IconButton aria-label=\"info\" className={classes.margin}\r\n                                                                    size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onClick={this.handleOpenHelper({src: AcceptableNumberofPunchoutPic}, true)}\r\n                                                                      onMouseEnter={this.handleOpenHelper({src: AcceptableNumberofPunchoutPic})}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        type={\"number\"}\r\n                                                        value={this.state.PunchoutsPerMile}\r\n                                                        onChange={(event) => this.handleChangeSliderInput(event, 'PunchoutsPerMile')}\r\n                                                        onBlur={() => this.handleBlurSliderInput('PunchoutsPerMile', 5, 20)}\r\n                                                        id=\"PunchoutsPerMile\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            min: 5,\r\n                                                            max: 20,\r\n                                                            type: 'number',\r\n                                                        }}\r\n                                                        disabled\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                            <Grid item xs={12} container justify=\"flex-start\">\r\n                                                <Typography variant={'h6'}>Concrete Layer/Material\r\n                                                    Information</Typography>\r\n                                                {/*<IconButton aria-label=\"info\" className={classes.margin} size=\"small\">*/}\r\n                                                {/*    <InfoIcon fontSize=\"small\"*/}\r\n                                                {/*              onClick={this.handleOpenHelper({src: ConcreteLayerPic}, true)}*/}\r\n                                                {/*              onMouseEnter={this.handleOpenHelper({src: ConcreteLayerPic})}*/}\r\n                                                {/*              onMouseLeave={this.handleCloseHelper}*/}\r\n                                                {/*    />*/}\r\n                                                {/*</IconButton>*/}\r\n                                            </Grid>\r\n                                            <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                                  alignItems=\"flex-end\">\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>28-day modulus of rupture (psi)</span>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        value={this.state.ModulusOfRupture}\r\n                                                        onChange={(event) => this.handleChangeSliderInput(event, 'ModulusOfRupture')}\r\n                                                        onBlur={() => this.handleBlurSliderInput('ModulusOfRupture', 1, 1000)}\r\n                                                        id=\"ModulusOfRupture\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            min: 1,\r\n                                                            max: 1000,\r\n                                                            type: 'number',\r\n                                                        }}\r\n                                                        disabled\r\n                                                    />\r\n                                                </Grid>\r\n\r\n\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Concrete elastic modulus (million psi)</span>\r\n                                                        <IconButton aria-label=\"info\"\r\n                                                                    className={classes.margin} size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onClick={this.handleOpenHelper({text: \"Will be provided later.\"}, true)}\r\n                                                                      onMouseEnter={this.handleOpenHelper({text: \"Will be provided later.\"})}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        value={this.state.ElasticModulue}\r\n                                                        onChange={(event) => this.handleChangeSliderInput(event, 'ElasticModulue')}\r\n                                                        onBlur={() => this.handleBlurSliderInput('ElasticModulue', 1, 1000)}\r\n                                                        id=\"ModulusOfRupture\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            min: 1,\r\n                                                            max: 1000,\r\n                                                            type: 'number',\r\n                                                        }}\r\n                                                        disabled\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </form>\r\n                                {getGroupControl()}\r\n                            </StepContent>\r\n                        </Step>\r\n                        <Step>\r\n                            <StepLabel>Step 3</StepLabel>\r\n                            <StepContent displayPrint=\"block\">\r\n                                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                                    <Grid container spacing={4}>\r\n                                        <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                            <Grid item xs={12} justify=\"flex-start\">\r\n                                                <Typography variant={'h6'}>Subgrade and Treatment\r\n                                                    Information</Typography>\r\n                                            </Grid>\r\n                                            <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                                  alignItems=\"flex-end\">\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Soil classification system</span>\r\n                                                        <IconButton aria-label=\"info\" className={classes.margin}\r\n                                                                    size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onClick={this.handleOpenHelper({src: soilSystermPic}, true)}\r\n                                                                      onMouseEnter={this.handleOpenHelper({src: soilSystermPic})}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <Input\r\n                                                        value={this.state.SoilClassificationSystem}\r\n                                                        onChange={(event, newValue) => this.setState({SoilClassificationSystem: newValue})}\r\n                                                        id=\"SoilClassificationSystem\"\r\n                                                        disabled\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Soil classification of subgrade</span>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <Autocomplete\r\n                                                        margin=\"dense\"\r\n                                                        id=\"SoilSub\"\r\n                                                        options={soilClassSub}\r\n                                                        size=\"small\"\r\n                                                        onChange={(event, value) => this.handleSoilSub(value)}\r\n                                                        renderInput={(params) => <TextField dense {...params}\r\n                                                                                            label=\"\"/>}/>\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Plasticity Index (PI)</span>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField type=\"number\" id=\"PlasticityIndex\"\r\n                                                               value={this.state.PlasticityIndex}\r\n                                                               onChange={(event) => this.handlePlasticityIndex(event.target.value)}/>\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Subgrade treatment</span>\r\n                                                        <IconButton aria-label=\"info\" className={classes.margin}\r\n                                                                    size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onClick={this.handleOpenHelper({src: subbasePic,href:'https://ftp.dot.state.tx.us/pub/txdot/mtd/treatment-guidelines.pdf'}, true)}\r\n                                                                      onMouseEnter={this.handleOpenHelper({src: subbasePic})}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        margin=\"dense\"\r\n                                                        id=\"SubbaseType\"\r\n                                                        select\r\n                                                        value={this.state.SubbaseType}\r\n                                                        size=\"small\"\r\n                                                        onChange={(event) => {\r\n                                                            this.handleChange('SubbaseType', event.target.value);\r\n                                                            if(event.target.value===\"No treatment\")\r\n                                                                this.setState({SubbaseThickness:0})\r\n                                                        }}\r\n                                                    >\r\n                                                        {this.state.SubbaseTypeOpt.map(d => <MenuItem value={d}\r\n                                                                                                      key={d}>{d}</MenuItem>)}\r\n                                                    </TextField>\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Subgrade treatment thickness (in.)</span>\r\n                                                        <IconButton aria-label=\"info\" className={classes.margin}\r\n                                                                    size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onClick={this.handleOpenHelper({src: subbasePic}, true)}\r\n                                                                      onMouseEnter={this.handleOpenHelper({src: subbasePic})}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        error={this.errorFunc.Step3.SubbaseThickness()||this.warningFunc.Step3.SubbaseThickness()}\r\n                                                        helperText={this.errorFunc.Step3.SubbaseThickness()||this.warningFunc.Step3.SubbaseThickness()}\r\n                                                        disabled={(this.state.SubbaseThickness===0)&&(this.state.SubbaseType==='No treatment')}\r\n                                                        type=\"number\" id=\"SubbaseThickness\"\r\n                                                        value={this.state.SubbaseThickness}\r\n                                                        onChange={(event) => ((event.target.value > 0) || (event.target.value === '')) ? this.handleChange(\"SubbaseThickness\", event.target.value) : ''}\r\n                                                        inputProps={{min: 0}}\r\n                                                    />\r\n                                                </Grid>\r\n                                                {/*<Grid item xs={8} justify=\"flex-start\">*/}\r\n                                                {/*    <Grid container xs={12} justify=\"flex-start\">*/}\r\n                                                {/*        <span>Composite K (psi/in.)</span>*/}\r\n                                                {/*        <span className={classes.dot} style={{flexGrow:1}}/>*/}\r\n                                                {/*    </Grid>*/}\r\n                                                {/*</Grid>*/}\r\n                                                {/*<Grid item xs={4}>*/}\r\n                                                {/*    <input type=\"number\" id=\"19\" value={this.state.CompositeK} onChange={(event, newValue) => this.setState({CompositeK:newValue})}/>*/}\r\n                                                {/*</Grid>*/}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                            <Grid item xs={12} justify=\"flex-start\">\r\n                                                <Typography variant={'h6'}>Base Layer Information</Typography>\r\n                                            </Grid>\r\n                                            <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                                  alignItems=\"flex-end\">\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Base type</span>\r\n                                                        <IconButton\r\n                                                            aria-label=\"info\"\r\n                                                            className={classes.margin}\r\n                                                            size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onMouseEnter={this.handleOpenHelper({src: BasetypePic})}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            /></IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        select\r\n                                                        margin=\"dense\"\r\n                                                        id=\"BaseType\"\r\n                                                        size=\"small\"\r\n                                                        value={this.state.BaseType}\r\n                                                        onChange={(event) => {\r\n                                                            this.handleBaseType(event.target.value)\r\n                                                        }}\r\n                                                    >\r\n                                                        {this.state.baseTypeOpt.map(d => <MenuItem value={d}\r\n                                                                                                   key={d}>{d}</MenuItem>)}\r\n                                                    </TextField>\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Base layer thickness (inches)</span>\r\n                                                        <IconButton aria-label=\"info\"\r\n                                                                    className={classes.margin} size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onMouseEnter={this.handleOpenHelper({\r\n                                                                          text: <>\r\n                                                                              <div>Minimum Cap.</div>\r\n                                                                              <div>CTB ≥ 6.0 in.</div>\r\n                                                                              <div>HMA ≥ 4.0 in</div>\r\n                                                                          </>\r\n                                                                      })}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField\r\n                                                        error={this.errorFunc.Step3.BaseThickness()}\r\n                                                        helperText={this.errorFunc.Step3.BaseThickness()}\r\n                                                        value={this.state.BaseThickness}\r\n                                                        onChange={(event) => this.handleChange('BaseThickness', event.target.value)}\r\n                                                        id=\"BaseThickness\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            min: this.state.BaseThicknessMin,\r\n                                                            max: this.state.BaseThicknessMax,\r\n                                                            type: 'number',\r\n                                                        }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={8} justify=\"flex-start\">\r\n                                                    <Grid container xs={12} justify=\"flex-start\">\r\n                                                        <span>Modulus of base layer (ksi)</span>\r\n                                                        <IconButton aria-label=\"info\"\r\n                                                                    className={classes.margin} size=\"small\">\r\n                                                            <InfoIcon fontSize=\"small\"\r\n                                                                      onMouseEnter={this.handleOpenHelper({\r\n                                                                          text: <>\r\n                                                                              <div>CTB = 500 ksi</div>\r\n                                                                              <div>HMA = 400 ksi</div>\r\n                                                                          </>\r\n                                                                      })}\r\n                                                                      onMouseLeave={this.handleCloseHelper}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                        <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <TextField type=\"number\" id=\"ModulusBase \"\r\n                                                               value={this.state.ModulusBase}\r\n                                                               disabled\r\n                                                               onChange={(event) => this.setState({ModulusBase: event.target.value})}/>\r\n                                                </Grid>\r\n                                                {/*<Grid item xs={8} justify=\"flex-start\">*/}\r\n                                                {/*    <Grid container xs={12} justify=\"flex-start\">*/}\r\n                                                {/*        <span>Composite k-Value</span>*/}\r\n                                                {/*        <IconButton aria-label=\"info\"*/}\r\n                                                {/*                    className={classes.margin} size=\"small\">*/}\r\n                                                {/*            <InfoIcon fontSize=\"small\"*/}\r\n                                                {/*                      onMouseEnter={this.handleOpenHelper({text: 'Composite k table'})}*/}\r\n                                                {/*                      onMouseLeave={this.handleCloseHelper}*/}\r\n                                                {/*            />*/}\r\n                                                {/*        </IconButton>*/}\r\n                                                {/*        <span className={classes.dot} style={{flexGrow: 1}}/>*/}\r\n                                                {/*    </Grid>*/}\r\n                                                {/*</Grid>*/}\r\n                                                {/*<Grid item xs={4}>*/}\r\n                                                {/*    <TextField type=\"number\" id=\"CompositeK \"*/}\r\n                                                {/*               value={this.state.CompositeK}*/}\r\n                                                {/*               disabled/>*/}\r\n                                                {/*</Grid>*/}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </form>\r\n                                {getGroupControl()}\r\n                            </StepContent>\r\n                        </Step>\r\n                        <Step>\r\n                            <StepLabel>Result</StepLabel>\r\n                            <StepContent displayPrint=\"block\">\r\n                            </StepContent>\r\n                        </Step>\r\n                    </Stepper>\r\n                    {this.state.activeStep === this.state.stepsLength && (\r\n                        <>\r\n                            <Paper square elevation={0} className={classes.resetContainer}>\r\n                                <Button onClick={this.handleModify} className={classes.button}\r\n                                        size=\"small\"\r\n                                        startIcon={<EditIcon/>}\r\n                                >\r\n                                    Modify\r\n                                </Button>\r\n                                <Button onClick={this.handleReset} className={classes.button}\r\n                                        size=\"small\"\r\n                                        startIcon={<RefreshIcon/>}\r\n                                >\r\n                                    Reset\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classes.button}\r\n                                    startIcon={<PrintIcon/>}\r\n                                    // onClick={()=>this.props.print(this.state)}\r\n                                    onClick={() => {\r\n                                        if (window.matchMedia) {\r\n                                            var mediaQueryList = window.matchMedia('print');\r\n                                            mediaQueryList.addListener((mql) =>{\r\n                                                if (!mql.matches) {\r\n                                                    this.setState({isBackdropOpen: false});\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                        window.onafterprint =  ()=> {\r\n                                            this.setState({isBackdropOpen: false});\r\n                                        }\r\n                                        this.setState({isBackdropOpen: true, printRequest: true});\r\n                                        // window.print();\r\n\r\n                                    }}\r\n                                >\r\n                                    Print\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    // onClick={()=>this.props.print(this.state)}\r\n                                    onClick={this.onSaveInput}\r\n                                >\r\n                                    Save input\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classes.button}\r\n                                    startIcon={<ShowChartIcon/>}\r\n                                    // onClick={()=>this.props.print(this.state)}\r\n                                    onClick={() => this.setState({openAnalytics: true})}\r\n                                >\r\n                                    ANALYSIS RESULT\r\n                                </Button>\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    variant=\"contained\"\r\n                                    onClick={this.props.toMenu}\r\n                                    className={classes.button}\r\n                                    startIcon={<HomeIcon/>}\r\n                                >\r\n                                    To Main Menu\r\n                                </Button>\r\n                            </Paper>\r\n                        </>\r\n                    )}\r\n                </Grid>\r\n                {this.state.finished ? <Grid item style={{width: 'calc(100% - 220px)'}}>\r\n                    <Report\r\n                        data={this.state}\r\n                        AnalysisPunchouts={this.props.AnalysisPunchouts()}\r\n                        AnalysisSlabThickness={this.props.AnalysisSlabThickness()}\r\n                    />\r\n                </Grid> : ''}\r\n            </Grid>\r\n        </Paper>\r\n            {(this.state.helperEl && this.state.helperEl.content && !this.state.helperEl.content.map) ?\r\n                <Popper\r\n                    placement=\"right\"\r\n                    disablePortal={false}\r\n                    open={true}\r\n                    anchorEl={this.state.helperEl.el}\r\n                    modifiers={{\r\n                        flip: {\r\n                            enabled: true,\r\n                        },\r\n                        preventOverflow: {\r\n                            enabled: true,\r\n                            boundariesElement: 'window',\r\n                        },\r\n                        arrow: {\r\n                            enabled: true,\r\n                        },\r\n                    }}\r\n                    style={{zIndex: 4}}\r\n                >\r\n                    <Card className={classes.helpHolder}>\r\n                        {this.state.helperEl.freeze ? <IconButton aria-label=\"close\" className={classes.closeButton}\r\n                                                                  onClick={this.handleCloseHelper}>\r\n                            <CloseIcon/>\r\n                        </IconButton> : ''}\r\n                        {this.state.helperEl.content.src ?\r\n                            <a href={this.state.helperEl.content.href} target={\"_blank\"}>\r\n                            <TransformWrapper\r\n                                defaultScale={1}\r\n                                defaultPositionX={1}\r\n                                defaultPositionY={1}\r\n                            >\r\n                                <TransformComponent>\r\n                                    <img\r\n                                        src={this.state.helperEl.content.src}\r\n                                        style={{maxWidth: 600, height: 'auto'}}\r\n                                    /></TransformComponent></TransformWrapper> </a>:\r\n                            this.state.helperEl.content.text\r\n                        }\r\n                    </Card>\r\n                </Popper> : ''\r\n            }\r\n            <Backdrop\r\n                sx={{ color: '#fff'}}\r\n                style={{zIndex: 10}}\r\n                open={isBackdropOpen}\r\n            >\r\n            </Backdrop>\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth={\"lg\"}\r\n                open={!!this.state.openAnalytics}\r\n                onClose={() => this.setState({openAnalytics: false})}>\r\n                <DialogTitle id=\"responsive-dialog-title\"\r\n                             onClose={() => this.setState({openAnalytics: false})}>Analysis</DialogTitle>\r\n                <DialogContent>\r\n                    {this.state.finished ? <Graph\r\n                        rows={this.state.rows}\r\n                        AnalysisPunchouts={this.props.AnalysisPunchouts}\r\n                        init={this.state.activeStep === this.state.stepsLength}\r\n                        parameter={{...this.state}}/> : ''}\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Popper\r\n                placement=\"right\"\r\n                disablePortal={false}\r\n                open={!!(this.state.helperEl && this.state.helperEl.content && this.state.helperEl.content.map)}\r\n                anchorEl={this.state.helperEl && this.state.helperEl.el}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: true,\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: true,\r\n                        boundariesElement: 'window',\r\n                    },\r\n                    arrow: {\r\n                        enabled: true,\r\n                    },\r\n                }}\r\n                style={{zIndex: 4}}\r\n            >\r\n                <Card style={{width: 600}}>\r\n                    {this.state.helperEl && this.state.helperEl.freeze ?\r\n                        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={this.handleCloseHelper}>\r\n                            <CloseIcon/>\r\n                        </IconButton> : ''}\r\n\r\n                    <County highlight={this.state.currentCounties}\r\n                            target={this.state.County}\r\n                            selected={(value) => {\r\n                                if (value)\r\n                                    this.setState({\r\n                                        County: value,\r\n                                        District: counties[value].length === 1 ? counties[value][0] : null\r\n                                    });\r\n                                else\r\n                                    this.setState({County: value})\r\n                            }}/>\r\n                </Card>\r\n            </Popper>\r\n        </Container>);\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CRCP);\r\n","import React from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {AppBar,IconButton,Typography,Button,Toolbar,Grid,Slide} from '@material-ui/core';\nimport coverPic from './image/cover.jpg';\nimport CRCP from './component/CRCP'\nimport Report from \"./component/report\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  titleNav: {\n    flexGrow: 1,\n  },\n  title: {\n    color: 'white'\n  },\n  cover: {\n    width:'100%',\n    position:'fixed',\n    background: `linear-gradient(0deg,rgba(0,0,0,0) 0,#000 100%), url(${coverPic}) no-repeat center center fixed`,\n    backgroundSize: 'cover',\n    height: '100vh',\n    overflow: 'hidden',\n    zIndex: -1\n  },\n}));\n\nfunction App() {\n  const [page, setPage] = React.useState('home');\n  const [reportData, setReportData] = React.useState({});\n  const [AnalysisPunchouts, setAnalysisPunchouts] = React.useState(0);\n  const [AnalysisSlabThickness, setAnalysisSlabThickness] = React.useState(0);\n  const classes = useStyles();\n  const AnalysisPunchoutsFunc = (d)=>d===undefined?AnalysisPunchouts:setAnalysisPunchouts(d);\n  const AnalysisSlabThicknessFunc = (d)=>d===undefined?AnalysisSlabThickness:setAnalysisSlabThickness(d);\n  return (\n    <div >\n      <div className={classes.cover}></div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.titleNav}>\n            TxCRCP-ME\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.root}>\n        <Slide direction=\"up\" in={page==='home'} mountOnEnter unmountOnExit>\n          <Grid container spacing={5} alignItems=\"center\" justify=\"center\" direction={\"column\"} style={{height: 'calc(100vh - 64px)',width:'100%'}}>\n            <Grid item>\n              <Typography variant=\"h3\" className={classes.title}>\n                TxDOT Mechanistic-Empirical CRCP Design System\n              </Typography>\n            </Grid>\n            <Grid container item alignItems=\"stretch\" justify=\"center\" direction={\"column\"} spacing={3} style={{width:'fit-content'}}>\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\" style={{width:'100%'}} onClick={()=>setPage('CRCP')}>CRCP Design</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" style={{width:'100%'}}>Slab Support</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" style={{width:'100%'}}>Product Disclaimer</Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Slide>\n        <Slide direction=\"up\" in={page==='CRCP'} mountOnEnter unmountOnExit>\n          <CRCP\n              toMenu={()=>setPage('home')}\n              // print={(d)=>{setReportData(d);setPage('Print')}}\n              AnalysisPunchouts={AnalysisPunchoutsFunc}\n              AnalysisSlabThickness={AnalysisSlabThicknessFunc}\n          />\n        </Slide>\n        {/*<Slide direction=\"up\" in={page==='Print'} mountOnEnter unmountOnExit>*/}\n        {/*  <Report*/}\n        {/*      data={reportData}*/}\n        {/*      toMenu={()=>setPage('home')}*/}\n        {/*      toCRCP={()=>setPage('CRCP')}*/}\n        {/*      AnalysisPunchouts={AnalysisPunchoutsFunc()}*/}\n        {/*  />*/}\n        {/*</Slide>*/}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}